{
.appVersion = "1230";
DisplayStrings = (
fox
);
copyright = "This Font Software is licensed under the SIL Open Font License, Version 1.1.";
customParameters = (
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
},
{
name = "Virtual Master";
value = (
{
Axis = Weight;
Location = 0;
},
{
Axis = Width;
Location = 0;
}
);
},
{
name = "Enforce Compatibility Check";
value = 1;
}
);
date = "2020-09-29 09:10:42 +0000";
designer = "Mateo Broillet / e-t-c typefoundry";
designerURL = www.mateobroillet.ch;
familyName = Seymaz;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature salt;\012feature ss01;\012feature calt;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb circumflexcomb dieresiscomb dotaccentcomb gravecomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [cedillacomb];\012	sub [i]' @CombiningTopAccents by [idotless];\012	sub [i]' @CombiningNonTopAccents @CombiningTopAccents by [idotless];\012} ccmp_Other_1;\012";
name = ccmp;
},
{
code = "sub f t by f_t;\012sub i t by i_t;\012\012";
name = dlig;
},
{
code = "sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f i by f_i;\012sub f l by f_l;\012sub t i by t_i;";
name = liga;
},
{
automatic = 1;
code = "sub E by E.ss01;\012sub Eacute by Eacute.ss01;\012sub Ecircumflex by Ecircumflex.ss01;\012sub Edieresis by Edieresis.ss01;\012sub Egrave by Egrave.ss01;\012sub F by F.ss01;\012sub J by J.ss01;\012sub L by L.ss01;\012sub T by T.ss01;\012sub f by f.ss01;\012sub y by y.ss01;\012sub one by one.ss01;\012";
name = salt;
},
{
automatic = 1;
code = "sub E by E.ss01;\012sub Eacute by Eacute.ss01;\012sub Ecircumflex by Ecircumflex.ss01;\012sub Edieresis by Edieresis.ss01;\012sub Egrave by Egrave.ss01;\012sub F by F.ss01;\012sub J by J.ss01;\012sub L by L.ss01;\012sub T by T.ss01;\012sub f by f.ss01;\012sub y by y.ss01;\012sub one by one.ss01;\012";
name = ss01;
},
{
code = "sub f' a by f.ss01;\012sub f' aacute by f.ss01;\012sub f' acircumflex by f.ss01;\012sub f' adieresis by f.ss01;\012sub f' agrave by f.ss01;\012sub f' aring by f.ss01;\012sub f' atilde by f.ss01;\012sub f' ae by f.ss01;\012sub f' c by f.ss01;\012sub f' ccedilla by f.ss01;\012sub f' e by f.ss01;\012sub f' eacute by f.ss01;\012sub f' ecircumflex by f.ss01;\012sub f' edieresis by f.ss01;\012sub f' egrave by f.ss01;\012sub f' g by f.ss01;\012sub f' m by f.ss01;\012sub f' n by f.ss01;\012sub f' ntilde by f.ss01;\012sub f' o by f.ss01;\012sub f' oacute by f.ss01;\012sub f' ocircumflex by f.ss01;\012sub f' odieresis by f.ss01;\012sub f' ograve by f.ss01;\012sub f' oslash by f.ss01;\012sub f' otilde by f.ss01;\012sub f' oe by f.ss01;\012sub f' p by f.ss01;\012sub f' q by f.ss01;\012sub f' r by f.ss01;\012sub f' s by f.ss01;\012sub f' u by f.ss01;\012sub f' uacute by f.ss01;\012sub f' ucircumflex by f.ss01;\012sub f' udieresis by f.ss01;\012sub f' ugrave by f.ss01;\012sub f' v by f.ss01;\012sub f' w by f.ss01;\012sub f' wacute by f.ss01;\012sub f' wcircumflex by f.ss01;\012sub f' wdieresis by f.ss01;\012sub f' wgrave by f.ss01;\012sub f' x by f.ss01;\012sub f' y by f.ss01;\012sub f' yacute by f.ss01;\012sub f' ycircumflex by f.ss01;\012sub f' ydieresis by f.ss01;\012sub f' ygrave by f.ss01;\012sub f' y.ss01 by f.ss01;\012sub f' z by f.ss01;";
name = calt;
}
);
fontMaster = (
{
alignmentZones = (
"{690, 16}",
"{690, 13}",
"{600, 13}",
"{0, -13}",
"{-90, -13}"
);
ascender = 690;
capHeight = 690;
custom = Slanted;
descender = -90;
guideLines = (
{
position = "{-189, 370}";
},
{
position = "{178, 331}";
},
{
position = "{98, 300}";
},
{
position = "{-17, 11}";
},
{
position = "{144, 702}";
},
{
position = "{132, 612}";
},
{
position = "{34, 423}";
},
{
position = "{126, 300}";
},
{
position = "{-91, 589}";
},
{
position = "{30, 679}";
}
);
horizontalStems = (
11,
78
);
id = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
italicAngle = 12;
userData = {
GSCornerRadius = "15";
};
verticalStems = (
12
);
weight = Light;
weightValue = 50;
width = Condensed;
widthValue = 1;
xHeight = 600;
},
{
alignmentZones = (
"{730, 16}",
"{690, 12}",
"{600, 13}",
"{0, -13}",
"{-130, -13}"
);
ascender = 730;
capHeight = 690;
custom = Slanted;
descender = -130;
guideLines = (
{
angle = 90;
position = "{-189, 370}";
},
{
position = "{-12, 288}";
},
{
angle = 262.9734;
position = "{122, 300}";
},
{
position = "{6, -75}";
},
{
position = "{108, 741}";
},
{
position = "{162, 612}";
},
{
position = "{178, 359}";
},
{
position = "{98, 575}";
},
{
position = "{157, 819}";
},
{
position = "{17, 690}";
}
);
horizontalStems = (
75,
118
);
id = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
italicAngle = 12;
userData = {
GSCornerRadius = 15;
};
verticalStems = (
80
);
weight = Bold;
weightValue = 700;
width = Condensed;
widthValue = 1;
xHeight = 600;
}
);
glyphs = (
{
color = 4;
glyphname = A;
lastChange = "2020-09-26 15:43:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"114 0 LINE",
"260 685 LINE",
"229 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-58 0 LINE",
"22 0 LINE",
"92 327 LINE",
"104 327 LINE",
"34 0 LINE"
);
},
{
closed = 1;
nodes = (
"161 655 LINE",
"173 655 LINE",
"119 402 LINE",
"107 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 0 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-22 0 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE",
"-46 0 LINE",
"30 359 LINE",
"42 359 LINE",
"-34 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"45 370 LINE",
"33 370 LINE"
);
}
);
width = 48;
}
);
note = A;
unicode = 0041;
},
{
color = 4;
glyphname = Aacute;
lastChange = "2020-09-17 07:14:46 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -2, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C1;
},
{
color = 4;
glyphname = Acircumflex;
lastChange = "2020-09-17 07:15:11 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -42, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -77, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C2;
},
{
color = 4;
glyphname = Adieresis;
lastChange = "2020-09-17 07:15:31 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -27, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -75, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C4;
},
{
color = 4;
glyphname = Agrave;
lastChange = "2020-09-16 15:46:31 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 27, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C0;
},
{
color = 4;
glyphname = Aring;
lastChange = "2020-09-17 07:15:44 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, -34, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, -78, -1}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C5;
},
{
color = 4;
glyphname = Atilde;
lastChange = "2020-09-17 07:16:34 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -77, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C3;
},
{
color = 4;
glyphname = AE;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"92 327 LINE",
"104 327 LINE",
"34 0 LINE",
"206 0 LINE",
"273 314 LINE",
"193 314 LINE",
"142 76 LINE",
"130 76 LINE",
"183 326 LINE",
"275 326 LINE",
"291 401 LINE",
"199 401 LINE",
"253 656 LINE",
"265 656 LINE",
"214 413 LINE",
"294 413 LINE",
"361 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"161 655 LINE",
"173 655 LINE",
"119 402 LINE",
"107 402 LINE"
);
}
);
width = 276;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"30 359 LINE",
"42 359 LINE",
"-34 0 LINE",
"2 0 LINE",
"75 345 LINE",
"63 345 LINE",
"-8 11 LINE",
"-20 11 LINE",
"54 357 LINE",
"78 357 LINE",
"80 368 LINE",
"56 368 LINE",
"122 679 LINE",
"134 679 LINE",
"71 380 LINE",
"83 380 LINE",
"149 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"45 370 LINE",
"33 370 LINE"
);
}
);
width = 72;
}
);
unicode = 00C6;
},
{
color = 4;
glyphname = B;
lastChange = "2020-09-26 15:40:47 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{2, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"97 730 LINE",
"-58 0 LINE",
"75 0 LINE",
"124 45 LINE",
"190 356 LINE",
"157 356 LINE",
"159 368 LINE",
"192 368 LINE",
"260 685 LINE",
"229 730 LINE"
);
},
{
closed = 1;
nodes = (
"38 75 LINE",
"91 325 LINE",
"103 325 LINE",
"50 75 LINE"
);
},
{
closed = 1;
nodes = (
"161 655 LINE",
"173 655 LINE",
"119 400 LINE",
"107 400 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
4 11 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 8 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{2, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 0}";
type = Stem;
},
{
place = "{42, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"89 690 LINE",
"-58 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"54 356 LINE",
"49 356 LINE",
"51 368 LINE",
"56 368 LINE",
"123 682 LINE",
"117 690 LINE"
);
},
{
closed = 1;
nodes = (
"-44 11 LINE",
"30 357 LINE",
"42 357 LINE",
"-32 11 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"44 368 LINE",
"32 368 LINE"
);
}
);
width = 48;
}
);
note = B;
unicode = 0042;
},
{
color = 4;
glyphname = C;
lastChange = "2020-09-26 15:40:29 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"162 655 LINE",
"174 655 LINE",
"113 370 LINE",
"193 370 LINE",
"260 685 LINE",
"230 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"191 358 LINE",
"111 358 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"99 679 LINE",
"111 679 LINE",
"45 370 LINE",
"57 370 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"54 358 LINE",
"42 358 LINE"
);
}
);
width = 48;
}
);
note = C;
unicode = 0043;
},
{
color = 4;
glyphname = Ccedilla;
lastChange = "2020-09-17 07:16:52 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 143, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 78, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C7;
},
{
color = 4;
glyphname = D;
lastChange = "2020-09-26 15:43:08 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"229 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"75 0 LINE",
"124 45 LINE",
"260 685 LINE"
);
},
{
closed = 1;
nodes = (
"173 655 LINE",
"50 75 LINE",
"38 75 LINE",
"161 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"117 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"123 682 LINE"
);
},
{
closed = 1;
nodes = (
"110 679 LINE",
"-32 11 LINE",
"-44 11 LINE",
"98 679 LINE"
);
}
);
width = 48;
}
);
note = D;
unicode = 0044;
},
{
color = 4;
glyphname = Eth;
lastChange = "2020-09-17 07:58:40 +0000";
layers = (
{
components = (
{
name = D;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"5 308 LINE",
"163 308 LINE",
"179 383 LINE",
"21 383 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = D;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 340 LINE",
"46 340 LINE",
"48 351 LINE",
"14 351 LINE"
);
}
);
width = 48;
}
);
unicode = 00D0;
},
{
color = 4;
glyphname = E;
lastChange = "2020-10-01 09:36:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"202 414 LINE",
"269 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"114 0 LINE",
"181 315 LINE",
"101 315 LINE",
"50 75 LINE",
"38 75 LINE",
"161 655 LINE",
"173 655 LINE",
"122 414 LINE"
);
},
{
closed = 1;
nodes = (
"21 327 LINE",
"184 327 LINE",
"199 402 LINE",
"36 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
},
{
place = "{47, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"59 380 LINE",
"125 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-22 0 LINE",
"51 345 LINE",
"39 345 LINE",
"-32 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"110 679 LINE",
"47 380 LINE"
);
},
{
closed = 1;
nodes = (
"19 357 LINE",
"54 357 LINE",
"56 368 LINE",
"21 368 LINE"
);
}
);
width = 48;
}
);
note = E;
unicode = 0045;
},
{
color = 4;
glyphname = Eacute;
lastChange = "2020-10-01 10:22:05 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C9;
},
{
color = 4;
glyphname = Ecircumflex;
lastChange = "2020-10-01 10:22:13 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -78, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00CA;
},
{
color = 4;
glyphname = Edieresis;
lastChange = "2020-10-01 10:23:13 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -31, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -75, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00CB;
},
{
color = 4;
glyphname = Egrave;
lastChange = "2020-10-01 10:23:23 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 46, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C8;
},
{
color = 4;
glyphname = F;
lastChange = "2020-10-01 09:36:21 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"202 414 LINE",
"269 730 LINE",
"229 730 LINE",
"137 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"22 0 LINE",
"38 75 LINE",
"161 655 LINE",
"173 655 LINE",
"122 414 LINE"
);
},
{
closed = 1;
nodes = (
"21 327 LINE",
"184 327 LINE",
"199 402 LINE",
"36 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 9 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 12 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 8}";
type = Stem;
},
{
place = "{49, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"61 389 LINE",
"125 690 LINE",
"102 690 LINE",
"95 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-46 0 LINE",
"-30 75 LINE",
"98 679 LINE",
"110 679 LINE",
"49 389 LINE"
);
},
{
closed = 1;
nodes = (
"21 366 LINE",
"56 366 LINE",
"58 377 LINE",
"23 377 LINE"
);
}
);
width = 48;
}
);
note = F;
unicode = 0046;
},
{
color = 4;
glyphname = G;
lastChange = "2020-09-26 15:43:11 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 0 LINE",
"124 45 LINE",
"199 400 LINE",
"119 400 LINE",
"50 75 LINE",
"38 75 LINE",
"162 655 LINE",
"174 655 LINE",
"122 412 LINE",
"202 412 LINE",
"260 685 LINE",
"230 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-48 45 LINE",
"-19 0 LINE"
);
},
{
closed = 1;
nodes = (
"181 325 LINE",
"196 400 LINE",
"113 400 LINE",
"98 325 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 9 11 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-30 0 LINE",
"-20 8 LINE",
"54 358 LINE",
"42 358 LINE",
"-31 11 LINE",
"-43 11 LINE",
"99 679 LINE",
"111 679 LINE",
"45 370 LINE",
"57 370 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-56 8 LINE",
"-50 0 LINE"
);
},
{
closed = 1;
nodes = (
"49 346 LINE",
"51 358 LINE",
"35 358 LINE",
"33 346 LINE"
);
}
);
width = 48;
}
);
note = G;
unicode = 0047;
},
{
color = 4;
glyphname = H;
lastChange = "2020-09-26 15:40:04 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"189 730 LINE",
"119 402 LINE",
"107 402 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"22 0 LINE",
"92 327 LINE",
"104 327 LINE",
"34 0 LINE",
"114 0 LINE",
"269 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"113 690 LINE",
"44 368 LINE",
"32 368 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-46 0 LINE",
"30 357 LINE",
"42 357 LINE",
"-34 0 LINE",
"-22 0 LINE",
"125 690 LINE"
);
}
);
width = 48;
}
);
note = H;
unicode = 0048;
},
{
color = 4;
glyphname = I;
lastChange = "2020-09-26 15:40:27 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
},
{
origin = "{0, 2}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 24;
}
);
note = I;
unicode = 0049;
},
{
color = 4;
glyphname = Iacute;
lastChange = "2020-09-17 07:21:38 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -66, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -78, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CD;
},
{
color = 4;
glyphname = Icircumflex;
lastChange = "2020-09-17 07:21:49 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -75, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -90, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CE;
},
{
color = 4;
glyphname = Idieresis;
lastChange = "2020-09-17 07:22:05 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -73, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -86, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CF;
},
{
color = 4;
glyphname = Igrave;
lastChange = "2020-09-17 07:24:56 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -9, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 28, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CC;
},
{
color = 4;
glyphname = J;
lastChange = "2020-09-26 15:41:25 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"79 643 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"270 730 LINE",
"98 730 LINE",
"82 655 LINE",
"174 655 LINE",
"50 75 LINE",
"38 75 LINE",
"159 643 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
1 4 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
},
{
place = "{88, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"84 667 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"125 690 LINE",
"89 690 LINE",
"87 679 LINE",
"111 679 LINE",
"-31 11 LINE",
"-43 11 LINE",
"96 667 LINE"
);
}
);
width = 48;
}
);
note = J;
unicode = 004A;
},
{
color = 4;
glyphname = K;
lastChange = "2020-09-26 15:40:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"91 325 LINE",
"103 325 LINE",
"34 0 LINE",
"114 0 LINE",
"190 358 LINE",
"157 358 LINE",
"160 370 LINE",
"193 370 LINE",
"269 730 LINE",
"189 730 LINE",
"119 400 LINE",
"107 400 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
place = "{42, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"30 357 LINE",
"42 357 LINE",
"-34 0 LINE",
"-22 0 LINE",
"54 357 LINE",
"49 357 LINE",
"51 368 LINE",
"56 368 LINE",
"125 690 LINE",
"113 690 LINE",
"44 368 LINE",
"32 368 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = K;
unicode = 004B;
},
{
color = 4;
glyphname = L;
lastChange = "2020-10-01 09:25:50 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = down;
type = TopGhost;
},
{
origin = "{0, 1}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"97 730 LINE",
"-58 0 LINE",
"28 0 LINE",
"44 75 LINE",
"38 75 LINE",
"177 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"89 690 LINE",
"-58 0 LINE",
"-40 0 LINE",
"-38 11 LINE",
"-44 11 LINE",
"101 690 LINE"
);
}
);
width = 24;
}
);
note = T;
unicode = 004C;
},
{
color = 4;
glyphname = M;
lastChange = "2020-09-26 15:41:33 +0000";
layers = (
{
guideLines = (
{
angle = 90;
position = "{22, 615}";
}
);
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 16}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"161 655 LINE",
"173 655 LINE",
"34 0 LINE",
"114 0 LINE",
"253 655 LINE",
"265 655 LINE",
"126 0 LINE",
"206 0 LINE",
"361 730 LINE",
"281 730 LINE",
"276 705 LINE",
"264 705 LINE",
"269 730 LINE",
"189 730 LINE",
"184 705 LINE",
"172 705 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
13 10 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"98 679 LINE",
"110 679 LINE",
"-34 0 LINE",
"-22 0 LINE",
"122 679 LINE",
"134 679 LINE",
"-10 0 LINE",
"2 0 LINE",
"149 690 LINE",
"137 690 LINE",
"137 690 LINE",
"125 690 LINE",
"125 690 LINE",
"113 690 LINE",
"113 690 LINE",
"101 690 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
}
);
width = 72;
}
);
note = M;
unicode = 004D;
},
{
color = 4;
glyphname = N;
lastChange = "2020-09-26 15:40:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"161 655 LINE",
"173 655 LINE",
"34 0 LINE",
"114 0 LINE",
"269 730 LINE",
"230 730 LINE",
"189 730 LINE",
"184 705 LINE",
"172 705 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"-34 0 LINE",
"-23 0 LINE",
"124 690 LINE",
"117 690 LINE",
"113 690 LINE",
"113 690 LINE",
"101 690 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 47;
}
);
note = N;
unicode = 004E;
},
{
color = 4;
glyphname = Ntilde;
lastChange = "2020-09-17 07:25:11 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -37, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -78, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 47;
}
);
unicode = 00D1;
},
{
color = 4;
glyphname = O;
lastChange = "2020-09-26 15:43:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"260 685 LINE",
"231 730 LINE",
"138 730 LINE",
"88 685 LINE"
);
},
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"162 655 LINE",
"174 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE"
);
},
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"99 679 LINE",
"111 679 LINE"
);
}
);
width = 48;
}
);
note = O;
unicode = 004F;
},
{
color = 4;
glyphname = Oacute;
lastChange = "2020-09-17 07:25:22 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -3, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -68, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D3;
},
{
color = 4;
glyphname = Ocircumflex;
lastChange = "2020-09-17 07:25:31 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -39, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -78, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D4;
},
{
color = 4;
glyphname = Odieresis;
lastChange = "2020-09-17 07:25:42 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -27, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -75, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D6;
},
{
color = 4;
glyphname = Ograve;
lastChange = "2020-09-17 07:25:50 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 35, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D2;
},
{
color = 4;
glyphname = Oslash;
lastChange = "2020-09-17 07:27:14 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-27 -75 LINE",
"53 -75 LINE",
"71 12 LINE",
"-9 12 LINE"
);
},
{
closed = 1;
nodes = (
"129 657 LINE",
"209 657 LINE",
"244 819 LINE",
"164 819 LINE"
);
},
{
closed = 1;
nodes = (
"53 308 LINE",
"133 308 LINE",
"149 383 LINE",
"69 383 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = O;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-65 -90 LINE",
"-53 -90 LINE",
"-32 6 LINE",
"-44 6 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"131 780 LINE",
"119 780 LINE"
);
},
{
closed = 1;
nodes = (
"16 339 LINE",
"50 339 LINE",
"52 351 LINE",
"18 351 LINE"
);
}
);
width = 48;
}
);
unicode = 00D8;
},
{
color = 4;
glyphname = Otilde;
lastChange = "2020-09-17 07:36:20 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -26, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -78, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D5;
},
{
color = 4;
glyphname = OE;
lastChange = "2020-09-17 07:36:37 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"207 0 LINE",
"274 315 LINE",
"194 315 LINE",
"143 75 LINE",
"131 75 LINE",
"254 655 LINE",
"266 655 LINE",
"215 414 LINE",
"295 414 LINE",
"362 730 LINE",
"190 730 LINE",
"35 0 LINE"
);
},
{
closed = 1;
nodes = (
"277 327 LINE",
"292 402 LINE",
"129 402 LINE",
"114 327 LINE"
);
}
);
width = 277;
},
{
components = (
{
name = O;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"3 0 LINE",
"76 345 LINE",
"64 345 LINE",
"-7 11 LINE",
"-19 11 LINE",
"122 675 LINE",
"134 675 LINE",
"72 380 LINE",
"84 380 LINE",
"150 690 LINE",
"114 690 LINE",
"-33 0 LINE"
);
},
{
closed = 1;
nodes = (
"79 357 LINE",
"81 368 LINE",
"46 368 LINE",
"44 357 LINE"
);
}
);
width = 73;
}
);
unicode = 0152;
},
{
color = 4;
glyphname = P;
lastChange = "2020-09-26 15:41:35 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"229 730 LINE",
"97 730 LINE",
"-58 -1 LINE",
"22 -1 LINE",
"69 219 LINE",
"122 219 LINE",
"170 264 LINE",
"260 685 LINE"
);
},
{
closed = 1;
nodes = (
"97 294 LINE",
"85 294 LINE",
"161 655 LINE",
"173 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"117 689 LINE",
"89 689 LINE",
"-58 -1 LINE",
"-46 -1 LINE",
"1 219 LINE",
"17 219 LINE",
"26 227 LINE",
"123 681 LINE"
);
},
{
closed = 1;
nodes = (
"15 230 LINE",
"3 230 LINE",
"98 678 LINE",
"110 678 LINE"
);
}
);
width = 48;
}
);
note = P;
unicode = 0050;
},
{
color = 4;
glyphname = Thorn;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"133 90 LINE",
"242 600 LINE",
"212 645 LINE",
"148 645 LINE",
"166 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"21 0 LINE",
"35 64 LINE",
"31 45 LINE",
"85 45 LINE"
);
},
{
closed = 1;
nodes = (
"60 120 LINE",
"48 120 LINE",
"143 570 LINE",
"155 570 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"3 119 LINE",
"114 639 LINE",
"107 647 LINE",
"91 647 LINE",
"101 690 LINE",
"89 690 LINE",
"-63 -23 LINE",
"-51 -23 LINE",
"-18 130 LINE",
"-23 111 LINE",
"-7 111 LINE"
);
},
{
closed = 1;
nodes = (
"-8 122 LINE",
"-20 122 LINE",
"89 636 LINE",
"101 636 LINE"
);
}
);
width = 48;
}
);
unicode = 00DE;
},
{
color = 4;
glyphname = Q;
lastChange = "2020-09-26 15:40:13 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 6}";
target = "{2, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 6}";
target = "{1, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{2, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-11 -23 LINE",
"-25 -87 LINE",
"45 -87 LINE",
"59 -23 LINE",
"45 51 LINE",
"33 51 LINE"
);
},
{
closed = 1;
nodes = (
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"260 685 LINE",
"231 730 LINE",
"138 730 LINE",
"88 685 LINE"
);
},
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"162 655 LINE",
"174 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-47 -5 LINE",
"-55 -45 LINE",
"-43 -45 LINE",
"-35 -5 LINE",
"-36 8 LINE",
"-40 8 LINE"
);
},
{
closed = 1;
nodes = (
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE"
);
},
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"99 679 LINE",
"111 679 LINE"
);
}
);
width = 48;
}
);
note = Q;
unicode = 0051;
},
{
color = 4;
glyphname = R;
lastChange = "2020-09-26 15:40:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"91 325 LINE",
"103 325 LINE",
"34 0 LINE",
"114 0 LINE",
"190 356 LINE",
"157 356 LINE",
"159 368 LINE",
"192 368 LINE",
"260 685 LINE",
"229 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"161 655 LINE",
"173 655 LINE",
"119 400 LINE",
"107 400 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 11 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 0}";
type = Stem;
},
{
place = "{42, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"30 357 LINE",
"42 357 LINE",
"-34 0 LINE",
"-22 0 LINE",
"54 357 LINE",
"48 357 LINE",
"50 368 LINE",
"56 368 LINE",
"123 682 LINE",
"117 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"44 368 LINE",
"32 368 LINE"
);
}
);
width = 48;
}
);
note = R;
unicode = 0052;
},
{
color = 4;
glyphname = S;
lastChange = "2020-09-26 15:41:37 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"158 387 LINE",
"105 387 LINE",
"162 655 LINE",
"174 655 LINE",
"119 399 LINE",
"199 399 LINE",
"259 679 LINE",
"229 730 LINE",
"138 730 LINE",
"87 679 LINE",
"17 349 LINE",
"49 312 LINE",
"102 312 LINE",
"51 75 LINE",
"39 75 LINE",
"87 300 LINE",
"7 300 LINE",
"-47 45 LINE",
"-17 0 LINE",
"73 0 LINE",
"124 45 LINE",
"189 349 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"46 358 LINE",
"30 358 LINE",
"99 679 LINE",
"111 679 LINE",
"45 370 LINE",
"57 370 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"18 355 LINE",
"24 347 LINE",
"40 347 LINE",
"-31 11 LINE",
"-43 11 LINE",
"25 334 LINE",
"13 334 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"53 350 LINE"
);
}
);
width = 48;
}
);
note = S;
unicode = 0053;
},
{
color = 4;
glyphname = T;
lastChange = "2020-09-26 15:40:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"79 359 LINE",
"142 655 LINE",
"154 655 LINE",
"15 0 LINE",
"95 0 LINE",
"234 655 LINE",
"246 655 LINE",
"183 359 LINE",
"243 359 LINE",
"322 730 LINE",
"98 730 LINE",
"19 359 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 237;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"33 370 LINE",
"98 679 LINE",
"110 679 LINE",
"-34 0 LINE",
"-22 0 LINE",
"122 679 LINE",
"134 679 LINE",
"69 370 LINE",
"81 370 LINE",
"149 690 LINE",
"89 690 LINE",
"21 370 LINE"
);
}
);
width = 72;
}
);
note = T;
unicode = 0054;
},
{
color = 4;
glyphname = U;
lastChange = "2020-09-26 15:41:29 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 0 LINE",
"124 45 LINE",
"270 730 LINE",
"190 730 LINE",
"50 75 LINE",
"38 75 LINE",
"178 730 LINE",
"98 730 LINE",
"-48 45 LINE",
"-19 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-30 0 LINE",
"-20 8 LINE",
"125 690 LINE",
"113 690 LINE",
"-31 11 LINE",
"-43 11 LINE",
"101 690 LINE",
"89 690 LINE",
"-56 8 LINE",
"-50 0 LINE"
);
}
);
width = 48;
}
);
note = U;
unicode = 0055;
},
{
color = 4;
glyphname = Uacute;
lastChange = "2020-09-17 07:37:24 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 2, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DA;
},
{
color = 4;
glyphname = Ucircumflex;
lastChange = "2020-09-17 07:37:35 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -34, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -78, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DB;
},
{
color = 4;
glyphname = Udieresis;
lastChange = "2020-09-17 07:38:07 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -26, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -75, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DC;
},
{
color = 4;
glyphname = Ugrave;
lastChange = "2020-09-16 15:49:21 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D9;
},
{
color = 4;
glyphname = V;
lastChange = "2020-09-26 15:42:41 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"269 730 LINE",
"189 730 LINE",
"50 75 LINE",
"38 75 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-52 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"125 690 LINE",
"113 690 LINE",
"-32 11 LINE",
"-44 11 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = V;
unicode = 0056;
},
{
color = 4;
glyphname = W;
lastChange = "2020-09-26 15:40:53 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 19}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-48 45 LINE",
"-18 0 LINE",
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"34 0 LINE",
"114 0 LINE",
"120 25 LINE",
"132 25 LINE",
"126 0 LINE",
"167 0 LINE",
"216 45 LINE",
"362 730 LINE",
"282 730 LINE",
"142 75 LINE",
"130 75 LINE",
"270 730 LINE",
"190 730 LINE",
"50 75 LINE",
"38 75 LINE",
"178 730 LINE",
"98 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 277;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 19}";
type = Stem;
},
{
place = "{-33, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-56 8 LINE",
"-50 0 LINE",
"-46 0 LINE",
"-44 6 LINE",
"-32 6 LINE",
"-34 0 LINE",
"-22 0 LINE",
"-20 6 LINE",
"-8 6 LINE",
"-10 0 LINE",
"-6 0 LINE",
"4 8 LINE",
"149 690 LINE",
"137 690 LINE",
"-6 17 LINE",
"-18 17 LINE",
"125 690 LINE",
"113 690 LINE",
"-30 17 LINE",
"-42 17 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 72;
}
);
note = W;
unicode = 0057;
},
{
color = 4;
glyphname = Wacute;
lastChange = "2020-09-17 07:38:39 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 42, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 277;
},
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -55, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E82;
},
{
color = 4;
glyphname = Wcircumflex;
lastChange = "2020-09-17 07:39:19 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 277;
},
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -65, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 0174;
},
{
color = 4;
glyphname = Wdieresis;
lastChange = "2020-09-17 07:39:31 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 277;
},
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -63, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E84;
},
{
color = 4;
glyphname = Wgrave;
lastChange = "2020-09-17 07:39:41 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 58, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 277;
},
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 50, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E80;
},
{
color = 4;
glyphname = X;
lastChange = "2020-09-26 15:41:15 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"92 327 LINE",
"104 327 LINE",
"34 0 LINE",
"114 0 LINE",
"190 358 LINE",
"157 358 LINE",
"160 370 LINE",
"193 370 LINE",
"269 730 LINE",
"189 730 LINE",
"119 402 LINE",
"107 402 LINE",
"177 730 LINE",
"97 730 LINE",
"21 370 LINE",
"54 370 LINE",
"51 358 LINE",
"18 358 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
place = "{26.5, 24}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-45 0 LINE",
"31 359 LINE",
"43 359 LINE",
"-33 0 LINE",
"-21 0 LINE",
"55 359 LINE",
"49 359 LINE",
"52 370 LINE",
"58 370 LINE",
"126 690 LINE",
"114 690 LINE",
"46 370 LINE",
"34 370 LINE",
"102 690 LINE",
"90 690 LINE",
"22 370 LINE",
"28 370 LINE",
"25 359 LINE",
"19 359 LINE",
"-57 0 LINE"
);
}
);
width = 49;
}
);
note = X;
unicode = 0058;
},
{
color = 4;
glyphname = Y;
lastChange = "2020-09-26 15:43:05 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"69 162 LINE",
"57 162 LINE",
"178 730 LINE",
"98 730 LINE",
"-29 132 LINE",
"1 87 LINE",
"53 87 LINE",
"51 75 LINE",
"-42 75 LINE",
"-58 0 LINE",
"76 0 LINE",
"125 45 LINE",
"270 730 LINE",
"190 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 9 4 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 4 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 3 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-26 34 LINE",
"-38 34 LINE",
"102 690 LINE",
"90 690 LINE",
"-50 31 LINE",
"-44 23 LINE",
"-28 23 LINE",
"-31 11 LINE",
"-55 11 LINE",
"-57 0 LINE",
"-31 0 LINE",
"-19 8 LINE",
"126 690 LINE",
"114 690 LINE"
);
}
);
width = 49;
}
);
note = Y;
unicode = 0059;
},
{
color = 4;
glyphname = Yacute;
lastChange = "2020-09-17 07:40:52 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 3, -1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -71, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 49;
}
);
unicode = 00DD;
},
{
color = 4;
glyphname = Ycircumflex;
lastChange = "2020-09-17 07:41:04 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -35, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -76, -2}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 49;
}
);
unicode = 0176;
},
{
color = 4;
glyphname = Ydieresis;
lastChange = "2020-09-17 07:41:15 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -26, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -74, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 49;
}
);
unicode = 0178;
},
{
color = 4;
glyphname = Ygrave;
lastChange = "2020-09-17 07:41:26 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 49;
}
);
unicode = 1EF2;
},
{
color = 4;
glyphname = Z;
lastChange = "2020-09-26 15:43:04 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-48 45 LINE",
"-17 0 LINE",
"114 0 LINE",
"124 45 LINE",
"178 300 LINE",
"98 300 LINE",
"50 75 LINE",
"38 75 LINE",
"89 312 LINE",
"181 312 LINE",
"260 685 LINE",
"230 730 LINE",
"98 730 LINE",
"27 399 LINE",
"107 399 LINE",
"162 655 LINE",
"174 655 LINE",
"117 387 LINE",
"25 387 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
9 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 9 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-56 8 LINE",
"-50 0 LINE",
"-22 0 LINE",
"-12 45 LINE",
"49 334 LINE",
"37 334 LINE",
"-31 11 LINE",
"-43 11 LINE",
"28 346 LINE",
"52 346 LINE",
"123 682 LINE",
"117 690 LINE",
"89 690 LINE",
"21 369 LINE",
"33 369 LINE",
"99 679 LINE",
"111 679 LINE",
"42 357 LINE",
"18 357 LINE"
);
}
);
width = 48;
}
);
note = Z;
unicode = 005A;
},
{
color = 4;
glyphname = E.ss01;
lastChange = "2020-10-01 09:47:55 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 327 LINE",
"113 402 LINE",
"53 402 LINE",
"34 327 LINE"
);
},
{
closed = 1;
nodes = (
"173 655 LINE",
"189 730 LINE",
"145 730 LINE",
"129 655 LINE"
);
},
{
closed = 1;
nodes = (
"34 0 LINE",
"50 75 LINE",
"6 75 LINE",
"-10 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"33 340 LINE",
"35 351 LINE",
"17 351 LINE",
"26 340 LINE"
);
},
{
closed = 1;
nodes = (
"105 679 LINE",
"107 690 LINE",
"101 690 LINE",
"98 679 LINE"
);
},
{
closed = 1;
nodes = (
"-40 0 LINE",
"-38 11 LINE",
"-52 11 LINE",
"-47 0 LINE"
);
}
);
width = 24;
}
);
note = E;
},
{
color = 4;
glyphname = Eacute.ss01;
lastChange = "2020-10-01 09:49:03 +0000";
layers = (
{
components = (
{
name = E.ss01;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -66, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = E.ss01;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -78, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Ecircumflex.ss01;
lastChange = "2020-10-01 09:50:47 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -73, 0}";
},
{
name = E.ss01;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 99;
},
{
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -88, -2}";
},
{
name = E.ss01;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Edieresis.ss01;
lastChange = "2020-10-01 09:51:40 +0000";
layers = (
{
components = (
{
name = E.ss01;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -66, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = E.ss01;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -84, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Egrave.ss01;
lastChange = "2020-10-01 09:52:13 +0000";
layers = (
{
components = (
{
name = E.ss01;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 5, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = E.ss01;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 34, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = F.ss01;
lastChange = "2020-10-01 09:36:28 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 327 LINE",
"113 402 LINE",
"53 402 LINE",
"34 327 LINE"
);
},
{
closed = 1;
nodes = (
"173 655 LINE",
"189 730 LINE",
"145 730 LINE",
"129 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"33 340 LINE",
"35 351 LINE",
"17 351 LINE",
"26 340 LINE"
);
},
{
closed = 1;
nodes = (
"105 679 LINE",
"107 690 LINE",
"101 690 LINE",
"98 679 LINE"
);
}
);
width = 24;
}
);
note = E;
},
{
color = 4;
glyphname = J.ss01;
lastChange = "2020-09-26 14:57:59 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"183 730 LINE",
"97 730 LINE",
"81 655 LINE",
"87 655 LINE",
"-52 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-45 0 LINE",
"102 690 LINE",
"83 690 LINE",
"81 679 LINE",
"87 679 LINE",
"-57 0 LINE"
);
}
);
width = 25;
}
);
note = T;
},
{
color = 4;
glyphname = L.ss01;
lastChange = "2020-10-01 09:42:54 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"114 0 LINE",
"130 75 LINE",
"38 75 LINE",
"161 655 LINE",
"173 655 LINE",
"52 87 LINE",
"132 87 LINE",
"269 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 3}";
type = Stem;
},
{
place = "{-29, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-22 0 LINE",
"-20 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"110 679 LINE",
"-29 23 LINE",
"-17 23 LINE",
"125 690 LINE",
"99 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = L;
},
{
color = 4;
glyphname = T.ss01;
lastChange = "2020-09-26 15:43:26 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"167 655 LINE",
"173 655 LINE",
"189 730 LINE",
"97 730 LINE",
"81 655 LINE",
"87 655 LINE",
"-52 0 LINE",
"28 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
place = "{82.5, 24}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"99 679 LINE",
"105 679 LINE",
"108 690 LINE",
"84 690 LINE",
"81 679 LINE",
"87 679 LINE",
"-57 0 LINE",
"-45 0 LINE"
);
}
);
width = 25;
}
);
note = T;
},
{
color = 4;
glyphname = a;
lastChange = "2020-09-26 15:39:27 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 16}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"110 600 LINE",
"60 555 LINE",
"30 413 LINE",
"110 413 LINE",
"134 525 LINE",
"146 525 LINE",
"120 401 LINE",
"68 401 LINE",
"18 356 LINE",
"-48 45 LINE",
"-19 0 LINE",
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"34 0 LINE",
"114 0 LINE",
"232 553 LINE",
"203 600 LINE"
);
},
{
closed = 1;
nodes = (
"38 75 LINE",
"92 326 LINE",
"104 326 LINE",
"50 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
17 14 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 600 LINE",
"68 592 LINE",
"30 412 LINE",
"42 412 LINE",
"79 589 LINE",
"91 589 LINE",
"51 400 LINE",
"35 400 LINE",
"26 392 LINE",
"-56 8 LINE",
"-51 0 LINE",
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-22 0 LINE",
"104 592 LINE",
"98 600 LINE"
);
},
{
closed = 1;
nodes = (
"-43 11 LINE",
"37 389 LINE",
"49 389 LINE",
"-31 11 LINE"
);
}
);
width = 48;
}
);
note = a;
unicode = 0061;
},
{
color = 4;
glyphname = aacute;
lastChange = "2020-09-16 15:54:42 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -35, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -91, -90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E1;
},
{
color = 4;
glyphname = acircumflex;
lastChange = "2020-09-16 15:54:21 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 37, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E2;
},
{
color = 4;
glyphname = adieresis;
lastChange = "2020-09-16 15:54:13 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = dieresis;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E4;
},
{
color = 4;
glyphname = agrave;
lastChange = "2020-09-16 15:53:06 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, -47, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, -13, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E0;
},
{
color = 4;
glyphname = aring;
lastChange = "2020-09-16 16:02:06 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 42, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = ring;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E5;
},
{
color = 4;
glyphname = atilde;
lastChange = "2020-09-16 16:03:52 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = tilde;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E3;
},
{
color = 4;
glyphname = ae;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
guideLines = (
{
position = "{124, 375}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"25 0 LINE",
"34 0 LINE",
"43 0 LINE",
"167 0 LINE",
"216 45 LINE",
"268 288 LINE",
"188 288 LINE",
"142 75 LINE",
"130 75 LINE",
"178 300 LINE",
"270 300 LINE",
"324 555 LINE",
"294 600 LINE",
"110 600 LINE",
"60 555 LINE",
"25 387 LINE",
"105 387 LINE",
"134 525 LINE",
"146 525 LINE",
"114 375 LINE",
"62 375 LINE",
"13 330 LINE",
"-48 45 LINE",
"-19 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 300 LINE",
"98 300 LINE",
"50 75 LINE",
"38 75 LINE"
);
},
{
closed = 1;
nodes = (
"226 525 LINE",
"238 525 LINE",
"206 375 LINE",
"194 375 LINE"
);
}
);
width = 277;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-40 0 LINE",
"-40 0 LINE",
"-34 0 LINE",
"-6 0 LINE",
"4 8 LINE",
"64 288 LINE",
"52 288 LINE",
"-7 11 LINE",
"-19 11 LINE",
"42 300 LINE",
"66 300 LINE",
"128 592 LINE",
"122 600 LINE",
"78 600 LINE",
"68 592 LINE",
"30 412 LINE",
"42 412 LINE",
"79 589 LINE",
"91 589 LINE",
"52 401 LINE",
"36 401 LINE",
"26 393 LINE",
"-56 8 LINE",
"-51 0 LINE"
);
},
{
closed = 1;
nodes = (
"37 390 LINE",
"49 390 LINE",
"-31 11 LINE",
"-43 11 LINE"
);
},
{
closed = 1;
nodes = (
"103 589 LINE",
"115 589 LINE",
"56 311 LINE",
"44 311 LINE"
);
}
);
width = 73;
}
);
unicode = 00E6;
},
{
color = 4;
glyphname = b;
lastChange = "2020-09-26 15:36:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"27 25 LINE",
"39 25 LINE",
"34 0 LINE",
"75 0 LINE",
"124 45 LINE",
"232 555 LINE",
"203 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"79 590 LINE",
"91 590 LINE",
"-32 11 LINE",
"-44 11 LINE"
);
}
);
width = 48;
}
);
note = b;
unicode = 0062;
},
{
color = 4;
glyphname = c;
lastChange = "2020-09-26 15:36:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"134 525 LINE",
"146 525 LINE",
"98 300 LINE",
"177 300 LINE",
"231 555 LINE",
"202 600 LINE",
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-19 0 LINE",
"74 0 LINE",
"123 45 LINE",
"175 288 LINE",
"96 288 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"79 589 LINE",
"91 589 LINE",
"30 300 LINE",
"42 300 LINE",
"104 592 LINE",
"98 600 LINE",
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"40 288 LINE",
"28 288 LINE"
);
}
);
width = 49;
}
);
note = c;
unicode = 0063;
},
{
color = 4;
glyphname = ccedilla;
lastChange = "2020-09-16 19:49:41 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 183;
},
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 8, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E7;
},
{
color = 4;
glyphname = d;
lastChange = "2020-09-26 15:39:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"34 0 LINE",
"114 0 LINE",
"270 730 LINE",
"190 730 LINE",
"157 575 LINE",
"145 575 LINE",
"150 600 LINE",
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-18 0 LINE"
);
},
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 5 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 5 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-22 0 LINE",
"125 690 LINE",
"113 690 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE"
);
},
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"-31 11 LINE",
"-43 11 LINE"
);
}
);
width = 48;
}
);
note = d;
unicode = 0064;
},
{
color = 4;
glyphname = eth;
lastChange = "2020-09-16 20:02:49 +0000";
layers = (
{
components = (
{
name = d;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"110 612 LINE",
"242 612 LINE",
"253 662 LINE",
"121 662 LINE"
);
}
);
width = 185;
},
{
components = (
{
name = d;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"74 612 LINE",
"105 612 LINE",
"108 624 LINE",
"77 624 LINE"
);
}
);
width = 48;
}
);
unicode = 00F0;
},
{
color = 4;
glyphname = e;
lastChange = "2020-09-26 15:34:11 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"176 288 LINE",
"96 288 LINE",
"50 75 LINE",
"38 75 LINE",
"86 300 LINE",
"178 300 LINE",
"232 555 LINE",
"202 600 LINE"
);
},
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"114 375 LINE",
"102 375 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"40 288 LINE",
"28 288 LINE",
"-31 11 LINE",
"-43 11 LINE",
"18 300 LINE",
"42 300 LINE",
"104 592 LINE",
"98 600 LINE"
);
},
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"32 311 LINE",
"20 311 LINE"
);
}
);
width = 49;
}
);
note = e;
unicode = 0065;
},
{
color = 4;
glyphname = eacute;
lastChange = "2020-09-17 08:55:40 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E9;
},
{
color = 4;
glyphname = ecircumflex;
lastChange = "2020-09-16 15:39:26 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 39, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = circumflex;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00EA;
},
{
color = 4;
glyphname = edieresis;
lastChange = "2020-09-16 15:42:27 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 39, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00EB;
},
{
color = 4;
glyphname = egrave;
lastChange = "2020-09-16 16:11:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -25, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E8;
},
{
color = 4;
glyphname = f;
lastChange = "2020-09-26 15:18:50 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"183 730 LINE",
"136 730 LINE",
"88 685 LINE",
"70 600 LINE",
"64 600 LINE",
"48 525 LINE",
"54 525 LINE",
"-58 0 LINE",
"22 0 LINE",
"134 525 LINE",
"140 525 LINE",
"156 600 LINE",
"150 600 LINE",
"161 655 LINE",
"167 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
},
{
place = "{62.5, 24}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"107 690 LINE",
"97 690 LINE",
"87 682 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-58 0 LINE",
"-46 0 LINE",
"79 589 LINE",
"85 589 LINE",
"88 600 LINE",
"82 600 LINE",
"98 679 LINE",
"104 679 LINE"
);
}
);
width = 24;
}
);
note = t;
unicode = 0066;
},
{
color = 4;
glyphname = g;
lastChange = "2020-09-26 15:12:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"47 -130 LINE",
"96 -85 LINE",
"232 555 LINE",
"242 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"150 600 LINE",
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-18 0 LINE",
"22 0 LINE",
"27 25 LINE",
"39 25 LINE",
"34 0 LINE",
"22 -55 LINE",
"10 -55 LINE",
"20 -12 LINE",
"-60 -12 LINE",
"-76 -85 LINE",
"-47 -130 LINE"
);
},
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-49 -90 LINE",
"-39 -82 LINE",
"106 600 LINE",
"106 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-50 -78 LINE",
"-62 -78 LINE",
"-48 -12 LINE",
"-60 -12 LINE",
"-75 -82 LINE",
"-69 -90 LINE"
);
},
{
closed = 1;
nodes = (
"80 589 LINE",
"92 589 LINE",
"-31 11 LINE",
"-43 11 LINE"
);
}
);
width = 48;
}
);
note = g;
unicode = 0067;
},
{
color = 4;
glyphname = h;
lastChange = "2020-09-26 15:34:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"34 0 LINE",
"114 0 LINE",
"232 555 LINE",
"203 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 48;
}
);
note = h;
unicode = 0068;
},
{
color = 4;
glyphname = i;
lastChange = "2020-09-26 15:36:16 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"70 600 LINE",
"150 600 LINE",
"22 0 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 730 LINE",
"97 730 LINE",
"72 612 LINE",
"153 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"70 600 LINE",
"82 600 LINE",
"-46 0 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"102 690 LINE",
"89 690 LINE",
"72 612 LINE",
"85 612 LINE"
);
}
);
width = 25;
}
);
note = i;
unicode = 0069;
},
{
color = 4;
glyphname = idotless;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"70 600 LINE",
"150 600 LINE",
"22 0 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"70 600 LINE",
"82 600 LINE",
"-46 0 LINE",
"-58 0 LINE"
);
}
);
width = 24;
}
);
note = i;
unicode = 0131;
},
{
color = 4;
glyphname = iacute;
lastChange = "2020-09-16 19:51:11 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -94, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -93, -90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00ED;
},
{
color = 4;
glyphname = icircumflex;
lastChange = "2020-09-16 19:52:47 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -107, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -108, -92}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EE;
},
{
color = 4;
glyphname = idieresis;
lastChange = "2020-09-16 19:52:37 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -100, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -105, -90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EF;
},
{
color = 4;
glyphname = igrave;
lastChange = "2020-09-16 16:27:47 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -36, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 7, -90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EC;
},
{
color = 4;
glyphname = j;
lastChange = "2020-09-26 15:38:11 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-61 -15 LINE",
"70 600 LINE",
"150 600 LINE",
"-5 -130 LINE",
"-85 -130 LINE"
);
},
{
closed = 1;
nodes = (
"178 730 LINE",
"98 730 LINE",
"73 612 LINE",
"153 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 12 0 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-47 49 LINE",
"70 600 LINE",
"82 600 LINE",
"-65 -90 LINE",
"-77 -90 LINE"
);
},
{
closed = 1;
nodes = (
"101 690 LINE",
"89 690 LINE",
"72 612 LINE",
"84 612 LINE"
);
}
);
width = 24;
}
);
note = j;
unicode = 006A;
},
{
color = 4;
glyphname = k;
lastChange = "2020-09-26 15:36:27 +0000";
layers = (
{
guideLines = (
{
angle = 270;
position = "{22, 420}";
}
);
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"87 308 LINE",
"99 308 LINE",
"34 0 LINE",
"114 0 LINE",
"186 339 LINE",
"153 339 LINE",
"156 351 LINE",
"189 351 LINE",
"242 600 LINE",
"162 600 LINE",
"115 383 LINE",
"103 383 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
place = "{30, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"18 300 LINE",
"30 300 LINE",
"-34 0 LINE",
"-22 0 LINE",
"42 300 LINE",
"36 300 LINE",
"38 311 LINE",
"44 311 LINE",
"106 600 LINE",
"94 600 LINE",
"32 311 LINE",
"20 311 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = k;
unicode = 006B;
},
{
color = 4;
glyphname = l;
lastChange = "2020-09-26 15:39:24 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
},
{
origin = "{0, 3}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"177 730 LINE",
"97 730 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE",
"-58 0 LINE"
);
}
);
width = 24;
}
);
note = l;
unicode = 006C;
},
{
color = 4;
glyphname = m;
lastChange = "2020-09-26 15:38:19 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 19}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"254 600 LINE",
"248 575 LINE",
"236 575 LINE",
"242 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"150 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"22 0 LINE",
"134 525 LINE",
"146 525 LINE",
"34 0 LINE",
"114 0 LINE",
"226 525 LINE",
"238 525 LINE",
"126 0 LINE",
"206 0 LINE",
"324 555 LINE",
"295 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
111 7 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
111 3 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
14 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 11}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"118 600 LINE",
"118 600 LINE",
"106 600 LINE",
"106 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"-46 0 LINE",
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"103 589 LINE",
"115 589 LINE",
"-10 0 LINE",
"2 0 LINE",
"129 592 LINE",
"123 600 LINE"
);
}
);
width = 72;
}
);
note = m;
unicode = 006D;
},
{
color = 4;
glyphname = n;
lastChange = "2020-09-26 14:40:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"34 0 LINE",
"114 0 LINE",
"232 555 LINE",
"203 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"150 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
background = {
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
}
);
paths = (
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
};
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 48;
}
);
note = n;
unicode = 006E;
},
{
color = 4;
glyphname = ntilde;
lastChange = "2020-09-16 19:53:06 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F1;
},
{
color = 4;
glyphname = o;
lastChange = "2020-09-26 15:39:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"232 555 LINE",
"202 600 LINE"
);
},
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"134 525 LINE",
"146 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"104 592 LINE",
"98 600 LINE"
);
},
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"79 589 LINE",
"91 589 LINE"
);
}
);
width = 48;
}
);
note = o;
unicode = 006F;
},
{
color = 4;
glyphname = oacute;
lastChange = "2020-09-16 19:53:32 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 60, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 14, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F3;
},
{
color = 4;
glyphname = ocircumflex;
lastChange = "2020-09-16 19:53:39 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = circumflex;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F4;
},
{
color = 4;
glyphname = odieresis;
lastChange = "2020-09-16 19:53:50 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F6;
},
{
color = 4;
glyphname = ograve;
lastChange = "2020-09-16 19:54:05 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -26, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -7, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F2;
},
{
color = 4;
glyphname = oslash;
lastChange = "2020-10-01 15:49:44 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-14 -12 LINE",
"66 -12 LINE",
"84 75 LINE",
"4 75 LINE"
);
},
{
closed = 1;
nodes = (
"102 540 LINE",
"182 540 LINE",
"198 612 LINE",
"118 612 LINE"
);
},
{
closed = 1;
nodes = (
"41 263 LINE",
"121 263 LINE",
"137 338 LINE",
"57 338 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = o;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-49 -12 LINE",
"-37 -12 LINE",
"-32 11 LINE",
"-44 11 LINE"
);
},
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"96 612 LINE",
"84 612 LINE"
);
},
{
closed = 1;
nodes = (
"5 295 LINE",
"39 295 LINE",
"42 307 LINE",
"8 307 LINE"
);
}
);
width = 48;
}
);
unicode = 00F8;
},
{
color = 4;
glyphname = otilde;
lastChange = "2020-09-16 19:55:55 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = tilde;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F5;
},
{
color = 4;
glyphname = oe;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"232 555 LINE",
"202 600 LINE"
);
},
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"134 525 LINE",
"146 525 LINE"
);
},
{
closed = 1;
nodes = (
"201 600 LINE",
"152 555 LINE",
"44 45 LINE",
"73 0 LINE",
"167 0 LINE",
"216 45 LINE",
"268 288 LINE",
"188 288 LINE",
"142 75 LINE",
"130 75 LINE",
"178 300 LINE",
"270 300 LINE",
"324 555 LINE",
"294 600 LINE"
);
},
{
closed = 1;
nodes = (
"226 525 LINE",
"238 525 LINE",
"206 375 LINE",
"194 375 LINE"
);
}
);
width = 277;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-22 0 LINE",
"106 600 LINE",
"98 600 LINE"
);
},
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"79 589 LINE",
"91 589 LINE"
);
},
{
closed = 1;
nodes = (
"102 600 LINE",
"94 600 LINE",
"-34 0 LINE",
"-26 0 LINE",
"-6 0 LINE",
"4 8 LINE",
"64 288 LINE",
"52 288 LINE",
"-7 11 LINE",
"-19 11 LINE",
"42 300 LINE",
"66 300 LINE",
"128 592 LINE",
"122 600 LINE"
);
},
{
closed = 1;
nodes = (
"103 589 LINE",
"115 589 LINE",
"56 311 LINE",
"44 311 LINE"
);
}
);
width = 73;
}
);
unicode = 0153;
},
{
color = 4;
glyphname = p;
lastChange = "2020-09-26 15:38:23 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"124 45 LINE",
"233 555 LINE",
"203 600 LINE",
"162 600 LINE",
"157 575 LINE",
"145 575 LINE",
"150 600 LINE",
"70 600 LINE",
"-85 -130 LINE",
"-5 -130 LINE",
"28 25 LINE",
"40 25 LINE",
"35 0 LINE",
"76 0 LINE"
);
},
{
closed = 1;
nodes = (
"51 75 LINE",
"39 75 LINE",
"134 525 LINE",
"146 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 3 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 3 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-20 8 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"70 600 LINE",
"-77 -90 LINE",
"-65 -90 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-30 0 LINE"
);
},
{
closed = 1;
nodes = (
"-32 11 LINE",
"-44 11 LINE",
"79 589 LINE",
"91 589 LINE"
);
}
);
width = 48;
}
);
note = p;
unicode = 0070;
},
{
color = 4;
glyphname = thorn;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"114 -2 LINE",
"223 508 LINE",
"193 553 LINE",
"149 553 LINE",
"159 600 LINE",
"70 600 LINE",
"-85 -130 LINE",
"-6 -130 LINE",
"16 -28 LINE",
"12 -47 LINE",
"66 -47 LINE"
);
},
{
closed = 1;
nodes = (
"41 28 LINE",
"29 28 LINE",
"124 478 LINE",
"136 478 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-16 29 LINE",
"95 549 LINE",
"89 557 LINE",
"73 557 LINE",
"82 600 LINE",
"70 600 LINE",
"-77 -90 LINE",
"-65 -90 LINE",
"-37 40 LINE",
"-41 21 LINE",
"-25 21 LINE"
);
},
{
closed = 1;
nodes = (
"-27 32 LINE",
"-39 32 LINE",
"70 546 LINE",
"82 546 LINE"
);
}
);
width = 48;
}
);
unicode = 00FE;
},
{
color = 4;
glyphname = q;
lastChange = "2020-09-26 15:19:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 13}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"7 -130 LINE",
"87 -130 LINE",
"242 600 LINE",
"162 600 LINE",
"157 575 LINE",
"145 575 LINE",
"150 600 LINE",
"109 600 LINE",
"60 555 LINE",
"-48 45 LINE",
"-19 0 LINE"
);
},
{
closed = 1;
nodes = (
"146 525 LINE",
"50 75 LINE",
"38 75 LINE",
"134 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 7 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 7 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-53 -90 LINE",
"-41 -90 LINE",
"106 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"78 600 LINE",
"68 592 LINE",
"-56 8 LINE",
"-50 0 LINE"
);
},
{
closed = 1;
nodes = (
"91 589 LINE",
"-31 14 LINE",
"-43 14 LINE",
"79 589 LINE"
);
}
);
width = 48;
}
);
note = q;
unicode = 0071;
},
{
color = 4;
glyphname = r;
lastChange = "2020-09-26 15:36:39 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"134 525 LINE",
"146 525 LINE",
"98 300 LINE",
"178 300 LINE",
"232 555 LINE",
"203 600 LINE",
"162 600 LINE",
"156 575 LINE",
"144 575 LINE",
"150 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"79 589 LINE",
"91 589 LINE",
"30 300 LINE",
"42 300 LINE",
"104 592 LINE",
"98 600 LINE",
"94 600 LINE",
"94 600 LINE",
"82 600 LINE",
"82 600 LINE",
"70 600 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 48;
}
);
note = r;
unicode = 0072;
},
{
color = 4;
glyphname = s;
lastChange = "2020-09-29 10:51:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 16}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"147 336 LINE",
"94 336 LINE",
"134 525 LINE",
"146 525 LINE",
"109 349 LINE",
"189 349 LINE",
"232 555 LINE",
"201 600 LINE",
"110 600 LINE",
"60 555 LINE",
"6 300 LINE",
"38 261 LINE",
"89 261 LINE",
"50 75 LINE",
"38 75 LINE",
"75 248 LINE",
"-5 248 LINE",
"-48 45 LINE",
"-18 0 LINE",
"73 0 LINE",
"124 45 LINE",
"178 300 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"36 311 LINE",
"20 311 LINE",
"79 589 LINE",
"91 589 LINE",
"35 323 LINE",
"47 323 LINE",
"104 592 LINE",
"98 600 LINE",
"78 600 LINE",
"68 592 LINE",
"8 308 LINE",
"14 300 LINE",
"30 300 LINE",
"-31 11 LINE",
"-43 11 LINE",
"15 287 LINE",
"3 287 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"43 303 LINE"
);
}
);
width = 48;
}
);
note = s;
unicode = 0073;
},
{
color = 4;
glyphname = germandbls;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"156 615 LINE",
"165 615 LINE",
"119 402 LINE",
"85 402 LINE",
"70 327 LINE",
"104 327 LINE",
"50 75 LINE",
"33 75 LINE",
"17 0 LINE",
"75 0 LINE",
"124 45 LINE",
"190 358 LINE",
"157 358 LINE",
"160 370 LINE",
"193 370 LINE",
"199 402 LINE",
"251 645 LINE",
"221 690 LINE",
"172 690 LINE"
);
},
{
closed = 1;
nodes = (
"172 690 LINE",
"129 690 LINE",
"79 645 LINE",
"-58 0 LINE",
"21 0 LINE",
"37 75 LINE",
"38 75 LINE",
"153 615 LINE",
"156 615 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 679 LINE",
"110 679 LINE",
"45 370 LINE",
"28 370 LINE",
"25 358 LINE",
"42 358 LINE",
"-32 11 LINE",
"-49 11 LINE",
"-51 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"54 358 LINE",
"48 358 LINE",
"51 370 LINE",
"57 370 LINE",
"59 381 LINE",
"123 682 LINE",
"117 690 LINE",
"104 690 LINE"
);
},
{
closed = 1;
nodes = (
"104 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE",
"-47 0 LINE",
"-45 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"101 679 LINE"
);
}
);
width = 48;
}
);
unicode = 00DF;
},
{
color = 4;
glyphname = t;
lastChange = "2020-09-26 15:39:10 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
origin = "{0, 12}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"38 75 LINE",
"134 525 LINE",
"141 525 LINE",
"157 600 LINE",
"150 600 LINE",
"177 730 LINE",
"97 730 LINE",
"70 600 LINE",
"64 600 LINE",
"48 525 LINE",
"54 525 LINE",
"-48 45 LINE",
"-58 0 LINE",
"22 0 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
place = "{-57, 12}";
type = Stem;
},
{
place = "{62.5, 24}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-44 11 LINE",
"79 589 LINE",
"85 589 LINE",
"88 600 LINE",
"82 600 LINE",
"101 690 LINE",
"89 690 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-56 11 LINE",
"-58 0 LINE",
"-46 0 LINE",
"-44 11 LINE"
);
}
);
width = 24;
}
);
note = t;
unicode = 0074;
},
{
color = 4;
glyphname = u;
lastChange = "2020-09-26 15:38:15 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"50 75 LINE",
"38 75 LINE",
"150 600 LINE",
"70 600 LINE",
"-48 45 LINE",
"-19 0 LINE",
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"34 0 LINE",
"114 0 LINE",
"242 600 LINE",
"162 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-31 11 LINE",
"-43 11 LINE",
"82 600 LINE",
"70 600 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-22 0 LINE",
"106 600 LINE",
"94 600 LINE"
);
}
);
width = 48;
}
);
note = u;
unicode = 0075;
},
{
color = 4;
glyphname = uacute;
lastChange = "2020-09-16 19:57:27 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 9, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FA;
},
{
color = 4;
glyphname = ucircumflex;
lastChange = "2020-09-16 19:57:42 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = circumflex;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FB;
},
{
color = 4;
glyphname = udieresis;
lastChange = "2020-09-16 19:58:07 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 2, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FC;
},
{
color = 4;
glyphname = ugrave;
lastChange = "2020-09-16 19:58:22 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F9;
},
{
color = 4;
glyphname = v;
lastChange = "2020-09-26 15:38:54 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-18 0 LINE",
"75 0 LINE",
"124 45 LINE",
"242 600 LINE",
"162 600 LINE",
"50 75 LINE",
"38 75 LINE",
"150 600 LINE",
"70 600 LINE",
"-48 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"106 600 LINE",
"94 600 LINE",
"-31 11 LINE",
"-43 11 LINE",
"82 600 LINE",
"70 600 LINE",
"-56 8 LINE"
);
}
);
width = 48;
}
);
note = v;
unicode = 0076;
},
{
color = 4;
glyphname = w;
lastChange = "2020-09-26 15:36:45 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"216 45 LINE",
"334 600 LINE",
"254 600 LINE",
"142 75 LINE",
"130 75 LINE",
"242 600 LINE",
"162 600 LINE",
"50 75 LINE",
"38 75 LINE",
"150 600 LINE",
"70 600 LINE",
"-48 45 LINE",
"-18 0 LINE",
"22 0 LINE",
"28 25 LINE",
"40 25 LINE",
"34 0 LINE",
"114 0 LINE",
"120 25 LINE",
"132 25 LINE",
"126 0 LINE",
"167 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"4 8 LINE",
"130 600 LINE",
"118 600 LINE",
"-7 11 LINE",
"-19 11 LINE",
"106 600 LINE",
"94 600 LINE",
"-31 11 LINE",
"-43 11 LINE",
"82 600 LINE",
"70 600 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-22 0 LINE",
"-22 0 LINE",
"-10 0 LINE",
"-10 0 LINE",
"-6 0 LINE"
);
}
);
width = 72;
}
);
note = w;
unicode = 0077;
},
{
color = 4;
glyphname = wacute;
lastChange = "2020-09-16 19:59:10 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 91, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 21, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E83;
},
{
color = 4;
glyphname = wcircumflex;
lastChange = "2020-09-16 19:59:31 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 86, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 0175;
},
{
color = 4;
glyphname = wdieresis;
lastChange = "2020-09-16 19:59:39 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 15, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E85;
},
{
color = 4;
glyphname = wgrave;
lastChange = "2020-09-16 19:59:47 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, -3, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E81;
},
{
color = 4;
glyphname = x;
lastChange = "2020-09-26 15:18:32 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"23 0 LINE",
"81 272 LINE",
"93 272 LINE",
"35 0 LINE",
"115 0 LINE",
"179 303 LINE",
"146 303 LINE",
"149 315 LINE",
"182 315 LINE",
"243 600 LINE",
"163 600 LINE",
"109 347 LINE",
"97 347 LINE",
"151 600 LINE",
"71 600 LINE",
"10 315 LINE",
"43 315 LINE",
"40 303 LINE",
"7 303 LINE",
"-57 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
place = "{12, 8}";
type = Stem;
},
{
place = "{30, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"18 300 LINE",
"30 300 LINE",
"-34 0 LINE",
"-22 0 LINE",
"42 299 LINE",
"37 299 LINE",
"39 311 LINE",
"44 311 LINE",
"106 600 LINE",
"94 600 LINE",
"32 311 LINE",
"20 311 LINE",
"82 600 LINE",
"70 600 LINE",
"8 311 LINE",
"13 311 LINE",
"11 299 LINE",
"6 299 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = x;
unicode = 0078;
},
{
color = 4;
glyphname = y;
lastChange = "2020-09-26 15:11:31 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 18}";
type = Stem;
},
{
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"162 600 LINE",
"50 75 LINE",
"38 75 LINE",
"150 600 LINE",
"70 600 LINE",
"-48 45 LINE",
"-18 0 LINE",
"22 0 LINE",
"27 25 LINE",
"39 25 LINE",
"34 0 LINE",
"22 -55 LINE",
"10 -55 LINE",
"20 -12 LINE",
"-60 -12 LINE",
"-76 -85 LINE",
"-47 -130 LINE",
"47 -130 LINE",
"96 -85 LINE",
"242 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 18}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"94 600 LINE",
"-31 11 LINE",
"-43 11 LINE",
"82 600 LINE",
"70 600 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-46 0 LINE",
"-46 0 LINE",
"-34 0 LINE",
"-34 0 LINE",
"-50 -78 LINE",
"-62 -78 LINE",
"-48 -12 LINE",
"-60 -12 LINE",
"-75 -82 LINE",
"-69 -90 LINE",
"-49 -90 LINE",
"-39 -82 LINE",
"106 600 LINE"
);
}
);
width = 48;
}
);
note = y;
unicode = 0079;
},
{
color = 4;
glyphname = yacute;
lastChange = "2020-09-16 20:00:45 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FD;
},
{
color = 4;
glyphname = ycircumflex;
lastChange = "2020-09-16 20:01:14 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = y;
},
{
name = circumflex;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0177;
},
{
color = 4;
glyphname = ydieresis;
lastChange = "2020-09-16 20:01:01 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 2, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FF;
},
{
color = 4;
glyphname = ygrave;
lastChange = "2020-09-16 20:01:23 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -15, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 1EF3;
},
{
color = 4;
glyphname = z;
lastChange = "2020-09-26 15:39:29 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-17 0 LINE",
"114 0 LINE",
"124 45 LINE",
"167 250 LINE",
"87 250 LINE",
"50 75 LINE",
"38 75 LINE",
"78 262 LINE",
"170 262 LINE",
"232 555 LINE",
"202 600 LINE",
"70 600 LINE",
"16 349 LINE",
"96 349 LINE",
"134 525 LINE",
"146 525 LINE",
"106 337 LINE",
"14 337 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 12 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-50 0 LINE",
"-22 0 LINE",
"-12 45 LINE",
"45 314 LINE",
"33 314 LINE",
"-32 11 LINE",
"-44 11 LINE",
"23 326 LINE",
"47 326 LINE",
"104 592 LINE",
"98 600 LINE",
"70 600 LINE",
"16 349 LINE",
"28 349 LINE",
"79 589 LINE",
"91 589 LINE",
"38 337 LINE",
"14 337 LINE"
);
}
);
width = 48;
}
);
note = z;
unicode = 007A;
},
{
color = 4;
glyphname = f.ss01;
lastChange = "2020-09-26 15:20:26 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"189 730 LINE",
"136 730 LINE",
"88 685 LINE",
"70 600 LINE",
"64 600 LINE",
"48 525 LINE",
"54 525 LINE",
"-58 0 LINE",
"22 0 LINE",
"134 525 LINE",
"140 525 LINE",
"156 600 LINE",
"150 600 LINE",
"161 655 LINE",
"173 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
},
{
place = "{62.5, 24}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"113 690 LINE",
"97 690 LINE",
"87 682 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-58 0 LINE",
"-46 0 LINE",
"79 589 LINE",
"85 589 LINE",
"88 600 LINE",
"82 600 LINE",
"98 679 LINE",
"110 679 LINE"
);
}
);
width = 24;
}
);
note = t;
},
{
color = 4;
glyphname = y.ss01;
lastChange = "2020-09-26 15:01:18 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-19 0 LINE",
"-12 0 LINE",
"-39 -130 LINE",
"41 -130 LINE",
"68 0 LINE",
"75 0 LINE",
"124 45 LINE",
"242 600 LINE",
"162 600 LINE",
"50 75 LINE",
"38 75 LINE",
"150 600 LINE",
"70 600 LINE",
"-48 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-50 0 LINE",
"-46 0 LINE",
"-65 -90 LINE",
"-53 -90 LINE",
"-34 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"106 600 LINE",
"94 600 LINE",
"-32 11 LINE",
"-44 11 LINE",
"82 600 LINE",
"70 600 LINE",
"-56 8 LINE"
);
}
);
width = 48;
}
);
note = y;
},
{
color = 4;
glyphname = f_f_i;
lastChange = "2020-09-26 15:00:54 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"60 525 LINE",
"-52 0 LINE",
"28 0 LINE",
"140 525 LINE",
"152 525 LINE",
"40 0 LINE",
"120 0 LINE",
"232 525 LINE",
"244 525 LINE",
"132 0 LINE",
"212 0 LINE",
"340 600 LINE",
"248 600 LINE",
"251 615 LINE",
"263 615 LINE",
"263 615 LINE",
"343 615 LINE",
"359 690 LINE",
"134 690 LINE",
"85 645 LINE",
"76 600 LINE",
"70 600 LINE",
"54 525 LINE"
);
},
{
closed = 1;
nodes = (
"159 615 LINE",
"171 615 LINE",
"168 600 LINE",
"156 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 282;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"67 589 LINE",
"-58 0 LINE",
"-46 0 LINE",
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"103 589 LINE",
"115 589 LINE",
"-10 0 LINE",
"2 0 LINE",
"130 600 LINE",
"106 600 LINE",
"122 679 LINE",
"133 679 LINE",
"120 612 LINE",
"132 612 LINE",
"147 690 LINE",
"97 690 LINE",
"87 682 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"94 600 LINE",
"82 600 LINE"
);
}
);
width = 72;
}
);
note = fi;
},
{
color = 4;
glyphname = f_f_l;
lastChange = "2020-09-26 15:00:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"140 525 LINE",
"152 525 LINE",
"40 0 LINE",
"120 0 LINE",
"232 525 LINE",
"244 525 LINE",
"132 0 LINE",
"212 0 LINE",
"359 690 LINE",
"134 690 LINE",
"85 645 LINE",
"76 600 LINE",
"70 600 LINE",
"54 525 LINE",
"60 525 LINE",
"-52 0 LINE"
);
},
{
closed = 1;
nodes = (
"159 615 LINE",
"171 615 LINE",
"168 600 LINE",
"156 600 LINE"
);
},
{
closed = 1;
nodes = (
"251 615 LINE",
"263 615 LINE",
"260 600 LINE",
"248 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 282;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"103 589 LINE",
"115 589 LINE",
"-10 0 LINE",
"2 0 LINE",
"149 690 LINE",
"97 690 LINE",
"87 682 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"94 600 LINE",
"82 600 LINE"
);
},
{
closed = 1;
nodes = (
"122 679 LINE",
"135 679 LINE",
"118 600 LINE",
"106 600 LINE"
);
}
);
width = 72;
}
);
note = fi;
},
{
color = 4;
glyphname = f_i;
lastChange = "2020-09-26 15:00:58 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"134 525 LINE",
"146 525 LINE",
"34 0 LINE",
"114 0 LINE",
"242 600 LINE",
"150 600 LINE",
"153 615 LINE",
"165 615 LINE",
"165 615 LINE",
"245 615 LINE",
"261 690 LINE",
"128 690 LINE",
"79 645 LINE",
"-58 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"106 600 LINE",
"82 600 LINE",
"98 679 LINE",
"109 679 LINE",
"96 612 LINE",
"108 612 LINE",
"123 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
note = fi;
},
{
color = 4;
glyphname = f_l;
lastChange = "2020-09-26 15:01:00 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = up;
type = BottomGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"22 0 LINE",
"134 525 LINE",
"146 525 LINE",
"34 0 LINE",
"114 0 LINE",
"261 690 LINE",
"128 690 LINE",
"79 645 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"153 615 LINE",
"165 615 LINE",
"162 600 LINE",
"150 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"79 589 LINE",
"91 589 LINE",
"-34 0 LINE",
"-22 0 LINE",
"125 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"94 600 LINE",
"82 600 LINE"
);
}
);
width = 48;
}
);
note = fi;
},
{
color = 4;
glyphname = f_t;
lastChange = "2020-09-26 15:01:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 8}";
target = "{1, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 11}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{1, 14}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 14}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"126 0 LINE",
"142 75 LINE",
"136 75 LINE",
"232 525 LINE",
"238 525 LINE",
"254 600 LINE",
"248 600 LINE",
"267 690 LINE",
"187 690 LINE",
"168 600 LINE",
"162 600 LINE",
"146 525 LINE",
"152 525 LINE",
"50 45 LINE",
"79 0 LINE"
);
},
{
closed = 1;
nodes = (
"28 0 LINE",
"140 525 LINE",
"146 525 LINE",
"162 600 LINE",
"156 600 LINE",
"159 615 LINE",
"159 615 LINE",
"175 690 LINE",
"134 690 LINE",
"85 645 LINE",
"76 600 LINE",
"70 600 LINE",
"54 525 LINE",
"60 525 LINE",
"-52 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 196;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 14}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 11}";
target = "{1, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 8}";
target = "{1, 5}";
type = Stem;
},
{
place = "{-24, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-18 0 LINE",
"-16 11 LINE",
"-22 11 LINE",
"101 589 LINE",
"106 589 LINE",
"109 600 LINE",
"104 600 LINE",
"123 690 LINE",
"111 690 LINE",
"92 600 LINE",
"88 600 LINE",
"85 589 LINE",
"89 589 LINE",
"-34 11 LINE",
"-24 0 LINE"
);
},
{
closed = 1;
nodes = (
"-46 0 LINE",
"79 589 LINE",
"85 589 LINE",
"88 600 LINE",
"82 600 LINE",
"98 679 LINE",
"120 679 LINE",
"123 690 LINE",
"97 690 LINE",
"87 682 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-58 0 LINE"
);
}
);
width = 46;
}
);
note = fi;
},
{
glyphname = i_t;
lastChange = "2020-09-26 15:01:05 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{2, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"120 0 LINE",
"136 75 LINE",
"130 75 LINE",
"226 525 LINE",
"233 525 LINE",
"249 600 LINE",
"242 600 LINE",
"261 690 LINE",
"181 690 LINE",
"162 600 LINE",
"93 600 LINE",
"77 525 LINE",
"146 525 LINE",
"44 45 LINE",
"73 0 LINE"
);
},
{
closed = 1;
nodes = (
"22 0 LINE",
"150 600 LINE",
"70 600 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"153 612 LINE",
"170 690 LINE",
"89 690 LINE",
"72 612 LINE"
);
}
);
width = 191;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 2}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{2, 2}";
type = Stem;
},
{
place = "{-22, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-16 0 LINE",
"-14 11 LINE",
"-20 11 LINE",
"103 589 LINE",
"109 589 LINE",
"112 600 LINE",
"106 600 LINE",
"125 690 LINE",
"113 690 LINE",
"94 600 LINE",
"71 600 LINE",
"68 589 LINE",
"91 589 LINE",
"-32 11 LINE",
"-22 0 LINE"
);
},
{
closed = 1;
nodes = (
"-46 0 LINE",
"82 600 LINE",
"70 600 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"85 612 LINE",
"102 690 LINE",
"89 690 LINE",
"72 612 LINE"
);
}
);
width = 48;
}
);
},
{
glyphname = t_i;
lastChange = "2020-09-26 15:01:08 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"44 75 LINE",
"44 75 LINE",
"140 525 LINE",
"202 525 LINE",
"218 600 LINE",
"156 600 LINE",
"184 730 LINE",
"104 730 LINE",
"76 600 LINE",
"70 600 LINE",
"54 525 LINE",
"60 525 LINE",
"-42 45 LINE",
"-52 0 LINE"
);
},
{
closed = 1;
nodes = (
"120 0 LINE",
"248 600 LINE",
"168 600 LINE",
"40 0 LINE"
);
},
{
closed = 1;
nodes = (
"251 612 LINE",
"277 730 LINE",
"196 730 LINE",
"170 612 LINE"
);
}
);
width = 191;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{0, 8}";
type = Stem;
},
{
place = "{-57, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-46 0 LINE",
"-44 11 LINE",
"-44 11 LINE",
"79 589 LINE",
"101 589 LINE",
"104 600 LINE",
"82 600 LINE",
"101 690 LINE",
"89 690 LINE",
"70 600 LINE",
"64 600 LINE",
"61 589 LINE",
"67 589 LINE",
"-56 11 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"-22 0 LINE",
"106 600 LINE",
"94 600 LINE",
"-34 0 LINE"
);
},
{
closed = 1;
nodes = (
"109 612 LINE",
"126 690 LINE",
"113 690 LINE",
"96 612 LINE"
);
}
);
width = 49;
}
);
},
{
glyphname = zero;
lastChange = "2020-09-26 15:01:41 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 0 LINE",
"123 40 LINE",
"260 685 LINE",
"230 730 LINE",
"138 730 LINE",
"88 685 LINE",
"-49 40 LINE",
"-18 0 LINE"
);
},
{
closed = 1;
nodes = (
"162 655 LINE",
"174 655 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-29 0 LINE",
"-19 11 LINE",
"123 679 LINE",
"117 690 LINE",
"97 690 LINE",
"87 679 LINE",
"-55 11 LINE",
"-49 0 LINE"
);
},
{
closed = 1;
nodes = (
"99 679 LINE",
"111 679 LINE",
"-31 11 LINE",
"-43 11 LINE"
);
}
);
width = 48;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2020-09-26 15:02:30 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"18 0 LINE",
"173 730 LINE",
"97 730 LINE"
);
}
);
width = 88;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
note = fraction;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2020-09-26 15:02:45 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 20}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 11}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-47 45 LINE",
"-57 0 LINE",
"114 0 LINE",
"124 45 LINE",
"178 300 LINE",
"98 300 LINE",
"56 104 LINE",
"44 104 LINE",
"88 312 LINE",
"141 312 LINE",
"189 349 LINE",
"261 685 LINE",
"230 730 LINE",
"139 730 LINE",
"87 679 LINE",
"28 399 LINE",
"108 399 LINE",
"162 655 LINE",
"174 655 LINE",
"117 387 LINE",
"64 387 LINE",
"17 349 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 20}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-47 45 LINE",
"-57 0 LINE",
"-21 0 LINE",
"-11 45 LINE",
"50 335 LINE",
"38 335 LINE",
"-31 11 LINE",
"-43 11 LINE",
"29 347 LINE",
"46 347 LINE",
"55 355 LINE",
"125 682 LINE",
"119 690 LINE",
"98 690 LINE",
"88 682 LINE",
"22 370 LINE",
"35 370 LINE",
"100 679 LINE",
"112 679 LINE",
"44 358 LINE",
"27 358 LINE",
"17 350 LINE"
);
}
);
width = 50;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-09-26 15:02:52 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 20}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"137 730 LINE",
"88 685 LINE",
"30 414 LINE",
"110 414 LINE",
"162 655 LINE",
"174 655 LINE",
"120 402 LINE",
"63 402 LINE",
"44 312 LINE",
"101 312 LINE",
"50 75 LINE",
"38 75 LINE",
"86 300 LINE",
"6 300 LINE",
"-48 45 LINE",
"-18 0 LINE",
"75 0 LINE",
"124 45 LINE",
"189 351 LINE",
"132 351 LINE",
"135 363 LINE",
"192 363 LINE",
"260 685 LINE",
"230 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 20}";
target = "{0, 7}";
type = Stem;
},
{
place = "{17.5, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"97 690 LINE",
"87 682 LINE",
"23 382 LINE",
"35 382 LINE",
"99 679 LINE",
"111 679 LINE",
"45 370 LINE",
"21 370 LINE",
"14 336 LINE",
"38 336 LINE",
"-31 11 LINE",
"-43 11 LINE",
"23 324 LINE",
"11 324 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"52 347 LINE",
"28 347 LINE",
"31 359 LINE",
"55 359 LINE",
"123 682 LINE",
"117 690 LINE"
);
}
);
width = 48;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2020-09-26 15:03:16 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 4}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"266 730 LINE",
"98 730 LINE",
"-25 152 LINE",
"63 152 LINE",
"31 0 LINE",
"111 0 LINE"
);
},
{
closed = 1;
nodes = (
"69 227 LINE",
"176 730 LINE",
"188 730 LINE",
"81 227 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 12 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 6 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 6 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
12 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 181;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 4}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"126 690 LINE",
"90 690 LINE",
"-25 152 LINE",
"-1 152 LINE",
"-33 0 LINE",
"-21 0 LINE"
);
},
{
closed = 1;
nodes = (
"-10 163 LINE",
"102 690 LINE",
"114 690 LINE",
"2 163 LINE"
);
}
);
width = 49;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2020-09-26 15:03:10 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"195 378 LINE",
"164 423 LINE",
"112 423 LINE",
"162 655 LINE",
"174 655 LINE",
"127 435 LINE",
"205 435 LINE",
"268 730 LINE",
"98 730 LINE",
"9 311 LINE",
"89 311 LINE",
"96 348 LINE",
"108 348 LINE",
"50 75 LINE",
"38 75 LINE",
"86 299 LINE",
"6 299 LINE",
"-48 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"67 415 LINE",
"60 423 LINE",
"44 423 LINE",
"99 679 LINE",
"111 679 LINE",
"59 435 LINE",
"71 435 LINE",
"125 690 LINE",
"89 690 LINE",
"22 375 LINE",
"34 375 LINE",
"42 412 LINE",
"54 412 LINE",
"-31 11 LINE",
"-43 11 LINE",
"31 363 LINE",
"19 363 LINE",
"-56 8 LINE"
);
}
);
width = 49;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2020-09-26 15:03:24 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"165 423 LINE",
"112 423 LINE",
"162 655 LINE",
"174 655 LINE",
"127 435 LINE",
"207 435 LINE",
"260 685 LINE",
"230 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-48 45 LINE",
"-18 0 LINE",
"75 0 LINE",
"124 45 LINE",
"195 378 LINE"
);
},
{
closed = 1;
nodes = (
"96 348 LINE",
"108 348 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"60 423 LINE",
"44 423 LINE",
"99 679 LINE",
"111 679 LINE",
"59 435 LINE",
"71 435 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"67 415 LINE"
);
},
{
closed = 1;
nodes = (
"42 412 LINE",
"54 412 LINE",
"-31 11 LINE",
"-43 11 LINE"
);
}
);
width = 49;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2020-09-29 09:08:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"97 730 LINE",
"21 370 LINE",
"101 370 LINE",
"161 655 LINE",
"173 655 LINE",
"113 370 LINE",
"55 281 LINE",
"-5 0 LINE",
"75 0 LINE",
"135 281 LINE",
"193 370 LINE",
"269 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 9 11 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 7 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 11 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"89 690 LINE",
"21 370 LINE",
"33 370 LINE",
"98 679 LINE",
"110 679 LINE",
"45 370 LINE",
"15 281 LINE",
"-45 0 LINE",
"-33 0 LINE",
"27 281 LINE",
"57 370 LINE",
"125 690 LINE"
);
}
);
width = 48;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2020-09-26 15:05:26 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"137 730 LINE",
"88 685 LINE",
"21 370 LINE",
"61 370 LINE",
"59 358 LINE",
"19 358 LINE",
"-48 45 LINE",
"-19 0 LINE",
"75 0 LINE",
"124 45 LINE",
"191 358 LINE",
"151 358 LINE",
"153 370 LINE",
"193 370 LINE",
"260 685 LINE",
"231 730 LINE"
);
},
{
closed = 1;
nodes = (
"38 75 LINE",
"92 326 LINE",
"104 326 LINE",
"50 75 LINE"
);
},
{
closed = 1;
nodes = (
"108 401 LINE",
"162 655 LINE",
"174 655 LINE",
"120 401 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 0}";
type = Stem;
},
{
place = "{31.5, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"97 690 LINE",
"87 682 LINE",
"21 370 LINE",
"33 370 LINE",
"30 358 LINE",
"18 358 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"54 358 LINE",
"42 358 LINE",
"45 370 LINE",
"57 370 LINE",
"123 682 LINE",
"117 690 LINE"
);
},
{
closed = 1;
nodes = (
"-43 11 LINE",
"28 347 LINE",
"40 347 LINE",
"-31 11 LINE"
);
},
{
closed = 1;
nodes = (
"35 381 LINE",
"99 679 LINE",
"111 679 LINE",
"47 381 LINE"
);
}
);
width = 48;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2020-09-26 15:05:35 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"38 267 LINE",
"91 267 LINE",
"50 75 LINE",
"38 75 LINE",
"77 255 LINE",
"-3 255 LINE",
"-48 45 LINE",
"-18 0 LINE",
"75 0 LINE",
"124 45 LINE",
"260 685 LINE",
"230 730 LINE",
"137 730 LINE",
"88 685 LINE",
"9 312 LINE"
);
},
{
closed = 1;
nodes = (
"107 342 LINE",
"95 342 LINE",
"162 655 LINE",
"174 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"7 267 LINE",
"23 267 LINE",
"-31 11 LINE",
"-43 11 LINE",
"9 255 LINE",
"-3 255 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"1 275 LINE"
);
},
{
closed = 1;
nodes = (
"25 278 LINE",
"13 278 LINE",
"99 679 LINE",
"111 679 LINE"
);
}
);
width = 48;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = one.ss01;
lastChange = "2020-09-26 15:05:39 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"115 0 LINE",
"261 685 LINE",
"230 730 LINE",
"98 730 LINE",
"-39 87 LINE",
"41 87 LINE",
"162 655 LINE",
"174 655 LINE",
"51 75 LINE",
"-41 75 LINE",
"-57 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-21 0 LINE",
"124 682 LINE",
"116 690 LINE",
"90 690 LINE",
"-52 23 LINE",
"-40 23 LINE",
"99 679 LINE",
"111 679 LINE",
"-31 11 LINE",
"-55 11 LINE",
"-57 0 LINE"
);
}
);
width = 49;
}
);
note = one;
},
{
glyphname = fraction.001;
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"18 0 LINE",
"173 730 LINE",
"97 730 LINE"
);
}
);
width = 88;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
note = fraction;
},
{
glyphname = fraction;
lastChange = "2020-09-26 15:05:44 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"18 0 LINE",
"173 730 LINE",
"97 730 LINE"
);
}
);
width = 88;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-46 0 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
note = fraction;
unicode = 2044;
},
{
color = 4;
glyphname = period;
lastChange = "2020-09-26 15:09:50 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"38 75 LINE",
"-42 75 LINE",
"-58 0 LINE",
"22 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-30 75 LINE",
"-42 75 LINE",
"-58 0 LINE",
"-46 0 LINE"
);
}
);
width = 24;
}
);
leftKerningGroup = period;
note = period;
unicode = 002E;
},
{
color = 4;
glyphname = comma;
lastChange = "2020-09-29 09:09:38 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-74 -75 LINE",
"-34 -75 LINE",
"16 0 LINE",
"32 75 LINE",
"-41 75 LINE",
"-57 0 LINE",
"-24 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 86;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-68 -63 LINE",
"-60 -63 LINE",
"-46 0 LINE",
"-30 75 LINE",
"-42 75 LINE",
"-58 0 LINE",
"-54 0 LINE"
);
}
);
width = 24;
}
);
leftKerningGroup = period;
note = comma;
unicode = 002C;
},
{
color = 4;
glyphname = colon;
lastChange = "2020-09-26 15:09:53 +0000";
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 102, 480}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 8 4 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 102, 480}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
leftKerningGroup = period;
note = colon;
unicode = 003A;
},
{
color = 4;
glyphname = semicolon;
lastChange = "2020-09-26 15:10:13 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 102, 480}";
},
{
name = comma;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 8 7 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 102, 480}";
},
{
name = comma;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
leftKerningGroup = period;
note = semicolon;
unicode = 003B;
},
{
color = 4;
glyphname = ellipsis;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 92, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 184, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 18, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 36, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 60;
}
);
unicode = 2026;
},
{
color = 4;
glyphname = exclam;
lastChange = "2020-09-16 20:13:13 +0000";
layers = (
{
components = (
{
name = period;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"69 219 LINE",
"178 730 LINE",
"98 730 LINE",
"-11 219 LINE",
"-10 87 LINE",
"12 87 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
8 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
components = (
{
name = period;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-13 153 LINE",
"101 690 LINE",
"89 690 LINE",
"-25 153 LINE",
"-36 87 LINE",
"-30 87 LINE"
);
}
);
width = 24;
}
);
note = exclam;
unicode = 0021;
},
{
color = 4;
glyphname = exclamdown;
lastChange = "2020-09-16 20:13:24 +0000";
layers = (
{
components = (
{
name = exclam;
transform = "{-1, 0, 0, -1, 93, 600}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
components = (
{
name = exclam;
transform = "{-1, 0, 0, -1, 24, 600}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = exclamdown;
unicode = 00A1;
},
{
color = 4;
glyphname = question;
lastChange = "2020-09-16 20:14:23 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"7 87 LINE",
"87 87 LINE",
"100 144 LINE",
"106 144 LINE",
"153 181 LINE",
"261 685 LINE",
"230 730 LINE",
"139 730 LINE",
"87 679 LINE",
"-8 231 LINE",
"72 231 LINE",
"162 655 LINE",
"174 655 LINE",
"81 219 LINE",
"35 219 LINE"
);
}
);
width = 185;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-39 87 LINE",
"-27 87 LINE",
"-1 207 LINE",
"15 207 LINE",
"24 215 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-8 231 LINE",
"4 231 LINE",
"99 679 LINE",
"111 679 LINE",
"13 219 LINE",
"-11 219 LINE"
);
}
);
width = 48;
}
);
unicode = 003F;
},
{
color = 4;
glyphname = questiondown;
lastChange = "2020-09-16 20:14:56 +0000";
layers = (
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 185, 600}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 48, 600}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00BF;
},
{
color = 4;
glyphname = periodcentered;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 76, 358}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 76, 358}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00B7;
},
{
color = 4;
glyphname = bullet;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1.4, 0, 0, 1.4, 100, 358}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 125;
},
{
components = (
{
name = period;
transform = "{1.4, 0, 0, 1.4, 100, 358}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 29;
}
);
unicode = 2022;
},
{
color = 4;
glyphname = asterisk;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"134 637 LINE",
"157 637 LINE",
"155 628 LINE",
"132 628 LINE",
"132 535 LINE",
"167 535 LINE",
"207 628 LINE",
"184 628 LINE",
"186 637 LINE",
"209 637 LINE",
"209 730 LINE",
"174 730 LINE"
);
},
{
closed = 1;
nodes = (
"163 667 LINE",
"170 647 LINE",
"161 643 LINE",
"155 663 LINE",
"70 599 LINE",
"82 569 LINE",
"178 598 LINE",
"171 618 LINE",
"180 622 LINE",
"187 602 LINE",
"271 666 LINE",
"260 696 LINE"
);
},
{
closed = 1;
nodes = (
"199 662 LINE",
"183 643 LINE",
"177 648 LINE",
"193 667 LINE",
"109 697 LINE",
"85 666 LINE",
"142 603 LINE",
"158 622 LINE",
"164 617 LINE",
"148 598 LINE",
"232 568 LINE",
"256 599 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
23 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 199;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"103 669 LINE",
"103 669 LINE",
"101 660 LINE",
"101 660 LINE",
"100 639 LINE",
"106 639 LINE",
"113 660 LINE",
"113 660 LINE",
"115 669 LINE",
"115 669 LINE",
"117 690 LINE",
"111 690 LINE"
);
},
{
closed = 1;
nodes = (
"111 672 LINE",
"111 672 LINE",
"102 667 LINE",
"102 667 LINE",
"82 654 LINE",
"84 649 LINE",
"106 657 LINE",
"106 657 LINE",
"115 662 LINE",
"115 662 LINE",
"134 675 LINE",
"133 680 LINE"
);
},
{
closed = 1;
nodes = (
"116 667 LINE",
"116 667 LINE",
"109 672 LINE",
"109 672 LINE",
"91 680 LINE",
"86 675 LINE",
"101 662 LINE",
"101 662 LINE",
"108 657 LINE",
"108 657 LINE",
"126 649 LINE",
"130 654 LINE"
);
}
);
width = 61;
}
);
note = asterisk;
unicode = 002A;
},
{
color = 4;
glyphname = numbersign;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"189 730 LINE",
"109 730 LINE",
"-46 0 LINE",
"34 0 LINE"
);
},
{
closed = 1;
nodes = (
"281 730 LINE",
"201 730 LINE",
"46 0 LINE",
"126 0 LINE"
);
},
{
closed = 1;
nodes = (
"31 417 LINE",
"227 417 LINE",
"243 492 LINE",
"47 492 LINE"
);
},
{
closed = 1;
nodes = (
"-6 243 LINE",
"190 243 LINE",
"206 318 LINE",
"10 318 LINE"
);
}
);
width = 208;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"105 690 LINE",
"93 690 LINE",
"-54 0 LINE",
"-42 0 LINE"
);
},
{
closed = 1;
nodes = (
"129 690 LINE",
"117 690 LINE",
"-30 0 LINE",
"-18 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 354 LINE",
"60 354 LINE",
"63 365 LINE",
"21 365 LINE"
);
},
{
closed = 1;
nodes = (
"13 331 LINE",
"55 331 LINE",
"58 342 LINE",
"16 342 LINE"
);
}
);
width = 55;
}
);
note = numbersign;
unicode = 0023;
},
{
color = 4;
glyphname = slash;
lastChange = "2020-10-01 13:45:13 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 730 LINE",
"98 730 LINE",
"-76 -87 LINE",
"4 -87 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 690 LINE",
"89 690 LINE",
"-68 -50 LINE",
"-56 -50 LINE"
);
}
);
width = 24;
}
);
note = slash;
unicode = 002F;
},
{
color = 4;
glyphname = backslash;
lastChange = "2020-10-01 13:45:24 +0000";
layers = (
{
components = (
{
name = slash;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
components = (
{
name = slash;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = backslash;
unicode = 005C;
},
{
color = 4;
glyphname = parenleft;
lastChange = "2020-10-01 13:45:37 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"118 448 LINE",
"178 730 LINE",
"141 730 LINE",
"38 448 LINE",
"-16 195 LINE",
"-33 -87 LINE",
"4 -87 LINE",
"64 195 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 11 3 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"48 440 LINE",
"101 690 LINE",
"95 690 LINE",
"36 440 LINE",
"-15 199 LINE",
"-62 -50 LINE",
"-56 -50 LINE",
"-3 199 LINE"
);
}
);
width = 24;
}
);
note = parenleft;
unicode = 0028;
},
{
color = 4;
glyphname = parenright;
lastChange = "2020-10-01 13:46:07 +0000";
layers = (
{
components = (
{
name = parenleft;
transform = "{-1, 0, 0, -1, 102, 643}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 11 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
components = (
{
name = parenleft;
transform = "{-1, 0, 0, -1, 33, 640}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = parenright;
unicode = 0029;
},
{
color = 4;
glyphname = braceleft;
lastChange = "2020-10-01 13:46:19 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"17 284 LINE",
"-62 -87 LINE",
"32 -87 LINE",
"48 -12 LINE",
"34 -12 LINE",
"103 315 LINE",
"71 315 LINE",
"74 327 LINE",
"106 327 LINE",
"176 655 LINE",
"190 655 LINE",
"206 730 LINE",
"112 730 LINE",
"33 359 LINE",
"19 359 LINE",
"3 284 LINE"
);
}
);
width = 121;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 310 LINE",
"-65 -50 LINE",
"-50 -50 LINE",
"-48 -39 LINE",
"-51 -39 LINE",
"24 310 LINE",
"20 310 LINE",
"22 322 LINE",
"26 322 LINE",
"102 680 LINE",
"105 680 LINE",
"107 690 LINE",
"92 690 LINE",
"14 322 LINE",
"11 322 LINE",
"9 310 LINE"
);
}
);
width = 30;
}
);
unicode = 007B;
},
{
color = 4;
glyphname = braceright;
lastChange = "2020-10-01 13:46:40 +0000";
layers = (
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, -1, 130, 643}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 120;
},
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, -1, 39, 640}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 30;
}
);
unicode = 007D;
},
{
color = 4;
glyphname = bracketleft;
lastChange = "2020-10-01 13:46:51 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 730 LINE",
"98 730 LINE",
"-76 -87 LINE",
"4 -87 LINE"
);
},
{
closed = 1;
nodes = (
"82 655 LINE",
"176 655 LINE",
"192 730 LINE",
"98 730 LINE"
);
},
{
closed = 1;
nodes = (
"-76 -87 LINE",
"18 -87 LINE",
"34 -12 LINE",
"-60 -12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 12 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 107;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 690 LINE",
"89 690 LINE",
"-68 -50 LINE",
"-56 -50 LINE"
);
},
{
closed = 1;
nodes = (
"87 679 LINE",
"102 679 LINE",
"104 690 LINE",
"89 690 LINE"
);
},
{
closed = 1;
nodes = (
"-68 -50 LINE",
"-53 -50 LINE",
"-51 -39 LINE",
"-66 -39 LINE"
);
}
);
width = 27;
}
);
note = bracketleft;
unicode = 005B;
},
{
color = 4;
glyphname = bracketright;
lastChange = "2020-10-01 13:47:12 +0000";
layers = (
{
components = (
{
name = bracketleft;
transform = "{-1, 0, 0, -1, 116, 643}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 12 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 107;
},
{
components = (
{
name = bracketleft;
transform = "{-1, 0, 0, -1, 36, 640}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 27;
}
);
note = bracketright;
unicode = 005D;
},
{
color = 4;
glyphname = hyphen;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"90 370 LINE",
"21 370 LINE",
"6 300 LINE",
"75 300 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 1 14 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 8 0 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 81;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 341 LINE",
"15 341 LINE",
"12 329 LINE",
"27 329 LINE"
);
}
);
width = 27;
}
);
note = hyphen;
unicode = 002D;
},
{
color = 4;
glyphname = endash;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"107 370 LINE",
"21 370 LINE",
"6 300 LINE",
"92 300 LINE"
);
}
);
width = 98;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"45 341 LINE",
"15 341 LINE",
"12 329 LINE",
"42 329 LINE"
);
}
);
width = 42;
}
);
unicode = 2013;
},
{
color = 4;
glyphname = emdash;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"129 370 LINE",
"21 370 LINE",
"6 300 LINE",
"114 300 LINE"
);
}
);
width = 120;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"75 341 LINE",
"15 341 LINE",
"12 329 LINE",
"72 329 LINE"
);
}
);
width = 72;
}
);
unicode = 2014;
},
{
color = 4;
glyphname = underscore;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"8 -17 LINE",
"-61 -17 LINE",
"-76 -87 LINE",
"-7 -87 LINE"
);
}
);
width = 81;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-42 0 LINE",
"-57 0 LINE",
"-60 -12 LINE",
"-45 -12 LINE"
);
}
);
width = 28;
}
);
unicode = 005F;
},
{
color = 4;
glyphname = quotesinglbase;
lastChange = "2020-09-16 20:30:38 +0000";
layers = (
{
components = (
{
name = comma;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 1 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 86;
},
{
components = (
{
name = comma;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
color = 4;
glyphname = quotedblbase;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = comma;
},
{
name = comma;
transform = "{1, 0, 0, 1, 92, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 178;
},
{
components = (
{
name = comma;
},
{
name = comma;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 43;
}
);
unicode = 201E;
},
{
color = 4;
glyphname = quotedblleft;
lastChange = "2020-09-16 20:29:56 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 182, 655}";
},
{
name = comma;
transform = "{-1, 0, 0, -1, 97, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 3 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 10 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 12 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 12 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 171;
},
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 48, 627}";
},
{
name = comma;
transform = "{-1, 0, 0, -1, 30, 627}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 42;
}
);
note = quotedblleft;
unicode = 201C;
},
{
color = 4;
glyphname = quotedblright;
lastChange = "2020-09-16 20:28:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 225, 655}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 140, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 172;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 149, 615}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 131, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 42;
}
);
note = quotedblright;
unicode = 201D;
},
{
color = 4;
glyphname = quoteleft;
lastChange = "2020-09-16 20:31:16 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 104, 687}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 86;
},
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 30, 627}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quoteleft;
unicode = 2018;
},
{
color = 4;
glyphname = quoteright;
lastChange = "2020-09-16 20:31:16 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 139, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 86;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 131, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quoteright;
unicode = 2019;
},
{
color = 4;
glyphname = guillemotleft;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"11 322 LINE",
"-19 152 LINE",
"61 152 LINE",
"91 322 LINE",
"133 491 LINE",
"53 491 LINE"
);
},
{
closed = 1;
nodes = (
"103 322 LINE",
"67 152 LINE",
"147 152 LINE",
"183 322 LINE",
"219 491 LINE",
"139 491 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"11 322 LINE",
"-19 152 LINE",
"-7 152 LINE",
"23 322 LINE",
"65 491 LINE",
"53 491 LINE"
);
},
{
closed = 1;
nodes = (
"31 322 LINE",
"-1 152 LINE",
"11 152 LINE",
"43 322 LINE",
"83 491 LINE",
"71 491 LINE"
);
}
);
width = 48;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
color = 4;
glyphname = guillemotright;
lastChange = "2020-09-16 20:30:55 +0000";
layers = (
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, -1, 194, 643}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, -1, 58, 643}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 49;
}
);
note = guillemotright;
unicode = 00BB;
},
{
color = 4;
glyphname = guilsinglleft;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"11 322 LINE",
"-25 152 LINE",
"55 152 LINE",
"91 322 LINE",
"127 491 LINE",
"47 491 LINE"
);
}
);
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"11 322 LINE",
"-25 152 LINE",
"-13 152 LINE",
"23 322 LINE",
"59 491 LINE",
"47 491 LINE"
);
}
);
width = 24;
}
);
unicode = 2039;
},
{
color = 4;
glyphname = guilsinglright;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = guilsinglleft;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 203A;
},
{
color = 4;
glyphname = quotedbl;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"167 730 LINE",
"98 730 LINE",
"83 660 LINE",
"152 660 LINE"
);
},
{
closed = 1;
nodes = (
"248 730 LINE",
"179 730 LINE",
"164 660 LINE",
"233 660 LINE"
);
}
);
width = 163;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 690 LINE",
"89 690 LINE",
"74 620 LINE",
"86 620 LINE"
);
},
{
closed = 1;
nodes = (
"119 690 LINE",
"107 690 LINE",
"92 620 LINE",
"104 620 LINE"
);
}
);
width = 42;
}
);
note = quotedbl;
unicode = 0022;
},
{
color = 4;
glyphname = quotesingle;
lastChange = "2020-09-16 20:31:34 +0000";
layers = (
{
components = (
{
name = quotesinglbase;
transform = "{1, 0, 0, 1, 140, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 5 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 87;
},
{
components = (
{
name = quotesinglbase;
transform = "{1, 0, 0, 1, 131, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = space;
lastChange = "2020-09-29 09:10:28 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 86;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 31;
}
);
unicode = 0020;
},
{
glyphname = CR;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 208;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 624;
}
);
note = CR;
},
{
glyphname = .notdef;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"166 471 LINE",
"194 600 LINE",
"70 600 LINE",
"42 471 LINE"
);
},
{
closed = 1;
nodes = (
"-33 46 LINE",
"36 370 LINE",
"31 370 LINE",
"-38 46 LINE"
);
},
{
closed = 1;
nodes = (
"46 343 LINE",
"52 370 LINE",
"31 370 LINE",
"25 343 LINE"
);
},
{
closed = 1;
nodes = (
"74 417 LINE",
"85 471 LINE",
"59 471 LINE",
"48 417 LINE"
);
},
{
closed = 1;
nodes = (
"106 417 LINE",
"117 471 LINE",
"91 471 LINE",
"80 417 LINE"
);
},
{
closed = 1;
nodes = (
"139 417 LINE",
"150 471 LINE",
"123 471 LINE",
"112 417 LINE"
);
},
{
closed = 1;
nodes = (
"81 562 LINE",
"107 562 LINE",
"95 508 LINE",
"69 508 LINE"
);
},
{
closed = 1;
nodes = (
"141 562 LINE",
"167 562 LINE",
"155 508 LINE",
"129 508 LINE"
);
},
{
closed = 1;
nodes = (
"17 206 LINE",
"23 233 LINE",
"2 233 LINE",
"-4 206 LINE"
);
},
{
closed = 1;
nodes = (
"-6 46 LINE",
"63 370 LINE",
"58 370 LINE",
"-11 46 LINE"
);
},
{
closed = 1;
nodes = (
"73 343 LINE",
"79 370 LINE",
"58 370 LINE",
"52 343 LINE"
);
},
{
closed = 1;
nodes = (
"10 46 LINE",
"16 73 LINE",
"-5 73 LINE",
"-11 46 LINE"
);
},
{
closed = 1;
nodes = (
"10 46 LINE",
"79 370 LINE",
"74 370 LINE",
"5 46 LINE"
);
},
{
closed = 1;
nodes = (
"21 46 LINE",
"90 370 LINE",
"85 370 LINE",
"16 46 LINE"
);
},
{
closed = 1;
nodes = (
"100 343 LINE",
"106 370 LINE",
"85 370 LINE",
"79 343 LINE"
);
},
{
closed = 1;
nodes = (
"37 46 LINE",
"106 370 LINE",
"101 370 LINE",
"32 46 LINE"
);
},
{
closed = 1;
nodes = (
"71 206 LINE",
"77 233 LINE",
"56 233 LINE",
"50 206 LINE"
);
},
{
closed = 1;
nodes = (
"48 46 LINE",
"117 370 LINE",
"112 370 LINE",
"43 46 LINE"
);
},
{
closed = 1;
nodes = (
"98 206 LINE",
"104 233 LINE",
"83 233 LINE",
"77 206 LINE"
);
},
{
closed = 1;
nodes = (
"64 46 LINE",
"101 221 LINE",
"96 221 LINE",
"59 46 LINE"
);
},
{
closed = 1;
nodes = (
"96 221 LINE",
"133 370 LINE",
"128 370 LINE",
"91 221 LINE"
);
}
);
width = 136;
},
{
guideLines = (
{
position = "{98, 183}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"166 471 LINE",
"194 600 LINE",
"70 600 LINE",
"42 471 LINE"
);
},
{
closed = 1;
nodes = (
"-4 183 LINE",
"36 370 LINE",
"31 370 LINE",
"-9 183 LINE"
);
},
{
closed = 1;
nodes = (
"46 343 LINE",
"52 370 LINE",
"31 370 LINE",
"25 343 LINE"
);
},
{
closed = 1;
nodes = (
"74 417 LINE",
"85 471 LINE",
"59 471 LINE",
"48 417 LINE"
);
},
{
closed = 1;
nodes = (
"106 417 LINE",
"117 471 LINE",
"91 471 LINE",
"80 417 LINE"
);
},
{
closed = 1;
nodes = (
"139 417 LINE",
"150 471 LINE",
"123 471 LINE",
"112 417 LINE"
);
},
{
closed = 1;
nodes = (
"81 562 LINE",
"107 562 LINE",
"95 508 LINE",
"69 508 LINE"
);
},
{
closed = 1;
nodes = (
"141 562 LINE",
"167 562 LINE",
"155 508 LINE",
"129 508 LINE"
);
},
{
closed = 1;
nodes = (
"30 267 LINE",
"36 294 LINE",
"15 294 LINE",
"9 267 LINE"
);
},
{
closed = 1;
nodes = (
"23 183 LINE",
"63 370 LINE",
"58 370 LINE",
"18 183 LINE"
);
},
{
closed = 1;
nodes = (
"73 343 LINE",
"79 370 LINE",
"58 370 LINE",
"52 343 LINE"
);
},
{
closed = 1;
nodes = (
"39 183 LINE",
"45 210 LINE",
"24 210 LINE",
"18 183 LINE"
);
},
{
closed = 1;
nodes = (
"39 183 LINE",
"79 370 LINE",
"74 370 LINE",
"34 183 LINE"
);
},
{
closed = 1;
nodes = (
"50 183 LINE",
"90 370 LINE",
"85 370 LINE",
"45 183 LINE"
);
},
{
closed = 1;
nodes = (
"100 343 LINE",
"106 370 LINE",
"85 370 LINE",
"79 343 LINE"
);
},
{
closed = 1;
nodes = (
"66 183 LINE",
"106 370 LINE",
"101 370 LINE",
"61 183 LINE"
);
},
{
closed = 1;
nodes = (
"84 267 LINE",
"90 294 LINE",
"69 294 LINE",
"63 267 LINE"
);
},
{
closed = 1;
nodes = (
"77 183 LINE",
"117 370 LINE",
"112 370 LINE",
"72 183 LINE"
);
},
{
closed = 1;
nodes = (
"111 267 LINE",
"117 294 LINE",
"96 294 LINE",
"90 267 LINE"
);
},
{
closed = 1;
nodes = (
"93 183 LINE",
"114 282 LINE",
"109 282 LINE",
"88 183 LINE"
);
},
{
closed = 1;
nodes = (
"109 282 LINE",
"133 370 LINE",
"128 370 LINE",
"104 282 LINE"
);
}
);
width = 136;
}
);
note = .notdef;
},
{
glyphname = Euro;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"220 497 LINE",
"269 730 LINE",
"97 730 LINE",
"-58 0 LINE",
"114 0 LINE",
"180 311 LINE",
"100 311 LINE",
"50 75 LINE",
"38 75 LINE",
"161 655 LINE",
"173 655 LINE",
"140 497 LINE"
);
},
{
closed = 1;
nodes = (
"38 410 LINE",
"201 410 LINE",
"217 485 LINE",
"54 485 LINE"
);
},
{
closed = 1;
nodes = (
"20 323 LINE",
"183 323 LINE",
"199 398 LINE",
"36 398 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
10 21 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
19 21 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
30 2 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"63 399 LINE",
"125 690 LINE",
"89 690 LINE",
"-58 0 LINE",
"-22 0 LINE",
"50 341 LINE",
"38 341 LINE",
"-32 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"110 679 LINE",
"51 399 LINE"
);
},
{
closed = 1;
nodes = (
"29 376 LINE",
"58 376 LINE",
"60 387 LINE",
"31 387 LINE"
);
},
{
closed = 1;
nodes = (
"24 353 LINE",
"53 353 LINE",
"55 364 LINE",
"26 364 LINE"
);
}
);
width = 48;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = cent;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"84 45 LINE",
"133 90 LINE",
"185 333 LINE",
"106 333 LINE",
"60 120 LINE",
"48 120 LINE",
"144 570 LINE",
"156 570 LINE",
"108 345 LINE",
"187 345 LINE",
"241 600 LINE",
"212 645 LINE",
"119 645 LINE",
"70 600 LINE",
"-38 90 LINE",
"-9 45 LINE"
);
},
{
closed = 1;
nodes = (
"62 -32 LINE",
"80 52 LINE",
"0 52 LINE",
"-18 -32 LINE"
);
},
{
closed = 1;
nodes = (
"203 632 LINE",
"221 716 LINE",
"141 716 LINE",
"123 632 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-28 7 LINE",
"-18 15 LINE",
"45 313 LINE",
"33 313 LINE",
"-29 18 LINE",
"-41 18 LINE",
"93 649 LINE",
"105 649 LINE",
"36 325 LINE",
"48 325 LINE",
"117 652 LINE",
"111 660 LINE",
"91 660 LINE",
"81 652 LINE",
"-54 15 LINE",
"-48 7 LINE"
);
},
{
closed = 1;
nodes = (
"-38 -23 LINE",
"-32 7 LINE",
"-44 7 LINE",
"-50 -23 LINE"
);
},
{
closed = 1;
nodes = (
"107 660 LINE",
"113 690 LINE",
"101 690 LINE",
"95 660 LINE"
);
}
);
width = 49;
}
);
unicode = 00A2;
},
{
glyphname = currency;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"14 310 LINE",
"5 270 LINE",
"34 225 LINE",
"41 225 LINE",
"39 213 LINE",
"119 213 LINE",
"121 225 LINE",
"128 225 LINE",
"177 270 LINE",
"186 310 LINE",
"192 310 LINE",
"209 390 LINE",
"203 390 LINE",
"209 422 LINE",
"179 467 LINE",
"173 467 LINE",
"175 479 LINE",
"95 479 LINE",
"93 467 LINE",
"86 467 LINE",
"37 422 LINE",
"31 390 LINE",
"25 390 LINE",
"8 310 LINE"
);
},
{
closed = 1;
nodes = (
"111 392 LINE",
"123 392 LINE",
"103 300 LINE",
"91 300 LINE"
);
}
);
width = 196;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 344 LINE",
"-4 240 LINE",
"2 232 LINE",
"6 232 LINE",
"2 213 LINE",
"14 213 LINE",
"18 232 LINE",
"22 232 LINE",
"33 240 LINE",
"55 344 LINE",
"58 344 LINE",
"61 356 LINE",
"58 356 LINE",
"79 457 LINE",
"72 465 LINE",
"68 465 LINE",
"72 484 LINE",
"60 484 LINE",
"56 465 LINE",
"52 465 LINE",
"42 457 LINE",
"21 356 LINE",
"18 356 LINE",
"15 344 LINE"
);
},
{
closed = 1;
nodes = (
"53 454 LINE",
"65 454 LINE",
"21 243 LINE",
"9 243 LINE"
);
}
);
width = 55;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2020-09-16 20:35:37 +0000";
layers = (
{
components = (
{
name = S;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"134 690 LINE",
"214 690 LINE",
"232 774 LINE",
"152 774 LINE"
);
},
{
closed = 1;
nodes = (
"-19 -32 LINE",
"61 -32 LINE",
"79 52 LINE",
"-1 52 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
240 11 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
240 1 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
components = (
{
name = S;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"101 689 LINE",
"113 689 LINE",
"118 713 LINE",
"106 713 LINE"
);
},
{
closed = 1;
nodes = (
"-50 -23 LINE",
"-38 -23 LINE",
"-33 1 LINE",
"-45 1 LINE"
);
}
);
width = 48;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = sterling;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"114 0 LINE",
"130 75 LINE",
"38 75 LINE",
"40 87 LINE",
"132 87 LINE",
"148 162 LINE",
"56 162 LINE",
"161 655 LINE",
"173 655 LINE",
"71 174 LINE",
"151 174 LINE",
"269 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-58 0 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-22 0 LINE",
"-20 11 LINE",
"-44 11 LINE",
"-41 23 LINE",
"-17 23 LINE",
"-15 34 LINE",
"-39 34 LINE",
"98 679 LINE",
"110 679 LINE",
"-24 46 LINE",
"-12 46 LINE",
"125 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
}
);
width = 48;
}
);
unicode = 00A3;
},
{
glyphname = yen;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"69 162 LINE",
"57 162 LINE",
"81 271 LINE",
"1 271 LINE",
"-29 132 LINE",
"1 87 LINE",
"53 87 LINE",
"51 75 LINE",
"-42 75 LINE",
"-58 0 LINE",
"76 0 LINE",
"125 45 LINE",
"270 730 LINE",
"190 730 LINE"
);
},
{
closed = 1;
nodes = (
"22 370 LINE",
"194 370 LINE",
"210 445 LINE",
"38 445 LINE"
);
},
{
closed = 1;
nodes = (
"3 283 LINE",
"175 283 LINE",
"191 358 LINE",
"19 358 LINE"
);
},
{
closed = 1;
nodes = (
"40 457 LINE",
"120 457 LINE",
"178 730 LINE",
"98 730 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-26 34 LINE",
"-38 34 LINE",
"26 335 LINE",
"14 335 LINE",
"-50 31 LINE",
"-44 23 LINE",
"-28 23 LINE",
"-31 11 LINE",
"-55 11 LINE",
"-57 0 LINE",
"-29 0 LINE",
"-19 8 LINE",
"126 690 LINE",
"114 690 LINE"
);
},
{
closed = 1;
nodes = (
"22 370 LINE",
"58 370 LINE",
"60 381 LINE",
"24 381 LINE"
);
},
{
closed = 1;
nodes = (
"17 347 LINE",
"53 347 LINE",
"55 358 LINE",
"19 358 LINE"
);
},
{
closed = 1;
nodes = (
"27 393 LINE",
"39 393 LINE",
"102 690 LINE",
"90 690 LINE"
);
}
);
width = 49;
}
);
unicode = 00A5;
},
{
glyphname = plus;
lastChange = "2020-09-16 20:43:14 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"138 265 LINE",
"181 467 LINE",
"100 467 LINE",
"57 265 LINE"
);
},
{
closed = 1;
nodes = (
"212 329 LINE",
"228 404 LINE",
"28 404 LINE",
"12 329 LINE"
);
}
);
width = 212;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"43 306 LINE",
"55 364 LINE",
"43 364 LINE",
"31 306 LINE"
);
},
{
closed = 1;
nodes = (
"71 330 LINE",
"73 341 LINE",
"15 341 LINE",
"13 330 LINE"
);
}
);
width = 70;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2020-09-16 20:40:11 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"12 329 LINE",
"212 329 LINE",
"228 404 LINE",
"28 404 LINE"
);
}
);
width = 212;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"71 329 LINE",
"73 340 LINE",
"15 340 LINE",
"13 329 LINE"
);
}
);
width = 71;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2020-09-16 20:48:21 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"236 410 LINE",
"196 459 LINE",
"29 322 LINE",
"69 273 LINE"
);
},
{
closed = 1;
nodes = (
"236 322 LINE",
"69 459 LINE",
"29 410 LINE",
"196 273 LINE"
);
}
);
width = 237;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"46 342 LINE",
"40 350 LINE",
"12 328 LINE",
"18 320 LINE"
);
},
{
closed = 1;
nodes = (
"42 327 LINE",
"25 350 LINE",
"15 342 LINE",
"32 319 LINE"
);
}
);
width = 43;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2020-09-16 20:41:00 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"212 329 LINE",
"228 404 LINE",
"28 404 LINE",
"12 329 LINE"
);
},
{
closed = 1;
nodes = (
"111 251 OFFCURVE",
"131 271 OFFCURVE",
"131 291 CURVE SMOOTH",
"131 305 OFFCURVE",
"120 317 OFFCURVE",
"104 317 CURVE SMOOTH",
"84 317 OFFCURVE",
"64 297 OFFCURVE",
"64 277 CURVE SMOOTH",
"64 263 OFFCURVE",
"75 251 OFFCURVE",
"90 251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"145 411 OFFCURVE",
"165 431 OFFCURVE",
"165 451 CURVE SMOOTH",
"165 465 OFFCURVE",
"154 477 OFFCURVE",
"138 477 CURVE SMOOTH",
"118 477 OFFCURVE",
"98 457 OFFCURVE",
"98 437 CURVE SMOOTH",
"98 423 OFFCURVE",
"109 411 OFFCURVE",
"124 411 CURVE SMOOTH"
);
}
);
width = 212;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"71 329 LINE",
"73 340 LINE",
"15 340 LINE",
"13 329 LINE"
);
},
{
closed = 1;
nodes = (
"40 299 OFFCURVE",
"46 304 OFFCURVE",
"46 309 CURVE SMOOTH",
"46 312 OFFCURVE",
"43 316 OFFCURVE",
"38 316 CURVE SMOOTH",
"33 316 OFFCURVE",
"28 311 OFFCURVE",
"28 306 CURVE SMOOTH",
"28 302 OFFCURVE",
"31 299 OFFCURVE",
"35 299 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"51 352 OFFCURVE",
"57 357 OFFCURVE",
"57 362 CURVE SMOOTH",
"57 365 OFFCURVE",
"54 369 OFFCURVE",
"50 369 CURVE SMOOTH",
"45 369 OFFCURVE",
"40 364 OFFCURVE",
"40 359 CURVE SMOOTH",
"40 355 OFFCURVE",
"42 352 OFFCURVE",
"46 352 CURVE SMOOTH"
);
}
);
width = 71;
}
);
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2020-09-16 20:41:18 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"222 370 LINE",
"237 440 LINE",
"36 440 LINE",
"21 370 LINE"
);
},
{
closed = 1;
nodes = (
"205 288 LINE",
"220 358 LINE",
"19 358 LINE",
"4 288 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
8 8 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 8 0 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 214;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"73 337 LINE",
"75 348 LINE",
"17 348 LINE",
"15 337 LINE"
);
},
{
closed = 1;
nodes = (
"69 320 LINE",
"71 331 LINE",
"13 331 LINE",
"11 320 LINE"
);
}
);
width = 71;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2020-09-16 20:41:26 +0000";
layers = (
{
components = (
{
name = equal;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"177 466 LINE",
"5 263 LINE",
"74 263 LINE",
"246 466 LINE"
);
}
);
width = 217;
},
{
components = (
{
name = equal;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"51 354 LINE",
"23 315 LINE",
"35 315 LINE",
"63 354 LINE"
);
}
);
width = 71;
}
);
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2020-09-16 20:42:28 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"204 288 LINE",
"236 440 LINE",
"36 440 LINE",
"21 370 LINE",
"157 370 LINE",
"154 358 LINE",
"19 358 LINE",
"4 288 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"71 318 LINE",
"79 354 LINE",
"19 354 LINE",
"16 342 LINE",
"64 342 LINE",
"61 330 LINE",
"14 330 LINE",
"11 318 LINE"
);
}
);
width = 73;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2020-09-16 20:42:37 +0000";
layers = (
{
components = (
{
name = greater;
transform = "{-1, 0, 0, -1, 240, 728}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
},
{
components = (
{
name = greater;
transform = "{-1, 0, 0, -1, 89, 672}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 73;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2020-09-16 20:43:05 +0000";
layers = (
{
components = (
{
name = greater;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"202 276 LINE",
"1 276 LINE",
"-14 206 LINE",
"187 206 LINE"
);
}
);
width = 213;
},
{
components = (
{
name = greater;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"69 312 LINE",
"9 312 LINE",
"6 300 LINE",
"66 300 LINE"
);
}
);
width = 73;
}
);
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2020-09-17 07:00:10 +0000";
layers = (
{
components = (
{
name = greaterequal;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 213;
},
{
components = (
{
name = greaterequal;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 73;
}
);
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"260 399 LINE",
"27 399 LINE",
"13 329 LINE",
"246 329 LINE"
);
},
{
closed = 1;
nodes = (
"80 291 LINE",
"161 291 LINE",
"193 438 LINE",
"112 438 LINE"
);
},
{
closed = 1;
nodes = (
"235 279 LINE",
"2 279 LINE",
"-13 209 LINE",
"220 209 LINE"
);
}
);
width = 246;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"65 340 LINE",
"15 340 LINE",
"13 329 LINE",
"63 329 LINE"
);
},
{
closed = 1;
nodes = (
"30 320 LINE",
"42 320 LINE",
"48 350 LINE",
"36 350 LINE"
);
},
{
closed = 1;
nodes = (
"59 314 LINE",
"9 314 LINE",
"7 303 LINE",
"57 303 LINE"
);
}
);
width = 63;
}
);
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"221 440 LINE",
"149 440 LINE",
"108 418 LINE",
"40 418 LINE",
"21 348 LINE",
"89 348 LINE",
"129 370 LINE",
"202 370 LINE"
);
},
{
closed = 1;
nodes = (
"200 358 LINE",
"127 358 LINE",
"86 336 LINE",
"18 336 LINE",
"-1 266 LINE",
"67 266 LINE",
"108 288 LINE",
"181 288 LINE"
);
}
);
width = 197;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"47 353 LINE",
"39 353 LINE",
"24 348 LINE",
"16 348 LINE",
"14 336 LINE",
"22 336 LINE",
"37 341 LINE",
"45 341 LINE"
);
},
{
closed = 1;
nodes = (
"44 335 LINE",
"36 335 LINE",
"21 330 LINE",
"13 330 LINE",
"10 318 LINE",
"18 318 LINE",
"33 323 LINE",
"41 323 LINE"
);
}
);
width = 43;
}
);
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"208 403 LINE",
"137 403 LINE",
"97 381 LINE",
"27 381 LINE",
"8 311 LINE",
"78 311 LINE",
"119 333 LINE",
"189 333 LINE"
);
}
);
width = 192;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"48 353 LINE",
"40 353 LINE",
"25 348 LINE",
"17 348 LINE",
"14 336 LINE",
"22 336 LINE",
"37 341 LINE",
"45 341 LINE"
);
}
);
width = 43;
}
);
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"168 399 LINE",
"27 399 LINE",
"12 329 LINE",
"153 329 LINE"
);
},
{
closed = 1;
nodes = (
"99 289 LINE",
"144 289 LINE",
"165 384 LINE",
"120 384 LINE"
);
}
);
width = 153;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"59 399 LINE",
"27 399 LINE",
"24 387 LINE",
"56 387 LINE"
);
},
{
closed = 1;
nodes = (
"40 370 LINE",
"52 370 LINE",
"59 399 LINE",
"47 399 LINE"
);
}
);
width = 44;
}
);
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"171 690 LINE",
"141 549 LINE",
"211 549 LINE",
"241 690 LINE"
);
},
{
closed = 1;
nodes = (
"89 690 LINE",
"59 549 LINE",
"129 549 LINE",
"159 690 LINE"
);
},
{
closed = 1;
nodes = (
"202 690 LINE",
"125 690 LINE",
"111 625 LINE",
"188 625 LINE"
);
}
);
width = 164;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"113 690 LINE",
"107 660 LINE",
"119 660 LINE",
"125 690 LINE"
);
},
{
closed = 1;
nodes = (
"89 690 LINE",
"83 660 LINE",
"95 660 LINE",
"101 690 LINE"
);
},
{
closed = 1;
nodes = (
"125 690 LINE",
"89 690 LINE",
"87 678 LINE",
"123 678 LINE"
);
}
);
width = 49;
}
);
unicode = 005E;
},
{
glyphname = emptyset;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"231 730 LINE",
"137 730 LINE",
"98 730 LINE",
"-48 45 LINE",
"-19 0 LINE",
"76 0 LINE",
"115 0 LINE",
"261 685 LINE"
);
},
{
closed = 1;
nodes = (
"175 655 LINE",
"51 75 LINE",
"38 75 LINE",
"162 655 LINE"
);
},
{
closed = 1;
nodes = (
"11 307 LINE",
"171 307 LINE",
"187 382 LINE",
"27 382 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"118 690 LINE",
"102 690 LINE",
"89 690 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-42 0 LINE",
"-21 0 LINE",
"124 682 LINE"
);
},
{
closed = 1;
nodes = (
"112 679 LINE",
"-30 11 LINE",
"-43 11 LINE",
"99 679 LINE"
);
},
{
closed = 1;
nodes = (
"17 339 LINE",
"41 339 LINE",
"44 350 LINE",
"20 350 LINE"
);
}
);
width = 49;
}
);
unicode = 2205;
},
{
glyphname = infinity;
lastChange = "2020-09-17 07:00:31 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"299 318 LINE",
"319 410 LINE",
"319 411 LINE",
"282 450 LINE",
"189 450 LINE",
"181 410 LINE",
"169 410 LINE",
"177 450 LINE",
"83 450 LINE",
"30 411 LINE",
"30 410 LINE",
"10 318 LINE",
"10 317 LINE",
"47 278 LINE",
"141 278 LINE",
"149 318 LINE",
"161 318 LINE",
"153 278 LINE",
"246 278 LINE",
"299 317 LINE"
);
},
{
closed = 1;
nodes = (
"96 370 LINE",
"128 370 LINE",
"126 358 LINE",
"94 358 LINE"
);
},
{
closed = 1;
nodes = (
"203 370 LINE",
"235 370 LINE",
"233 358 LINE",
"201 358 LINE"
);
}
);
width = 302;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"74 336 LINE",
"78 356 LINE",
"78 356 LINE",
"72 364 LINE",
"55 364 LINE",
"54 358 LINE",
"44 358 LINE",
"45 364 LINE",
"28 364 LINE",
"18 356 LINE",
"18 356 LINE",
"14 336 LINE",
"14 336 LINE",
"20 328 LINE",
"37 328 LINE",
"39 334 LINE",
"49 334 LINE",
"47 328 LINE",
"64 328 LINE",
"74 336 LINE"
);
},
{
closed = 1;
nodes = (
"29 352 LINE",
"41 352 LINE",
"39 340 LINE",
"27 340 LINE"
);
},
{
closed = 1;
nodes = (
"53 352 LINE",
"65 352 LINE",
"63 340 LINE",
"51 340 LINE"
);
}
);
width = 72;
}
);
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"171 642 LINE",
"35 1 LINE",
"23 1 LINE",
"162 655 LINE",
"254 655 LINE",
"270 730 LINE",
"98 730 LINE",
"-57 1 LINE",
"35 1 LINE",
"32 -12 LINE",
"-60 -12 LINE",
"-76 -87 LINE",
"96 -87 LINE",
"251 642 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"108 666 LINE",
"-33 1 LINE",
"-45 1 LINE",
"99 678 LINE",
"123 678 LINE",
"126 690 LINE",
"90 690 LINE",
"-57 1 LINE",
"-33 1 LINE",
"-36 -12 LINE",
"-60 -12 LINE",
"-62 -23 LINE",
"-26 -23 LINE",
"120 666 LINE"
);
}
);
width = 49;
}
);
unicode = 222B;
},
{
glyphname = product;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"96 -87 LINE",
"270 730 LINE",
"98 730 LINE",
"-76 -87 LINE",
"16 -87 LINE",
"17 -87 LINE"
);
},
{
closed = 1;
nodes = (
"159 641 LINE",
"171 641 LINE",
"16 -87 LINE",
"4 -87 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-27 -23 LINE",
"125 690 LINE",
"89 690 LINE",
"-63 -23 LINE",
"-39 -23 LINE",
"-38 -23 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"110 679 LINE",
"-39 -23 LINE",
"-51 -23 LINE"
);
}
);
width = 48;
}
);
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-8 234 LINE",
"-76 -87 LINE",
"96 -87 LINE",
"158 205 LINE",
"78 205 LINE",
"32 -12 LINE",
"20 -12 LINE",
"72 234 LINE"
);
},
{
closed = 1;
nodes = (
"7 304 LINE",
"179 304 LINE",
"195 379 LINE",
"23 379 LINE"
);
},
{
closed = 1;
nodes = (
"87 304 LINE",
"162 655 LINE",
"174 655 LINE",
"118 391 LINE",
"198 391 LINE",
"270 730 LINE",
"230 730 LINE",
"98 730 LINE",
"7 304 LINE"
);
},
{
closed = 1;
nodes = (
"-11 217 LINE",
"161 217 LINE",
"177 292 LINE",
"5 292 LINE"
);
},
{
closed = 1;
nodes = (
"81 217 LINE",
"161 217 LINE",
"195 379 LINE",
"115 379 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 323 LINE",
"-62 -23 LINE",
"-26 -23 LINE",
"44 306 LINE",
"32 306 LINE",
"-36 -12 LINE",
"-48 -12 LINE",
"24 323 LINE"
);
},
{
closed = 1;
nodes = (
"15 341 LINE",
"51 341 LINE",
"54 352 LINE",
"18 352 LINE"
);
},
{
closed = 1;
nodes = (
"27 341 LINE",
"99 679 LINE",
"111 679 LINE",
"44 364 LINE",
"56 364 LINE",
"126 690 LINE",
"121 690 LINE",
"90 690 LINE",
"15 341 LINE"
);
},
{
closed = 1;
nodes = (
"10 318 LINE",
"46 318 LINE",
"49 329 LINE",
"13 329 LINE"
);
},
{
closed = 1;
nodes = (
"34 318 LINE",
"46 318 LINE",
"54 352 LINE",
"42 352 LINE"
);
}
);
width = 49;
}
);
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-67 -42 LINE",
"-37 -87 LINE",
"95 -87 LINE",
"251 643 LINE",
"171 643 LINE",
"31 -12 LINE",
"19 -12 LINE",
"161 655 LINE",
"253 655 LINE",
"269 730 LINE",
"97 730 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-61 -15 LINE",
"-55 -23 LINE",
"-27 -23 LINE",
"120 667 LINE",
"108 667 LINE",
"-36 -12 LINE",
"-48 -12 LINE",
"99 679 LINE",
"123 679 LINE",
"125 690 LINE",
"89 690 LINE"
);
}
);
width = 48;
}
);
unicode = 221A;
},
{
glyphname = partialdiff;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-48 45 LINE",
"-19 0 LINE",
"74 0 LINE",
"124 45 LINE",
"260 685 LINE",
"231 730 LINE",
"138 730 LINE",
"88 685 LINE",
"69 597 LINE",
"149 597 LINE",
"162 655 LINE",
"174 655 LINE",
"159 585 LINE",
"106 585 LINE",
"67 585 LINE"
);
},
{
closed = 1;
nodes = (
"38 75 LINE",
"122 470 LINE",
"134 470 LINE",
"50 75 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-56 8 LINE",
"-50 0 LINE",
"-30 0 LINE",
"-20 8 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"61 557 LINE",
"73 557 LINE",
"99 679 LINE",
"111 679 LINE",
"82 545 LINE",
"70 545 LINE",
"58 545 LINE"
);
},
{
closed = 1;
nodes = (
"-43 11 LINE",
"68 534 LINE",
"80 534 LINE",
"-31 11 LINE"
);
}
);
width = 48;
}
);
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"281 730 LINE",
"126 0 LINE",
"202 0 LINE",
"357 730 LINE"
);
},
{
closed = 1;
nodes = (
"283 322 LINE",
"224 45 LINE",
"253 0 LINE",
"347 0 LINE",
"396 45 LINE",
"455 322 LINE",
"425 367 LINE",
"332 367 LINE"
);
},
{
closed = 1;
nodes = (
"368 292 LINE",
"322 75 LINE",
"310 75 LINE",
"356 292 LINE"
);
},
{
closed = 1;
nodes = (
"88 685 LINE",
"29 408 LINE",
"58 363 LINE",
"152 363 LINE",
"201 408 LINE",
"260 685 LINE",
"230 730 LINE",
"137 730 LINE"
);
},
{
closed = 1;
nodes = (
"174 655 LINE",
"127 438 LINE",
"115 438 LINE",
"162 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 1 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 1 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 14 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 26 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
13 8 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 456;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"137 690 LINE",
"-10 0 LINE",
"2 0 LINE",
"149 690 LINE"
);
},
{
closed = 1;
nodes = (
"82 319 LINE",
"16 8 LINE",
"22 0 LINE",
"42 0 LINE",
"52 8 LINE",
"118 319 LINE",
"112 327 LINE",
"92 327 LINE"
);
},
{
closed = 1;
nodes = (
"105 316 LINE",
"40 11 LINE",
"28 11 LINE",
"93 316 LINE"
);
},
{
closed = 1;
nodes = (
"86 676 LINE",
"20 365 LINE",
"26 357 LINE",
"46 357 LINE",
"56 365 LINE",
"122 676 LINE",
"115 684 LINE",
"95 684 LINE"
);
},
{
closed = 1;
nodes = (
"109 673 LINE",
"44 368 LINE",
"32 368 LINE",
"97 673 LINE"
);
}
);
width = 120;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"281 730 LINE",
"126 0 LINE",
"202 0 LINE",
"357 730 LINE"
);
},
{
closed = 1;
nodes = (
"283 322 LINE",
"224 45 LINE",
"253 0 LINE",
"347 0 LINE",
"396 45 LINE",
"455 322 LINE",
"425 367 LINE",
"332 367 LINE"
);
},
{
closed = 1;
nodes = (
"368 292 LINE",
"322 75 LINE",
"310 75 LINE",
"356 292 LINE"
);
},
{
closed = 1;
nodes = (
"88 685 LINE",
"29 408 LINE",
"58 363 LINE",
"152 363 LINE",
"201 408 LINE",
"260 685 LINE",
"230 730 LINE",
"136 730 LINE"
);
},
{
closed = 1;
nodes = (
"174 655 LINE",
"127 438 LINE",
"115 438 LINE",
"162 655 LINE"
);
},
{
closed = 1;
nodes = (
"467 322 LINE",
"408 45 LINE",
"437 0 LINE",
"531 0 LINE",
"580 45 LINE",
"639 322 LINE",
"609 367 LINE",
"516 367 LINE"
);
},
{
closed = 1;
nodes = (
"552 292 LINE",
"506 75 LINE",
"494 75 LINE",
"540 292 LINE"
);
}
);
width = 640;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"137 690 LINE",
"-10 0 LINE",
"2 0 LINE",
"149 690 LINE"
);
},
{
closed = 1;
nodes = (
"82 319 LINE",
"16 8 LINE",
"22 0 LINE",
"42 0 LINE",
"52 8 LINE",
"118 319 LINE",
"112 327 LINE",
"92 327 LINE"
);
},
{
closed = 1;
nodes = (
"105 316 LINE",
"40 11 LINE",
"28 11 LINE",
"93 316 LINE"
);
},
{
closed = 1;
nodes = (
"86 676 LINE",
"20 365 LINE",
"26 357 LINE",
"46 357 LINE",
"56 365 LINE",
"122 676 LINE",
"115 684 LINE",
"95 684 LINE"
);
},
{
closed = 1;
nodes = (
"109 673 LINE",
"44 368 LINE",
"32 368 LINE",
"97 673 LINE"
);
},
{
closed = 1;
nodes = (
"130 319 LINE",
"64 8 LINE",
"70 0 LINE",
"90 0 LINE",
"100 8 LINE",
"166 319 LINE",
"160 327 LINE",
"140 327 LINE"
);
},
{
closed = 1;
nodes = (
"153 316 LINE",
"88 11 LINE",
"76 11 LINE",
"141 316 LINE"
);
}
);
width = 168;
}
);
unicode = 2030;
},
{
glyphname = upArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"64 289 LINE",
"81 367 LINE",
"93 367 LINE",
"38 112 LINE",
"118 112 LINE",
"173 367 LINE",
"185 367 LINE",
"168 289 LINE",
"228 289 LINE",
"261 442 LINE",
"37 442 LINE",
"4 289 LINE"
);
}
);
width = 237;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"16 289 LINE",
"46 431 LINE",
"58 431 LINE",
"13 219 LINE",
"25 219 LINE",
"70 431 LINE",
"82 431 LINE",
"52 289 LINE",
"64 289 LINE",
"97 442 LINE",
"37 442 LINE",
"4 289 LINE"
);
}
);
width = 73;
}
);
unicode = 2191;
},
{
glyphname = northEastArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -115, 177}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 387;
},
{
components = (
{
name = upArrow;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -153, 177}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 208;
}
);
unicode = 2197;
},
{
glyphname = rightArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0, -1, 1, 0, -82, 449}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 390;
},
{
components = (
{
name = upArrow;
transform = "{0, -1, 1, 0, -202, 366}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 253;
}
);
unicode = 2192;
},
{
glyphname = southEastArrow;
lastChange = "2020-09-16 15:35:05 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-0.70711, -0.70711, 0.70711, -0.70711, 49, 645}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 340;
},
{
components = (
{
name = upArrow;
transform = "{-0.70711, -0.70711, 0.70711, -0.70711, -95, 645}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 196;
}
);
unicode = 2198;
},
{
glyphname = downArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 250, 661}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 237;
},
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 86, 661}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 73;
}
);
unicode = 2193;
},
{
glyphname = southWestArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-0.70711, 0.70711, -0.70711, -0.70711, 514, 481}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 387;
},
{
components = (
{
name = upArrow;
transform = "{-0.70711, 0.70711, -0.70711, -0.70711, 374, 481}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 208;
}
);
unicode = 2199;
},
{
glyphname = leftArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 472, 449}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 359;
},
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 454, 366}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 232;
}
);
unicode = 2190;
},
{
glyphname = northWestArrow;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0.70711, 0.70711, -0.70711, 0.70711, 300, -3}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 340;
},
{
components = (
{
name = upArrow;
transform = "{0.70711, 0.70711, -0.70711, 0.70711, 300, -3}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 197;
}
);
unicode = 2196;
},
{
glyphname = lozenge;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-21 174 LINE",
"18 174 LINE",
"113 174 LINE",
"162 219 LINE",
"252 645 LINE",
"213 645 LINE",
"119 645 LINE",
"70 600 LINE"
);
},
{
closed = 1;
nodes = (
"88 249 LINE",
"75 249 LINE",
"143 570 LINE",
"156 570 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-20 174 LINE",
"-8 174 LINE",
"8 174 LINE",
"18 182 LINE",
"116 645 LINE",
"103 645 LINE",
"88 645 LINE",
"78 637 LINE"
);
},
{
closed = 1;
nodes = (
"6 185 LINE",
"-6 185 LINE",
"90 634 LINE",
"102 634 LINE"
);
}
);
width = 49;
}
);
unicode = 25CA;
},
{
glyphname = at;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"232 730 LINE",
"138 730 LINE",
"88 685 LINE",
"-48 45 LINE",
"-18 0 LINE",
"116 0 LINE",
"132 75 LINE",
"38 75 LINE",
"162 655 LINE",
"174 655 LINE",
"133 466 LINE",
"91 466 LINE",
"42 420 LINE",
"3 237 LINE",
"32 192 LINE",
"77 192 LINE",
"55 87 LINE",
"135 87 LINE",
"262 685 LINE",
"233 730 LINE"
);
},
{
closed = 1;
nodes = (
"79 267 LINE",
"106 391 LINE",
"118 391 LINE",
"91 267 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 9 16 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 11 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 10 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"109 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-56 8 LINE",
"-50 0 LINE",
"-22 0 LINE",
"-19 11 LINE",
"-43 11 LINE",
"99 679 LINE",
"111 679 LINE",
"65 466 LINE",
"55 466 LINE",
"48 458 LINE",
"-7 200 LINE",
"-9 192 LINE",
"7 192 LINE",
"-29 23 LINE",
"-17 23 LINE",
"123 682 LINE",
"117 690 LINE"
);
},
{
closed = 1;
nodes = (
"-3 202 LINE",
"51 455 LINE",
"63 455 LINE",
"9 202 LINE"
);
}
);
width = 48;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2020-09-16 15:26:48 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"202 412 LINE",
"269 730 LINE",
"136 730 LINE",
"87 685 LINE",
"-58 0 LINE",
"114 0 LINE",
"181 313 LINE",
"101 313 LINE",
"50 75 LINE",
"38 75 LINE",
"161 655 LINE",
"173 655 LINE",
"122 412 LINE"
);
},
{
closed = 1;
nodes = (
"20 325 LINE",
"183 325 LINE",
"199 400 LINE",
"36 400 LINE"
);
},
{
closed = 1;
nodes = (
"111 -12 LINE",
"183 326 LINE",
"196 326 LINE",
"212 400 LINE",
"119 400 LINE",
"119 401 LINE",
"25 -42 LINE",
"55 -87 LINE",
"102 -87 LINE",
"117 -12 LINE"
);
}
);
width = 197;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"66 412 LINE",
"125 690 LINE",
"98 690 LINE",
"87 679 LINE",
"-58 0 LINE",
"-22 0 LINE",
"45 313 LINE",
"33 313 LINE",
"-32 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"110 679 LINE",
"54 412 LINE"
);
},
{
closed = 1;
nodes = (
"33 388 LINE",
"60 388 LINE",
"63 400 LINE",
"36 400 LINE"
);
},
{
closed = 1;
nodes = (
"-25 -12 LINE",
"61 389 LINE",
"74 389 LINE",
"76 400 LINE",
"51 400 LINE",
"50 393 LINE",
"-37 -15 LINE",
"-31 -23 LINE",
"-21 -23 LINE",
"-19 -12 LINE"
);
}
);
width = 61;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"25 389 LINE",
"101 389 LINE",
"173 730 LINE",
"97 730 LINE"
);
},
{
closed = 1;
nodes = (
"31 0 LINE",
"107 0 LINE",
"262 730 LINE",
"186 730 LINE"
);
}
);
width = 177;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"25 389 LINE",
"37 389 LINE",
"101 690 LINE",
"89 690 LINE"
);
},
{
closed = 1;
nodes = (
"-33 0 LINE",
"-21 0 LINE",
"126 690 LINE",
"114 690 LINE"
);
}
);
width = 49;
}
);
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"96 -87 LINE",
"251 643 LINE",
"159 643 LINE",
"162 655 LINE",
"254 655 LINE",
"270 730 LINE",
"98 730 LINE",
"-58 0 LINE",
"34 0 LINE",
"32 -12 LINE",
"-60 -12 LINE",
"-76 -87 LINE"
);
},
{
closed = 1;
nodes = (
"143 568 LINE",
"155 568 LINE",
"50 75 LINE",
"38 75 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-25 -23 LINE",
"122 667 LINE",
"98 667 LINE",
"100 679 LINE",
"124 679 LINE",
"127 690 LINE",
"90 690 LINE",
"-57 0 LINE",
"-32 0 LINE",
"-35 -12 LINE",
"-60 -12 LINE",
"-62 -23 LINE"
);
},
{
closed = 1;
nodes = (
"95 656 LINE",
"107 656 LINE",
"-30 11 LINE",
"-42 11 LINE"
);
}
);
width = 50;
}
);
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-19 0 LINE",
"258 0 LINE",
"307 45 LINE",
"452 730 LINE",
"413 730 LINE",
"137 730 LINE",
"88 685 LINE"
);
},
{
closed = 1;
nodes = (
"233 75 LINE",
"38 75 LINE",
"161 655 LINE",
"356 655 LINE"
);
},
{
closed = 1;
nodes = (
"160 162 LINE",
"148 162 LINE",
"235 568 LINE",
"247 568 LINE",
"200 349 LINE",
"279 349 LINE",
"332 598 LINE",
"303 643 LINE",
"210 643 LINE",
"161 598 LINE",
"62 132 LINE",
"91 87 LINE",
"184 87 LINE",
"233 132 LINE",
"277 337 LINE",
"198 337 LINE"
);
}
);
width = 367;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-58 0 LINE",
"-21 0 LINE",
"18 0 LINE",
"28 8 LINE",
"173 690 LINE",
"152 690 LINE",
"97 690 LINE",
"87 682 LINE"
);
},
{
closed = 1;
nodes = (
"16 11 LINE",
"-44 11 LINE",
"98 679 LINE",
"158 679 LINE"
);
},
{
closed = 1;
nodes = (
"-3 34 LINE",
"-15 34 LINE",
"117 656 LINE",
"129 656 LINE",
"64 349 LINE",
"76 349 LINE",
"142 659 LINE",
"136 667 LINE",
"116 667 LINE",
"106 659 LINE",
"-27 31 LINE",
"-21 23 LINE",
"-1 23 LINE",
"9 31 LINE",
"74 337 LINE",
"62 337 LINE"
);
}
);
width = 96;
}
);
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-19 0 LINE",
"259 0 LINE",
"308 45 LINE",
"453 730 LINE",
"414 730 LINE",
"137 730 LINE",
"88 685 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"161 655 LINE",
"357 655 LINE",
"234 75 LINE",
"38 75 LINE"
);
},
{
closed = 1;
nodes = (
"132 87 LINE",
"179 306 LINE",
"191 306 LINE",
"144 87 LINE",
"224 87 LINE",
"278 337 LINE",
"245 337 LINE",
"247 349 LINE",
"280 349 LINE",
"333 598 LINE",
"303 643 LINE",
"171 643 LINE",
"52 87 LINE"
);
},
{
closed = 1;
nodes = (
"235 568 LINE",
"247 568 LINE",
"207 381 LINE",
"195 381 LINE"
);
}
);
width = 368;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-21 0 LINE",
"18 0 LINE",
"28 8 LINE",
"173 690 LINE",
"152 690 LINE",
"97 690 LINE",
"87 682 LINE",
"-58 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 679 LINE",
"158 679 LINE",
"16 11 LINE",
"-44 11 LINE"
);
},
{
closed = 1;
nodes = (
"-17 22 LINE",
"50 338 LINE",
"62 338 LINE",
"-5 22 LINE",
"7 22 LINE",
"74 338 LINE",
"68 338 LINE",
"70 349 LINE",
"76 349 LINE",
"142 660 LINE",
"136 668 LINE",
"108 668 LINE",
"-29 22 LINE"
);
},
{
closed = 1;
nodes = (
"118 657 LINE",
"130 657 LINE",
"64 349 LINE",
"52 349 LINE"
);
}
);
width = 96;
}
);
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2020-09-16 15:35:07 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = M;
transform = "{1, 0, 0, 1, 237, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 513;
},
{
components = (
{
name = T;
},
{
name = M;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 144;
}
);
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"157 389 LINE",
"207 434 LINE",
"260 685 LINE",
"230 730 LINE",
"138 730 LINE",
"88 685 LINE",
"35 434 LINE",
"65 389 LINE"
);
},
{
closed = 1;
nodes = (
"162 655 LINE",
"174 655 LINE",
"133 464 LINE",
"121 464 LINE"
);
}
);
width = 185;
},
{
associatedMasterId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
layerId = "6BA98D68-ED8F-4DAF-B5DE-FFEA0C5680EF";
name = "Apr 2 20, 16:24";
paths = (
{
closed = 1;
nodes = (
"6 690 LINE",
"6 645 LINE",
"6 434 LINE",
"45 389 LINE",
"139 389 LINE",
"178 389 LINE",
"178 645 LINE",
"138 690 LINE"
);
},
{
closed = 1;
nodes = (
"98 464 LINE",
"86 464 LINE",
"86 615 LINE",
"98 615 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"55 400 LINE",
"65 408 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"29 408 LINE",
"35 400 LINE"
);
},
{
closed = 1;
nodes = (
"99 679 LINE",
"111 679 LINE",
"54 411 LINE",
"42 411 LINE"
);
}
);
width = 48;
}
);
unicode = 00B0;
},
{
glyphname = bar;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-76 -87 LINE",
"0 -87 LINE",
"174 730 LINE",
"98 730 LINE"
);
}
);
width = 89;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-63 -23 LINE",
"-51 -23 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-76 -87 LINE",
"0 -87 LINE",
"81 295 LINE",
"5 295 LINE"
);
},
{
closed = 1;
nodes = (
"8 307 LINE",
"84 307 LINE",
"174 730 LINE",
"98 730 LINE"
);
}
);
width = 89;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-63 -23 LINE",
"-51 -23 LINE",
"17 295 LINE",
"5 295 LINE"
);
},
{
closed = 1;
nodes = (
"7 307 LINE",
"19 307 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"70 600 LINE",
"97 600 LINE",
"94 585 LINE",
"67 585 LINE",
"8 307 LINE",
"84 307 LINE",
"143 585 LINE",
"116 585 LINE",
"119 600 LINE",
"146 600 LINE",
"174 730 LINE",
"98 730 LINE"
);
}
);
width = 89;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"87 679 LINE",
"119 679 LINE",
"115 664 LINE",
"83 664 LINE",
"81 653 LINE",
"157 653 LINE",
"159 664 LINE",
"127 664 LINE",
"131 679 LINE",
"163 679 LINE",
"165 690 LINE",
"89 690 LINE"
);
}
);
width = 88;
}
);
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"84 307 LINE",
"103 397 LINE",
"76 397 LINE",
"79 412 LINE",
"106 412 LINE",
"143 585 LINE",
"116 585 LINE",
"119 600 LINE",
"146 600 LINE",
"174 730 LINE",
"98 730 LINE",
"70 600 LINE",
"97 600 LINE",
"94 585 LINE",
"67 585 LINE",
"30 412 LINE",
"57 412 LINE",
"54 397 LINE",
"27 397 LINE",
"8 307 LINE"
);
}
);
width = 89;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"152 627 LINE",
"154 638 LINE",
"122 638 LINE",
"126 653 LINE",
"158 653 LINE",
"160 664 LINE",
"128 664 LINE",
"131 679 LINE",
"163 679 LINE",
"165 690 LINE",
"89 690 LINE",
"87 679 LINE",
"119 679 LINE",
"116 664 LINE",
"84 664 LINE",
"82 653 LINE",
"114 653 LINE",
"110 638 LINE",
"78 638 LINE",
"76 627 LINE"
);
}
);
width = 89;
}
);
unicode = 2021;
},
{
color = 4;
glyphname = dieresiscomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, 94, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 171;
},
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, 96, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 119;
}
);
unicode = 0308;
},
{
color = 4;
glyphname = dotaccentcomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 85, 90}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 155;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 96, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 101;
}
);
unicode = 0307;
},
{
color = 4;
glyphname = gravecomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 258, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 148, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 0;
}
);
unicode = 0300;
},
{
color = 4;
glyphname = acutecomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, 94, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 197;
},
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, 96, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 117;
}
);
unicode = 0301;
},
{
color = 4;
glyphname = circumflexcomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, 101, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 179;
},
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, 96, 92}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 125;
}
);
unicode = 0302;
},
{
color = 4;
glyphname = ringcomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 98, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 176;
},
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, 97, 91}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 126;
}
);
unicode = 030A;
},
{
color = 4;
glyphname = tildecomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, 94, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 171;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, 96, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 121;
}
);
unicode = 0303;
},
{
color = 4;
glyphname = cedillacomb;
lastChange = "2020-09-16 15:35:06 +0000";
layers = (
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, -90, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 2;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, -69, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 0;
}
);
unicode = 0327;
},
{
color = 4;
glyphname = acute;
lastChange = "2020-09-26 15:28:25 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"106 612 LINE",
"185 730 LINE",
"120 730 LINE",
"72 612 LINE"
);
}
);
width = 131;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 612 LINE",
"117 690 LINE",
"104 690 LINE",
"73 612 LINE"
);
}
);
width = 40;
}
);
unicode = 00B4;
},
{
color = 4;
glyphname = breve;
lastChange = "2020-09-26 15:28:31 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"196 612 LINE",
"222 730 LINE",
"166 730 LINE",
"148 649 LINE",
"136 649 LINE",
"154 730 LINE",
"98 730 LINE",
"72 612 LINE"
);
}
);
width = 136;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
},
{
place = "{111.5, 10.5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"119 660 LINE",
"125 690 LINE",
"113 690 LINE",
"110 672 LINE",
"98 672 LINE",
"101 690 LINE",
"89 690 LINE",
"83 660 LINE"
);
}
);
width = 48;
}
);
unicode = 02D8;
},
{
color = 4;
glyphname = caron;
lastChange = "2020-09-26 15:28:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"196 612 LINE",
"221 730 LINE",
"165 730 LINE",
"148 651 LINE",
"136 651 LINE",
"153 730 LINE",
"97 730 LINE",
"72 612 LINE"
);
}
);
width = 136;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
},
{
place = "{111.5, 10.5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"119 660 LINE",
"125 690 LINE",
"113 690 LINE",
"110 672 LINE",
"98 672 LINE",
"101 690 LINE",
"89 690 LINE",
"83 660 LINE"
);
}
);
width = 48;
}
);
unicode = 02C7;
},
{
color = 4;
glyphname = cedilla;
lastChange = "2020-09-26 15:28:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-60 -12 LINE",
"-71 -62 LINE",
"-30 -62 LINE",
"-32 -74 LINE",
"-73 -74 LINE",
"-84 -124 LINE",
"-4 -124 LINE",
"20 -12 LINE"
);
},
{
closed = 1;
nodes = (
"-71 -62 LINE",
"-23 -62 LINE",
"-8 10 LINE",
"-56 10 LINE"
);
}
);
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 4}";
type = Stem;
},
{
place = "{-55.5, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-59 -23 LINE",
"-60 -28 LINE",
"-55 -28 LINE",
"-56 -32 LINE",
"-65 -32 LINE",
"-67 -41 LINE",
"-46 -41 LINE",
"-42 -23 LINE"
);
},
{
closed = 1;
nodes = (
"-60 -28 LINE",
"-48 -28 LINE",
"-40 11 LINE",
"-52 11 LINE"
);
}
);
width = 33;
}
);
unicode = 00B8;
},
{
color = 4;
glyphname = circumflex;
lastChange = "2020-10-01 09:08:58 +0000";
layers = (
{
guideLines = (
{
angle = 270;
position = "{249, 612}";
},
{
angle = 270;
position = "{342, 612}";
}
);
hints = (
{
horizontal = 1;
place = "{696, 34}";
type = Stem;
},
{
horizontal = 1;
place = "{730, 8}";
type = Stem;
},
{
place = "{72, 101}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"113 612 LINE",
"136 696 LINE",
"137 696 LINE",
"124 612 LINE",
"165 612 LINE",
"173 730 LINE",
"114 730 LINE",
"72 612 LINE"
);
}
);
width = 105;
},
{
hints = (
{
horizontal = 1;
place = "{690, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"78 612 LINE",
"102 665 LINE",
"102 665 LINE",
"104 612 LINE",
"110 612 LINE",
"111 690 LINE",
"104 690 LINE",
"72 612 LINE"
);
}
);
width = 50;
}
);
unicode = 02C6;
},
{
color = 4;
glyphname = dieresis;
lastChange = "2020-09-26 15:29:57 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"72 612 LINE",
"112 612 LINE",
"138 730 LINE",
"98 730 LINE"
);
},
{
closed = 1;
nodes = (
"124 612 LINE",
"164 612 LINE",
"190 730 LINE",
"150 730 LINE"
);
}
);
width = 104;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"70 612 LINE",
"82 612 LINE",
"98 690 LINE",
"86 690 LINE"
);
},
{
closed = 1;
nodes = (
"94 612 LINE",
"106 612 LINE",
"122 690 LINE",
"110 690 LINE"
);
}
);
width = 42;
}
);
unicode = 00A8;
},
{
color = 4;
glyphname = dotaccent;
lastChange = "2020-09-26 15:30:07 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"72 612 LINE",
"149 612 LINE",
"175 730 LINE",
"98 730 LINE"
);
}
);
width = 89;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
},
{
place = "{86, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"83 660 LINE",
"95 660 LINE",
"101 690 LINE",
"89 690 LINE"
);
}
);
width = 24;
}
);
unicode = 02D9;
},
{
color = 4;
glyphname = grave;
lastChange = "2020-09-26 15:30:10 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"225 612 LINE",
"177 730 LINE",
"112 730 LINE",
"191 612 LINE"
);
}
);
width = 165;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"110 612 LINE",
"103 690 LINE",
"90 690 LINE",
"105 612 LINE"
);
}
);
width = 52;
}
);
unicode = 0060;
},
{
color = 4;
glyphname = hungarumlaut;
lastChange = "2020-09-26 15:30:21 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"72 612 LINE",
"132 612 LINE",
"164 741 LINE",
"104 741 LINE"
);
},
{
closed = 1;
nodes = (
"144 612 LINE",
"205 612 LINE",
"238 741 LINE",
"176 741 LINE"
);
}
);
width = 153;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"83 612 LINE",
"95 612 LINE",
"131 690 LINE",
"119 690 LINE"
);
},
{
closed = 1;
nodes = (
"107 612 LINE",
"118 612 LINE",
"155 690 LINE",
"143 690 LINE"
);
}
);
width = 78;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
color = 4;
glyphname = macron;
lastChange = "2020-09-26 15:30:27 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"90 696 LINE",
"221 696 LINE",
"231 741 LINE",
"100 741 LINE"
);
}
);
width = 144;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"86 678 LINE",
"122 678 LINE",
"125 690 LINE",
"89 690 LINE"
);
}
);
width = 48;
}
);
unicode = 00AF;
},
{
color = 4;
glyphname = ogonek;
lastChange = "2020-09-26 15:30:30 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-86 -136 LINE",
"-6 -136 LINE",
"6 -80 LINE",
"-35 -80 LINE",
"-33 -68 LINE",
"-9 -68 LINE",
"3 -12 LINE",
"-60 -12 LINE"
);
},
{
closed = 1;
nodes = (
"-40 10 LINE",
"-57 -68 LINE",
"-9 -68 LINE",
"8 10 LINE"
);
}
);
width = 93;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
},
{
place = "{-60, 8}";
type = Stem;
},
{
place = "{-34.5, 12}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"-68 -47 LINE",
"-15 -47 LINE",
"-12 -35 LINE",
"-53 -35 LINE",
"-51 -23 LINE",
"-27 -23 LINE",
"-24 -11 LINE",
"-60 -11 LINE"
);
},
{
closed = 1;
nodes = (
"-32 11 LINE",
"-39 -23 LINE",
"-27 -23 LINE",
"-20 11 LINE"
);
}
);
width = 65;
}
);
unicode = 02DB;
},
{
color = 4;
glyphname = ring;
lastChange = "2020-09-26 15:30:33 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"93 612 LINE",
"138 612 LINE",
"162 632 LINE",
"178 710 LINE",
"163 730 LINE",
"118 730 LINE",
"93 710 LINE",
"77 632 LINE"
);
},
{
closed = 1;
nodes = (
"127 697 LINE",
"139 697 LINE",
"128 645 LINE",
"116 645 LINE"
);
}
);
width = 97;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"80 612 LINE",
"100 612 LINE",
"110 620 LINE",
"123 682 LINE",
"117 690 LINE",
"97 690 LINE",
"87 682 LINE",
"74 620 LINE"
);
},
{
closed = 1;
nodes = (
"98 678 LINE",
"110 678 LINE",
"99 624 LINE",
"87 624 LINE"
);
}
);
width = 48;
}
);
unicode = 02DA;
},
{
color = 4;
glyphname = tilde;
lastChange = "2020-09-26 15:30:37 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"122 612 LINE",
"135 671 LINE",
"147 671 LINE",
"134 612 LINE",
"164 612 LINE",
"190 730 LINE",
"140 730 LINE",
"126 671 LINE",
"114 671 LINE",
"128 730 LINE",
"98 730 LINE",
"72 612 LINE"
);
}
);
width = 104;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"94 612 LINE",
"107 682 LINE",
"110 682 LINE",
"97 612 LINE",
"105 612 LINE",
"120 690 LINE",
"101 690 LINE",
"87 620 LINE",
"84 620 LINE",
"98 690 LINE",
"90 690 LINE",
"74 612 LINE"
);
}
);
width = 44;
}
);
unicode = 02DC;
}
);
instances = (
{
interpolationWeight = 50;
interpolationWidth = 1;
instanceInterpolations = {
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 1;
};
name = "Thin Condensed Slanted";
weightClass = Thin;
},
{
interpolationWeight = 83;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.05077;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.94923;
};
name = "Extra Light Condensed Slanted";
weightClass = ExtraLight;
},
{
interpolationWeight = 143;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.14308;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.85692;
};
name = "Ultra Light Condensed Slanted";
weightClass = UltraLight;
},
{
interpolationWeight = 230;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.27692;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.72308;
};
name = "Light Condensed Slanted";
weightClass = Light;
},
{
interpolationWeight = 337;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.44154;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.55846;
};
name = "Regular Condensed Slanted";
},
{
interpolationWeight = 461;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.63231;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.36769;
};
name = "Medium Condensed Slanted";
weightClass = Medium;
},
{
interpolationWeight = 589;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.82923;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.17077;
};
name = "Semi Bold Condensed Slanted";
weightClass = SemiBold;
},
{
interpolationWeight = 700;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 1;
};
name = "Bold Condensed Slanted";
}
);
kerning = {
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = {
comma = {
four = -25;
seven = -13;
};
percent = {
perthousand = -48;
};
seven = {
period = -11;
semicolon = -4;
};
};
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = {
comma = {
four = -87;
quotesinglbase = 0;
seven = -53;
};
quotesinglbase = {
comma = 0;
};
quotesingle = {
a = -10;
d = -50;
};
s = {
s = 0;
};
};
};
manufacturer = "Mateo Broillet / e-t-c typefoundry";
manufacturerURL = www.mateobroillet.ch;
unitsPerEm = 850;
versionMajor = 1;
versionMinor = 0;
}
