{
.appVersion = "1230";
copyright = "This Font Software is licensed under the SIL Open Font License, Version 1.1.";
customParameters = (
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
},
{
name = "Virtual Master";
value = (
{
Axis = Weight;
Location = 0;
},
{
Axis = Width;
Location = 0;
}
);
},
{
name = "Enforce Compatibility Check";
value = 1;
}
);
date = "2020-09-26 17:08:28 +0000";
designer = "Mateo Broillet / e-t-c typefoundry";
designerURL = www.mateobroillet.ch;
familyName = Seymaz;
featurePrefixes = (
{
code = "languagesystem DFLT dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature salt;\012feature ss01;\012feature calt;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb circumflexcomb dieresiscomb dotaccentcomb gravecomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [cedillacomb];\012	sub [i]' @CombiningTopAccents by [idotless];\012	sub [i]' @CombiningNonTopAccents @CombiningTopAccents by [idotless];\012} ccmp_Other_1;\012";
name = ccmp;
},
{
code = "sub f t by f_t;\012sub i t by i_t;\012\012";
name = dlig;
},
{
code = "sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f i by f_i;\012sub f l by f_l;\012sub t i by t_i;";
name = liga;
},
{
automatic = 1;
code = "sub E by E.ss01;\012sub Eacute by Eacute.ss01;\012sub Ecircumflex by Ecircumflex.ss01;\012sub Edieresis by Edieresis.ss01;\012sub Egrave by Egrave.ss01;\012sub F by F.ss01;\012sub J by J.ss01;\012sub L by L.ss01;\012sub T by T.ss01;\012sub f by f.ss01;\012sub y by y.ss01;\012sub one by one.ss01;\012";
name = salt;
},
{
automatic = 1;
code = "sub E by E.ss01;\012sub Eacute by Eacute.ss01;\012sub Ecircumflex by Ecircumflex.ss01;\012sub Edieresis by Edieresis.ss01;\012sub Egrave by Egrave.ss01;\012sub F by F.ss01;\012sub J by J.ss01;\012sub L by L.ss01;\012sub T by T.ss01;\012sub f by f.ss01;\012sub y by y.ss01;\012sub one by one.ss01;\012";
name = ss01;
},
{
code = "sub f' a by f.ss01;\012sub f' aacute by f.ss01;\012sub f' acircumflex by f.ss01;\012sub f' adieresis by f.ss01;\012sub f' agrave by f.ss01;\012sub f' aring by f.ss01;\012sub f' atilde by f.ss01;\012sub f' ae by f.ss01;\012sub f' c by f.ss01;\012sub f' ccedilla by f.ss01;\012sub f' e by f.ss01;\012sub f' eacute by f.ss01;\012sub f' ecircumflex by f.ss01;\012sub f' edieresis by f.ss01;\012sub f' egrave by f.ss01;\012sub f' g by f.ss01;\012sub f' m by f.ss01;\012sub f' n by f.ss01;\012sub f' ntilde by f.ss01;\012sub f' o by f.ss01;\012sub f' oacute by f.ss01;\012sub f' ocircumflex by f.ss01;\012sub f' odieresis by f.ss01;\012sub f' ograve by f.ss01;\012sub f' oslash by f.ss01;\012sub f' otilde by f.ss01;\012sub f' oe by f.ss01;\012sub f' p by f.ss01;\012sub f' q by f.ss01;\012sub f' r by f.ss01;\012sub f' s by f.ss01;\012sub f' u by f.ss01;\012sub f' uacute by f.ss01;\012sub f' ucircumflex by f.ss01;\012sub f' udieresis by f.ss01;\012sub f' ugrave by f.ss01;\012sub f' v by f.ss01;\012sub f' w by f.ss01;\012sub f' wacute by f.ss01;\012sub f' wcircumflex by f.ss01;\012sub f' wdieresis by f.ss01;\012sub f' wgrave by f.ss01;\012sub f' x by f.ss01;\012sub f' y by f.ss01;\012sub f' yacute by f.ss01;\012sub f' ycircumflex by f.ss01;\012sub f' ydieresis by f.ss01;\012sub f' ygrave by f.ss01;\012sub f' y.ss01 by f.ss01;\012sub f' z by f.ss01;";
name = calt;
}
);
fontMaster = (
{
alignmentZones = (
"{690, 16}",
"{690, 13}",
"{600, 13}",
"{0, -13}",
"{-90, -13}"
);
ascender = 690;
capHeight = 690;
descender = -90;
guideLines = (
{
position = "{-189, 370}";
},
{
position = "{178, 331}";
},
{
position = "{98, 300}";
},
{
position = "{-17, 11}";
},
{
position = "{144, 702}";
},
{
position = "{132, 612}";
},
{
position = "{34, 423}";
},
{
position = "{126, 300}";
},
{
position = "{-91, 589}";
},
{
position = "{30, 679}";
},
{
angle = 180;
position = "{39, 738}";
}
);
horizontalStems = (
11,
78
);
id = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
userData = {
GSCornerRadius = 7;
};
verticalStems = (
12
);
weight = Light;
weightValue = 50;
width = Condensed;
widthValue = 1;
xHeight = 600;
},
{
alignmentZones = (
"{730, 16}",
"{690, 12}",
"{600, 13}",
"{0, -13}",
"{-130, -13}"
);
ascender = 730;
capHeight = 690;
descender = -130;
guideLines = (
{
angle = 90;
position = "{-189, 370}";
},
{
position = "{178, 331}";
},
{
angle = 262.9734;
position = "{98, 300}";
},
{
position = "{6, -75}";
},
{
position = "{108, 742}";
},
{
angle = 180;
position = "{132, 612}";
},
{
position = "{178, 359}";
},
{
position = "{98, 575}";
},
{
angle = 90;
position = "{138, 600}";
},
{
angle = 90;
position = "{45, 600}";
}
);
horizontalStems = (
75,
118
);
id = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
GSCornerRadius = 43;
};
verticalStems = (
80
);
weight = Bold;
weightValue = 700;
width = Condensed;
widthValue = 1;
xHeight = 600;
}
);
glyphs = (
{
color = 4;
glyphname = A;
lastChange = "2020-09-25 16:13:11 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"178 685 LINE",
"138 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE",
"86 0 LINE",
"86 327 LINE",
"98 327 LINE",
"98 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 402 LINE",
"86 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 0 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 0 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE",
"18 0 LINE",
"18 359 LINE",
"30 359 LINE",
"30 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"18 370 LINE"
);
}
);
width = 48;
}
);
note = A;
unicode = 0041;
},
{
color = 4;
glyphname = Aacute;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 13, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C1;
},
{
color = 7;
glyphname = Abreve;
lastChange = "2020-10-04 16:20:58 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 0, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 18, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0102;
},
{
color = 4;
glyphname = Acircumflex;
lastChange = "2020-10-04 16:21:10 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 24, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C2;
},
{
color = 4;
glyphname = Adieresis;
lastChange = "2020-10-04 16:21:16 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C4;
},
{
color = 4;
glyphname = Agrave;
lastChange = "2020-10-04 16:21:19 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -11, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C0;
},
{
color = 7;
glyphname = Amacron;
lastChange = "2020-10-04 16:21:24 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, 24}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 20, 97}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0100;
},
{
color = 7;
glyphname = Aogonek;
lastChange = "2020-10-04 16:15:05 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = A;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0104;
},
{
color = 4;
glyphname = Aring;
lastChange = "2020-10-04 17:23:16 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 0, -43}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C5;
},
{
color = 4;
glyphname = Atilde;
lastChange = "2020-10-04 16:22:17 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 29, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = A;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C3;
},
{
color = 4;
glyphname = AE;
lastChange = "2020-09-12 11:53:36 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 327 LINE",
"98 327 LINE",
"98 0 LINE",
"270 0 LINE",
"270 314 LINE",
"190 314 LINE",
"190 76 LINE",
"178 76 LINE",
"178 326 LINE",
"270 326 LINE",
"270 401 LINE",
"178 401 LINE",
"178 656 LINE",
"190 656 LINE",
"190 413 LINE",
"270 413 LINE",
"270 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 402 LINE",
"86 402 LINE"
);
}
);
width = 276;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 359 LINE",
"30 359 LINE",
"30 0 LINE",
"66 0 LINE",
"66 345 LINE",
"54 345 LINE",
"54 11 LINE",
"42 11 LINE",
"42 357 LINE",
"66 357 LINE",
"66 368 LINE",
"42 368 LINE",
"42 679 LINE",
"54 679 LINE",
"54 380 LINE",
"66 380 LINE",
"66 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"18 370 LINE"
);
}
);
width = 72;
}
);
unicode = 00C6;
},
{
color = 4;
glyphname = B;
lastChange = "2020-09-25 16:12:13 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{2, 3}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 730 LINE",
"6 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 356 LINE",
"145 356 LINE",
"145 368 LINE",
"178 368 LINE",
"178 685 LINE",
"138 730 LINE"
);
},
{
closed = 1;
nodes = (
"86 75 LINE",
"86 325 LINE",
"98 325 LINE",
"98 75 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 400 LINE",
"86 400 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
4 11 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 8 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{2, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 0}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 690 LINE",
"6 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 356 LINE",
"37 356 LINE",
"37 368 LINE",
"42 368 LINE",
"42 682 LINE",
"34 690 LINE"
);
},
{
closed = 1;
nodes = (
"18 11 LINE",
"18 357 LINE",
"30 357 LINE",
"30 11 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 368 LINE",
"18 368 LINE"
);
}
);
width = 48;
}
);
note = B;
unicode = 0042;
},
{
color = 4;
glyphname = C;
lastChange = "2020-09-25 16:11:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 13}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 370 LINE",
"178 370 LINE",
"178 685 LINE",
"138 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 358 LINE",
"98 358 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"42 370 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 358 LINE",
"30 358 LINE"
);
}
);
width = 48;
}
);
note = C;
unicode = 0043;
},
{
color = 7;
glyphname = Cacute;
lastChange = "2020-10-04 16:22:24 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 9, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = C;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0106;
},
{
color = 7;
glyphname = Ccaron;
lastChange = "2020-10-04 16:22:28 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 010C;
},
{
color = 4;
glyphname = Ccedilla;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 46, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = C;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 29, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C7;
},
{
color = 4;
glyphname = D;
lastChange = "2020-09-25 16:13:18 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{1, 1}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"138 730 LINE",
"6 730 LINE",
"6 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 685 LINE"
);
},
{
closed = 1;
nodes = (
"98 655 LINE",
"98 75 LINE",
"86 75 LINE",
"86 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{1, 1}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 690 LINE",
"6 690 LINE",
"6 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 682 LINE"
);
},
{
closed = 1;
nodes = (
"30 679 LINE",
"30 11 LINE",
"18 11 LINE",
"18 679 LINE"
);
}
);
width = 48;
}
);
note = D;
unicode = 0044;
},
{
color = 4;
glyphname = Eth;
lastChange = "2020-10-04 16:45:24 +0000";
layers = (
{
components = (
{
name = D;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"-7 308 LINE",
"151 308 LINE",
"151 383 LINE",
"-7 383 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = D;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"0 340 LINE",
"34 340 LINE",
"34 351 LINE",
"0 351 LINE"
);
}
);
width = 48;
}
);
unicode = 00D0;
},
{
color = 7;
glyphname = Dcaron;
lastChange = "2020-10-04 17:22:21 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 7, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 010E;
},
{
color = 7;
glyphname = Dcroat;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = Eth;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0110;
},
{
color = 4;
glyphname = E;
lastChange = "2020-09-25 16:13:04 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 414 LINE",
"178 730 LINE",
"6 730 LINE",
"6 0 LINE",
"178 0 LINE",
"178 315 LINE",
"98 315 LINE",
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 414 LINE"
);
},
{
closed = 1;
nodes = (
"15 327 LINE",
"178 327 LINE",
"178 402 LINE",
"15 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 380 LINE",
"42 690 LINE",
"6 690 LINE",
"6 0 LINE",
"42 0 LINE",
"42 345 LINE",
"30 345 LINE",
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 380 LINE"
);
},
{
closed = 1;
nodes = (
"7 357 LINE",
"42 357 LINE",
"42 368 LINE",
"7 368 LINE"
);
}
);
width = 48;
}
);
note = E;
unicode = 0045;
},
{
color = 4;
glyphname = Eacute;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 13, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C9;
},
{
color = 7;
glyphname = Ecaron;
lastChange = "2020-10-04 16:24:04 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 011A;
},
{
color = 4;
glyphname = Ecircumflex;
lastChange = "2020-10-04 16:24:11 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 24, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00CA;
},
{
color = 4;
glyphname = Edieresis;
lastChange = "2020-10-04 16:24:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00CB;
},
{
color = 7;
glyphname = Edotaccent;
lastChange = "2020-10-04 16:24:29 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 12, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 48, 40}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0116;
},
{
color = 4;
glyphname = Egrave;
lastChange = "2020-10-04 16:24:43 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = E;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00C8;
},
{
color = 7;
glyphname = Emacron;
lastChange = "2020-10-04 16:26:07 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, 24}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 19, 97}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0112;
},
{
color = 7;
glyphname = Eogonek;
lastChange = "2020-10-04 16:27:55 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = E;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0118;
},
{
color = 4;
glyphname = F;
lastChange = "2020-09-25 16:12:29 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 414 LINE",
"178 730 LINE",
"138 730 LINE",
"46 730 LINE",
"6 730 LINE",
"6 0 LINE",
"86 0 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 414 LINE"
);
},
{
closed = 1;
nodes = (
"15 327 LINE",
"178 327 LINE",
"178 402 LINE",
"15 402 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 9 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 12 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 389 LINE",
"42 690 LINE",
"19 690 LINE",
"12 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE",
"18 75 LINE",
"18 679 LINE",
"30 679 LINE",
"30 389 LINE"
);
},
{
closed = 1;
nodes = (
"7 366 LINE",
"42 366 LINE",
"42 377 LINE",
"7 377 LINE"
);
}
);
width = 48;
}
);
note = F;
unicode = 0046;
},
{
color = 4;
glyphname = G;
lastChange = "2020-09-25 16:13:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 0 LINE",
"178 45 LINE",
"178 400 LINE",
"98 400 LINE",
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 412 LINE",
"178 412 LINE",
"178 685 LINE",
"138 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 45 LINE",
"45 0 LINE"
);
},
{
closed = 1;
nodes = (
"175 325 LINE",
"175 400 LINE",
"92 400 LINE",
"92 325 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
14 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 9 11 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 0 LINE",
"42 8 LINE",
"42 358 LINE",
"30 358 LINE",
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"42 370 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 8 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"39 346 LINE",
"39 358 LINE",
"23 358 LINE",
"23 346 LINE"
);
}
);
width = 48;
}
);
note = G;
unicode = 0047;
},
{
color = 7;
glyphname = Gcommaaccent;
lastChange = "2020-10-04 16:49:48 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0122;
},
{
color = 4;
glyphname = H;
lastChange = "2020-09-25 16:13:02 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 730 LINE",
"98 402 LINE",
"86 402 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE",
"86 0 LINE",
"86 327 LINE",
"98 327 LINE",
"98 0 LINE",
"178 0 LINE",
"178 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 690 LINE",
"30 368 LINE",
"18 368 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE",
"18 357 LINE",
"30 357 LINE",
"30 0 LINE",
"42 0 LINE",
"42 690 LINE"
);
}
);
width = 48;
}
);
note = H;
unicode = 0048;
},
{
color = 4;
glyphname = I;
lastChange = "2020-09-25 16:14:00 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 730 LINE",
"6 730 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 24;
}
);
note = I;
unicode = 0049;
},
{
color = 4;
glyphname = Iacute;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -52, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 1, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CD;
},
{
color = 4;
glyphname = Icircumflex;
lastChange = "2020-10-04 16:35:50 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -21, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -12, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CE;
},
{
color = 4;
glyphname = Idieresis;
lastChange = "2020-10-04 16:35:53 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -43, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -9, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CF;
},
{
color = 4;
glyphname = Igrave;
lastChange = "2020-10-04 16:35:56 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -39, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = I;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -23, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00CC;
},
{
color = 7;
glyphname = Imacron;
lastChange = "2020-10-04 16:36:29 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, -12, 24}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, -26, 97}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 012A;
},
{
color = 7;
glyphname = Iogonek;
lastChange = "2020-10-04 16:37:17 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = I;
},
{
name = ogonek;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 012E;
},
{
color = 4;
glyphname = J;
lastChange = "2020-09-25 16:12:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 643 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 730 LINE",
"6 730 LINE",
"6 655 LINE",
"98 655 LINE",
"98 75 LINE",
"86 75 LINE",
"86 643 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
1 4 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 667 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 690 LINE",
"6 690 LINE",
"6 679 LINE",
"30 679 LINE",
"30 11 LINE",
"18 11 LINE",
"18 667 LINE"
);
}
);
width = 48;
}
);
note = J;
unicode = 004A;
},
{
color = 4;
glyphname = K;
lastChange = "2020-09-25 16:12:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 15}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 325 LINE",
"98 325 LINE",
"98 0 LINE",
"178 0 LINE",
"178 358 LINE",
"145 358 LINE",
"145 370 LINE",
"178 370 LINE",
"178 730 LINE",
"98 730 LINE",
"98 400 LINE",
"86 400 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
origin = "{0, 15}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 357 LINE",
"30 357 LINE",
"30 0 LINE",
"42 0 LINE",
"42 357 LINE",
"37 357 LINE",
"37 368 LINE",
"42 368 LINE",
"42 690 LINE",
"30 690 LINE",
"30 368 LINE",
"18 368 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = K;
unicode = 004B;
},
{
color = 7;
glyphname = Kcommaaccent;
lastChange = "2020-10-04 17:21:54 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0136;
},
{
color = 4;
glyphname = L;
lastChange = "2020-10-01 09:03:43 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 730 LINE",
"6 0 LINE",
"92 0 LINE",
"92 75 LINE",
"86 75 LINE",
"86 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = down;
type = TopGhost;
},
{
origin = "{0, 1}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 690 LINE",
"6 0 LINE",
"24 0 LINE",
"24 11 LINE",
"18 11 LINE",
"18 690 LINE"
);
}
);
width = 24;
}
);
note = T;
unicode = 004C;
},
{
color = 7;
glyphname = Lacute;
lastChange = "2020-10-04 16:41:41 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 1, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -52, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 0139;
},
{
color = 7;
glyphname = Lcaron;
lastChange = "2020-10-04 16:42:25 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = caron;
transform = "{1, 0, 0, 1, -12, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = L;
},
{
name = caron;
transform = "{1, 0, 0, 1, -27, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 013D;
},
{
color = 7;
glyphname = Lcommaaccent;
lastChange = "2020-10-04 17:21:58 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 16, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 013B;
},
{
color = 7;
glyphname = Lslash;
lastChange = "2020-10-04 16:46:46 +0000";
layers = (
{
components = (
{
name = L;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"0 362 LINE",
"24 377 LINE",
"24 389 LINE",
"0 374 LINE"
);
}
);
width = 24;
},
{
components = (
{
name = L;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"0 308 LINE",
"92 370 LINE",
"92 445 LINE",
"0 383 LINE"
);
}
);
width = 92;
}
);
unicode = 0141;
},
{
color = 4;
glyphname = M;
lastChange = "2020-09-25 16:12:41 +0000";
layers = (
{
guideLines = (
{
angle = 90;
position = "{86, 615}";
}
);
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 16}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 655 LINE",
"98 655 LINE",
"98 0 LINE",
"178 0 LINE",
"178 655 LINE",
"190 655 LINE",
"190 0 LINE",
"270 0 LINE",
"270 730 LINE",
"190 730 LINE",
"190 705 LINE",
"178 705 LINE",
"178 730 LINE",
"98 730 LINE",
"98 705 LINE",
"86 705 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
13 10 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 679 LINE",
"30 679 LINE",
"30 0 LINE",
"42 0 LINE",
"42 679 LINE",
"54 679 LINE",
"54 0 LINE",
"66 0 LINE",
"66 690 LINE",
"54 690 LINE",
"54 690 LINE",
"42 690 LINE",
"42 690 LINE",
"30 690 LINE",
"30 690 LINE",
"18 690 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
}
);
width = 72;
}
);
note = M;
unicode = 004D;
},
{
color = 4;
glyphname = N;
lastChange = "2020-10-04 16:51:45 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 0 LINE",
"178 0 LINE",
"178 730 LINE",
"139 730 LINE",
"98 730 LINE",
"98 705 LINE",
"86 705 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 0 LINE",
"42 0 LINE",
"42 690 LINE",
"34 690 LINE",
"30 690 LINE",
"30 690 LINE",
"18 690 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 48;
}
);
note = N;
unicode = 004E;
},
{
color = 7;
glyphname = Nacute;
lastChange = "2020-10-04 16:52:10 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0143;
},
{
color = 7;
glyphname = Ncaron;
lastChange = "2020-10-04 16:48:40 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 47;
},
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0147;
},
{
color = 7;
glyphname = Ncommaaccent;
lastChange = "2020-10-04 16:52:10 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0145;
},
{
color = 7;
glyphname = Eng;
lastChange = "2020-10-04 18:24:41 +0000";
layers = (
{
components = (
{
name = N;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 -40 LINE",
"42 11 LINE",
"30 11 LINE",
"30 -24 LINE",
"35 -24 LINE",
"35 -36 LINE",
"26 -36 LINE",
"26 -48 LINE",
"34 -48 LINE"
);
}
);
width = 48;
},
{
components = (
{
name = N;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 -79 LINE",
"178 10 LINE",
"98 10 LINE",
"98 -62 LINE",
"139 -62 LINE",
"139 -74 LINE",
"98 -74 LINE",
"98 -124 LINE",
"138 -124 LINE"
);
}
);
width = 184;
}
);
unicode = 014A;
},
{
color = 4;
glyphname = Ntilde;
lastChange = "2020-10-04 16:54:47 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 26, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = N;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 1, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D1;
},
{
color = 4;
glyphname = O;
lastChange = "2020-09-25 16:13:20 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 685 LINE",
"139 730 LINE",
"46 730 LINE",
"6 685 LINE"
);
},
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE"
);
},
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE"
);
}
);
width = 48;
}
);
note = O;
unicode = 004F;
},
{
color = 4;
glyphname = Oacute;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 10, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D3;
},
{
color = 4;
glyphname = Ocircumflex;
lastChange = "2020-10-04 16:55:01 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 24, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D4;
},
{
color = 4;
glyphname = Odieresis;
lastChange = "2020-10-04 16:55:04 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D6;
},
{
color = 4;
glyphname = Ograve;
lastChange = "2020-10-04 16:55:06 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D2;
},
{
color = 7;
glyphname = Ohungarumlaut;
lastChange = "2020-10-04 17:01:39 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, -1, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 15, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0150;
},
{
color = 7;
glyphname = Omacron;
lastChange = "2020-10-04 17:02:46 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, 24}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 20, 97}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 014C;
},
{
color = 4;
glyphname = Oslash;
lastChange = "2020-10-02 11:58:44 +0000";
layers = (
{
components = (
{
name = O;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -40 LINE",
"86 -40 LINE",
"86 75 LINE",
"6 75 LINE"
);
},
{
closed = 1;
nodes = (
"98 546 LINE",
"178 546 LINE",
"178 770 LINE",
"98 770 LINE"
);
},
{
closed = 1;
nodes = (
"52 308 LINE",
"132 308 LINE",
"132 383 LINE",
"52 383 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = O;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -24 LINE",
"18 -24 LINE",
"18 11 LINE",
"6 11 LINE"
);
},
{
closed = 1;
nodes = (
"30 679 LINE",
"42 679 LINE",
"42 714 LINE",
"30 714 LINE"
);
},
{
closed = 1;
nodes = (
"7 339 LINE",
"41 339 LINE",
"41 351 LINE",
"7 351 LINE"
);
}
);
width = 48;
}
);
unicode = 00D8;
},
{
color = 4;
glyphname = Otilde;
lastChange = "2020-10-04 17:02:53 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 29, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = O;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 2, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D5;
},
{
color = 4;
glyphname = OE;
lastChange = "2020-09-12 11:56:47 +0000";
layers = (
{
components = (
{
name = O;
transform = "{-1, 0, 0, 1, 184, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"270 0 LINE",
"270 315 LINE",
"190 315 LINE",
"190 75 LINE",
"178 75 LINE",
"178 655 LINE",
"190 655 LINE",
"190 414 LINE",
"270 414 LINE",
"270 730 LINE",
"98 730 LINE",
"98 0 LINE"
);
},
{
closed = 1;
nodes = (
"270 327 LINE",
"270 402 LINE",
"107 402 LINE",
"107 327 LINE"
);
}
);
width = 276;
},
{
components = (
{
name = O;
transform = "{-1, 0, 0, 1, 48, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"66 0 LINE",
"66 345 LINE",
"54 345 LINE",
"54 11 LINE",
"42 11 LINE",
"42 675 LINE",
"54 675 LINE",
"54 380 LINE",
"66 380 LINE",
"66 690 LINE",
"30 690 LINE",
"30 0 LINE"
);
},
{
closed = 1;
nodes = (
"66 357 LINE",
"66 368 LINE",
"31 368 LINE",
"31 357 LINE"
);
}
);
width = 72;
}
);
unicode = 0152;
},
{
color = 4;
glyphname = P;
lastChange = "2020-09-25 16:12:43 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"138 730 LINE",
"6 730 LINE",
"6 -1 LINE",
"86 -1 LINE",
"86 219 LINE",
"139 219 LINE",
"178 264 LINE",
"178 685 LINE"
);
},
{
closed = 1;
nodes = (
"98 294 LINE",
"86 294 LINE",
"86 655 LINE",
"98 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 689 LINE",
"6 689 LINE",
"6 -1 LINE",
"18 -1 LINE",
"18 219 LINE",
"34 219 LINE",
"42 227 LINE",
"42 681 LINE"
);
},
{
closed = 1;
nodes = (
"30 230 LINE",
"18 230 LINE",
"18 678 LINE",
"30 678 LINE"
);
}
);
width = 48;
}
);
note = P;
unicode = 0050;
},
{
color = 4;
glyphname = Thorn;
lastChange = "2020-09-12 11:56:56 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 90 LINE",
"178 600 LINE",
"139 645 LINE",
"75 645 LINE",
"75 730 LINE",
"6 730 LINE",
"6 0 LINE",
"85 0 LINE",
"85 64 LINE",
"85 45 LINE",
"139 45 LINE"
);
},
{
closed = 1;
nodes = (
"98 120 LINE",
"86 120 LINE",
"86 570 LINE",
"98 570 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 119 LINE",
"42 639 LINE",
"34 647 LINE",
"18 647 LINE",
"18 690 LINE",
"6 690 LINE",
"6 -23 LINE",
"18 -23 LINE",
"18 130 LINE",
"18 111 LINE",
"34 111 LINE"
);
},
{
closed = 1;
nodes = (
"30 122 LINE",
"18 122 LINE",
"18 636 LINE",
"30 636 LINE"
);
}
);
width = 48;
}
);
unicode = 00DE;
},
{
color = 4;
glyphname = Q;
lastChange = "2020-10-05 08:42:29 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 6}";
target = "{2, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{2, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"57 -23 LINE",
"57 -87 LINE",
"127 -87 LINE",
"127 -23 LINE",
"98 51 LINE",
"86 51 LINE"
);
},
{
closed = 1;
nodes = (
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 685 LINE",
"139 730 LINE",
"46 730 LINE",
"6 685 LINE"
);
},
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 6}";
target = "{2, 2}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 -5 LINE",
"18 -23 LINE",
"30 -23 LINE",
"30 -5 LINE",
"26 8 LINE",
"22 8 LINE"
);
},
{
closed = 1;
nodes = (
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE"
);
},
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE"
);
}
);
width = 48;
}
);
note = Q;
unicode = 0051;
},
{
color = 4;
glyphname = R;
lastChange = "2020-10-04 17:04:40 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 325 LINE",
"98 325 LINE",
"98 0 LINE",
"178 0 LINE",
"178 356 LINE",
"145 356 LINE",
"145 368 LINE",
"178 368 LINE",
"178 685 LINE",
"138 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 400 LINE",
"86 400 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 11 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 357 LINE",
"30 357 LINE",
"30 0 LINE",
"42 0 LINE",
"42 357 LINE",
"36 357 LINE",
"36 368 LINE",
"42 368 LINE",
"42 682 LINE",
"34 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 368 LINE",
"18 368 LINE"
);
}
);
width = 48;
}
);
note = R;
unicode = 0052;
},
{
color = 7;
glyphname = Racute;
lastChange = "2020-10-04 17:04:40 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 9, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = R;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0154;
},
{
color = 7;
glyphname = Rcaron;
lastChange = "2020-10-04 17:05:16 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 17, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0158;
},
{
color = 7;
glyphname = Rcommaaccent;
lastChange = "2020-10-04 17:09:08 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0156;
},
{
color = 4;
glyphname = S;
lastChange = "2020-10-05 08:51:16 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 20}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 387 LINE",
"86 387 LINE",
"86 655 LINE",
"98 655 LINE",
"98 399 LINE",
"178 399 LINE",
"178 679 LINE",
"137 730 LINE",
"46 730 LINE",
"6 679 LINE",
"6 349 LINE",
"46 312 LINE",
"99 312 LINE",
"99 75 LINE",
"87 75 LINE",
"87 300 LINE",
"7 300 LINE",
"7 45 LINE",
"47 0 LINE",
"137 0 LINE",
"178 45 LINE",
"178 349 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 17}";
target = "{0, 14}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 20}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 358 LINE",
"18 358 LINE",
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"42 370 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 355 LINE",
"14 347 LINE",
"30 347 LINE",
"30 11 LINE",
"18 11 LINE",
"18 334 LINE",
"6 334 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 350 LINE"
);
}
);
width = 48;
}
);
note = S;
unicode = 0053;
},
{
color = 7;
glyphname = Sacute;
lastChange = "2020-10-04 17:09:57 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 11, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = S;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 015A;
},
{
color = 7;
glyphname = Scaron;
lastChange = "2020-10-04 17:09:45 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0160;
},
{
color = 7;
glyphname = Scedilla;
lastChange = "2020-10-04 17:10:21 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 52, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 015E;
},
{
glyphname = Germandbls;
lastChange = "2020-10-04 15:59:09 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"21 679 LINE",
"30 679 LINE",
"30 370 LINE",
"13 370 LINE",
"13 358 LINE",
"30 358 LINE",
"30 11 LINE",
"13 11 LINE",
"13 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 358 LINE",
"36 358 LINE",
"36 370 LINE",
"42 370 LINE",
"42 381 LINE",
"42 682 LINE",
"34 690 LINE",
"21 690 LINE"
);
},
{
closed = 1;
nodes = (
"21 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE",
"17 0 LINE",
"17 11 LINE",
"18 11 LINE",
"18 679 LINE",
"21 679 LINE"
);
}
);
width = 48;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"89 655 LINE",
"98 655 LINE",
"98 402 LINE",
"64 402 LINE",
"64 327 LINE",
"98 327 LINE",
"98 75 LINE",
"81 75 LINE",
"81 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 358 LINE",
"145 358 LINE",
"145 370 LINE",
"178 370 LINE",
"178 402 LINE",
"178 685 LINE",
"138 730 LINE",
"89 730 LINE"
);
},
{
closed = 1;
nodes = (
"89 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE",
"85 0 LINE",
"85 75 LINE",
"86 75 LINE",
"86 655 LINE",
"89 655 LINE"
);
}
);
width = 184;
}
);
unicode = 1E9E;
},
{
color = 4;
glyphname = T;
lastChange = "2020-09-25 16:13:00 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"66 359 LINE",
"66 655 LINE",
"78 655 LINE",
"78 0 LINE",
"158 0 LINE",
"158 655 LINE",
"170 655 LINE",
"170 359 LINE",
"230 359 LINE",
"230 730 LINE",
"6 730 LINE",
"6 359 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 236;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 370 LINE",
"18 679 LINE",
"30 679 LINE",
"30 0 LINE",
"42 0 LINE",
"42 679 LINE",
"54 679 LINE",
"54 370 LINE",
"66 370 LINE",
"66 690 LINE",
"6 690 LINE",
"6 370 LINE"
);
}
);
width = 72;
}
);
note = T;
unicode = 0054;
},
{
color = 7;
glyphname = Tbar;
lastChange = "2020-10-04 17:22:31 +0000";
layers = (
{
components = (
{
name = T;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 346 LINE",
"54 346 LINE",
"54 358 LINE",
"18 358 LINE"
);
}
);
width = 72;
},
{
components = (
{
name = T;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"38 272 LINE",
"198 272 LINE",
"198 347 LINE",
"38 347 LINE"
);
}
);
width = 236;
}
);
unicode = 0166;
},
{
color = 7;
glyphname = Tcaron;
lastChange = "2020-10-04 17:14:56 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 12, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
},
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 45, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 236;
}
);
unicode = 0164;
},
{
color = 7;
glyphname = Tcedilla;
lastChange = "2020-10-04 17:15:20 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 41, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
},
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 236;
}
);
unicode = 0162;
},
{
color = 4;
glyphname = U;
lastChange = "2020-09-25 16:12:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = down;
type = TopGhost;
},
{
origin = "{0, 8}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 0 LINE",
"178 45 LINE",
"178 730 LINE",
"98 730 LINE",
"98 75 LINE",
"86 75 LINE",
"86 730 LINE",
"6 730 LINE",
"6 45 LINE",
"45 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = down;
type = TopGhost;
},
{
origin = "{0, 8}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 0 LINE",
"42 8 LINE",
"42 690 LINE",
"30 690 LINE",
"30 11 LINE",
"18 11 LINE",
"18 690 LINE",
"6 690 LINE",
"6 8 LINE",
"14 0 LINE"
);
}
);
width = 48;
}
);
note = U;
unicode = 0055;
},
{
color = 4;
glyphname = Uacute;
lastChange = "2020-07-03 15:55:05 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = U;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 7, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DA;
},
{
color = 4;
glyphname = Ucircumflex;
lastChange = "2020-10-04 17:16:25 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 24, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = U;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DB;
},
{
color = 4;
glyphname = Udieresis;
lastChange = "2020-10-04 17:16:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 1, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = U;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DC;
},
{
color = 4;
glyphname = Ugrave;
lastChange = "2020-10-04 17:16:39 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = U;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -5, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00D9;
},
{
color = 7;
glyphname = Uhungarumlaut;
lastChange = "2020-10-04 17:17:22 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 2, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 20, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0170;
},
{
color = 7;
glyphname = Umacron;
lastChange = "2020-10-04 17:18:06 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, 24}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 19, 97}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 016A;
},
{
color = 7;
glyphname = Uogonek;
lastChange = "2020-10-04 17:17:41 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = U;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 70, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0172;
},
{
color = 7;
glyphname = Uring;
lastChange = "2020-10-04 17:18:26 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 0, -43}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 016E;
},
{
color = 4;
glyphname = V;
lastChange = "2020-09-25 16:12:51 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 730 LINE",
"98 730 LINE",
"98 75 LINE",
"86 75 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 690 LINE",
"30 690 LINE",
"30 11 LINE",
"18 11 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = V;
unicode = 0056;
},
{
color = 4;
glyphname = W;
lastChange = "2020-09-25 16:12:20 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 19}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"46 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"178 0 LINE",
"178 25 LINE",
"190 25 LINE",
"190 0 LINE",
"231 0 LINE",
"270 45 LINE",
"270 730 LINE",
"190 730 LINE",
"190 75 LINE",
"178 75 LINE",
"178 730 LINE",
"98 730 LINE",
"98 75 LINE",
"86 75 LINE",
"86 730 LINE",
"6 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 19}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 8 LINE",
"14 0 LINE",
"18 0 LINE",
"18 6 LINE",
"30 6 LINE",
"30 0 LINE",
"42 0 LINE",
"42 6 LINE",
"54 6 LINE",
"54 0 LINE",
"58 0 LINE",
"66 8 LINE",
"66 690 LINE",
"54 690 LINE",
"54 17 LINE",
"42 17 LINE",
"42 690 LINE",
"30 690 LINE",
"30 17 LINE",
"18 17 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 72;
}
);
note = W;
unicode = 0057;
},
{
color = 4;
glyphname = Wacute;
lastChange = "2020-10-04 17:19:43 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 50, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = W;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 25, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E82;
},
{
color = 4;
glyphname = Wcircumflex;
lastChange = "2020-10-04 17:19:49 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 70, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = W;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 12, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 0174;
},
{
color = 4;
glyphname = Wdieresis;
lastChange = "2020-10-04 17:19:53 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 49, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = W;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 15, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E84;
},
{
color = 4;
glyphname = Wgrave;
lastChange = "2020-10-04 17:19:59 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 38, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = W;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 1, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E80;
},
{
color = 4;
glyphname = X;
lastChange = "2020-09-25 16:12:34 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 327 LINE",
"98 327 LINE",
"98 0 LINE",
"178 0 LINE",
"178 358 LINE",
"145 358 LINE",
"145 370 LINE",
"178 370 LINE",
"178 730 LINE",
"98 730 LINE",
"98 402 LINE",
"86 402 LINE",
"86 730 LINE",
"6 730 LINE",
"6 370 LINE",
"39 370 LINE",
"39 358 LINE",
"6 358 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 359 LINE",
"30 359 LINE",
"30 0 LINE",
"42 0 LINE",
"42 359 LINE",
"36 359 LINE",
"36 370 LINE",
"42 370 LINE",
"42 690 LINE",
"30 690 LINE",
"30 370 LINE",
"18 370 LINE",
"18 690 LINE",
"6 690 LINE",
"6 370 LINE",
"12 370 LINE",
"12 359 LINE",
"6 359 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = X;
unicode = 0058;
},
{
color = 4;
glyphname = Y;
lastChange = "2020-09-25 16:13:16 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"99 162 LINE",
"87 162 LINE",
"87 730 LINE",
"7 730 LINE",
"7 132 LINE",
"47 87 LINE",
"99 87 LINE",
"99 75 LINE",
"6 75 LINE",
"6 0 LINE",
"140 0 LINE",
"179 45 LINE",
"179 730 LINE",
"99 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 9 4 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 4 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 3 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 9}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 11}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 34 LINE",
"18 34 LINE",
"18 690 LINE",
"6 690 LINE",
"6 31 LINE",
"14 23 LINE",
"30 23 LINE",
"30 11 LINE",
"6 11 LINE",
"6 0 LINE",
"32 0 LINE",
"42 8 LINE",
"42 690 LINE",
"30 690 LINE"
);
}
);
width = 48;
}
);
note = Y;
unicode = 0059;
},
{
color = 4;
glyphname = Yacute;
lastChange = "2020-10-04 17:20:17 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 6, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00DD;
},
{
color = 4;
glyphname = Ycircumflex;
lastChange = "2020-10-04 17:20:22 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 25, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 0, -50}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0176;
},
{
color = 4;
glyphname = Ydieresis;
lastChange = "2020-10-04 17:20:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 2, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0178;
},
{
color = 4;
glyphname = Ygrave;
lastChange = "2020-10-04 17:20:33 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, 1}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 185;
},
{
components = (
{
name = Y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -5, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 1EF2;
},
{
color = 4;
glyphname = Z;
lastChange = "2020-09-25 16:13:13 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"47 0 LINE",
"178 0 LINE",
"178 45 LINE",
"178 300 LINE",
"98 300 LINE",
"98 75 LINE",
"86 75 LINE",
"86 312 LINE",
"178 312 LINE",
"178 685 LINE",
"138 730 LINE",
"6 730 LINE",
"6 399 LINE",
"86 399 LINE",
"86 655 LINE",
"98 655 LINE",
"98 387 LINE",
"6 387 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
9 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 9 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 15}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 8 LINE",
"14 0 LINE",
"42 0 LINE",
"42 45 LINE",
"42 334 LINE",
"30 334 LINE",
"30 11 LINE",
"18 11 LINE",
"18 346 LINE",
"42 346 LINE",
"42 682 LINE",
"34 690 LINE",
"6 690 LINE",
"6 369 LINE",
"18 369 LINE",
"18 679 LINE",
"30 679 LINE",
"30 357 LINE",
"6 357 LINE"
);
}
);
width = 48;
}
);
note = Z;
unicode = 005A;
},
{
color = 7;
glyphname = Zacute;
lastChange = "2020-10-04 17:20:46 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = Z;
},
{
name = acutecomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0179;
},
{
color = 7;
glyphname = Zcaron;
lastChange = "2020-10-04 17:21:15 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, -1, 42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 128}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 017D;
},
{
color = 7;
glyphname = Zdotaccent;
lastChange = "2020-10-05 08:49:52 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 12, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 40, 40}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 017B;
},
{
color = 4;
glyphname = E.ss01;
lastChange = "2020-09-25 16:13:34 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{2, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{3, 3}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"92 0 LINE",
"92 75 LINE",
"86 75 LINE",
"86 0 LINE"
);
},
{
closed = 1;
nodes = (
"92 327 LINE",
"92 402 LINE",
"86 402 LINE",
"86 327 LINE"
);
},
{
closed = 1;
nodes = (
"92 655 LINE",
"92 730 LINE",
"86 730 LINE",
"86 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 2}";
target = "{2, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{3, 3}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"24 0 LINE",
"24 11 LINE",
"18 11 LINE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"24 340 LINE",
"24 351 LINE",
"18 351 LINE",
"18 340 LINE"
);
},
{
closed = 1;
nodes = (
"24 679 LINE",
"24 690 LINE",
"18 690 LINE",
"18 679 LINE"
);
}
);
width = 24;
}
);
note = E;
},
{
color = 4;
glyphname = Eacute.ss01;
lastChange = "2020-07-06 08:28:37 +0000";
layers = (
{
components = (
{
name = acutecomb;
transform = "{1, 0, 0, 1, -44, 0}";
},
{
name = E.ss01;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 97;
},
{
components = (
{
name = acutecomb;
transform = "{1, 0, 0, 1, 2, -48}";
},
{
name = E.ss01;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Ecircumflex.ss01;
lastChange = "2020-10-04 17:26:07 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -18, 1}";
},
{
name = E.ss01;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 99;
},
{
components = (
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -9, -50}";
},
{
name = E.ss01;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Edieresis.ss01;
lastChange = "2020-10-04 17:26:09 +0000";
layers = (
{
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -42, 1}";
},
{
name = E.ss01;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -6, -48}";
},
{
name = E.ss01;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = Egrave.ss01;
lastChange = "2020-10-04 17:26:12 +0000";
layers = (
{
components = (
{
name = gravecomb;
transform = "{1, 0, 0, 1, -39, 1}";
},
{
name = E.ss01;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 98;
},
{
components = (
{
name = gravecomb;
transform = "{1, 0, 0, 1, -19, -48}";
},
{
name = E.ss01;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
},
{
color = 4;
glyphname = F.ss01;
lastChange = "2020-09-12 11:57:53 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"92 327 LINE",
"92 402 LINE",
"86 402 LINE",
"86 327 LINE"
);
},
{
closed = 1;
nodes = (
"92 655 LINE",
"92 730 LINE",
"86 730 LINE",
"86 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 1 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"24 340 LINE",
"24 351 LINE",
"18 351 LINE",
"18 340 LINE"
);
},
{
closed = 1;
nodes = (
"24 679 LINE",
"24 690 LINE",
"18 690 LINE",
"18 679 LINE"
);
}
);
width = 24;
}
);
note = E;
},
{
color = 4;
glyphname = J.ss01;
lastChange = "2020-09-25 16:10:18 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 3}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"92 0 LINE",
"92 730 LINE",
"6 730 LINE",
"6 655 LINE",
"12 655 LINE",
"12 0 LINE"
);
},
{
closed = 1;
nodes = (
"12 0 LINE",
"12 75 LINE",
"6 75 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 98;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"24 690 LINE",
"6 690 LINE",
"6 679 LINE",
"12 679 LINE",
"12 0 LINE"
);
},
{
closed = 1;
nodes = (
"12 0 LINE",
"12 11 LINE",
"6 11 LINE",
"6 0 LINE"
);
}
);
width = 24;
}
);
note = T;
},
{
color = 4;
glyphname = L.ss01;
lastChange = "2020-10-01 09:03:47 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"178 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 87 LINE",
"178 87 LINE",
"178 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 0 LINE",
"42 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 23 LINE",
"42 23 LINE",
"42 690 LINE",
"16 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = L;
},
{
color = 4;
glyphname = T.ss01;
lastChange = "2020-09-25 16:13:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 655 LINE",
"92 655 LINE",
"92 730 LINE",
"0 730 LINE",
"0 655 LINE",
"6 655 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 6}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 7}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 679 LINE",
"24 679 LINE",
"24 690 LINE",
"0 690 LINE",
"0 679 LINE",
"6 679 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 24;
}
);
note = T;
},
{
color = 4;
glyphname = a;
lastChange = "2020-09-25 15:22:52 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 15}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 11}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"46 600 LINE",
"6 555 LINE",
"6 413 LINE",
"86 413 LINE",
"86 525 LINE",
"98 525 LINE",
"98 401 LINE",
"46 401 LINE",
"6 356 LINE",
"6 45 LINE",
"45 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"178 0 LINE",
"178 553 LINE",
"139 600 LINE"
);
},
{
closed = 1;
nodes = (
"86 75 LINE",
"86 326 LINE",
"98 326 LINE",
"98 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
17 14 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 15}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 600 LINE",
"6 592 LINE",
"6 412 LINE",
"18 412 LINE",
"18 589 LINE",
"30 589 LINE",
"30 400 LINE",
"14 400 LINE",
"6 392 LINE",
"6 8 LINE",
"13 0 LINE",
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"42 0 LINE",
"42 592 LINE",
"34 600 LINE"
);
},
{
closed = 1;
nodes = (
"18 11 LINE",
"18 389 LINE",
"30 389 LINE",
"30 11 LINE"
);
}
);
width = 48;
}
);
note = a;
unicode = 0061;
},
{
color = 4;
glyphname = aacute;
lastChange = "2020-09-17 08:23:43 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -11, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 10, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E1;
},
{
color = 7;
glyphname = abreve;
lastChange = "2020-10-04 17:26:57 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breve;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0103;
},
{
color = 4;
glyphname = acircumflex;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E2;
},
{
color = 4;
glyphname = adieresis;
lastChange = "2020-10-04 17:27:25 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E4;
},
{
color = 4;
glyphname = agrave;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, -8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E0;
},
{
color = 7;
glyphname = amacron;
lastChange = "2020-10-04 17:27:54 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, -66}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 20, -33}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0101;
},
{
color = 7;
glyphname = aogonek;
lastChange = "2020-10-04 18:46:48 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = a;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 109, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0105;
},
{
color = 4;
glyphname = aring;
lastChange = "2020-10-04 17:29:47 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, -185, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, -2, -42}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E5;
},
{
color = 4;
glyphname = atilde;
lastChange = "2020-10-04 17:29:52 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -151, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E3;
},
{
color = 4;
glyphname = ae;
lastChange = "2020-07-06 07:41:19 +0000";
layers = (
{
guideLines = (
{
position = "{178, 375}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"89 0 LINE",
"98 0 LINE",
"107 0 LINE",
"231 0 LINE",
"270 45 LINE",
"270 288 LINE",
"190 288 LINE",
"190 75 LINE",
"178 75 LINE",
"178 300 LINE",
"270 300 LINE",
"270 555 LINE",
"230 600 LINE",
"46 600 LINE",
"6 555 LINE",
"6 387 LINE",
"86 387 LINE",
"86 525 LINE",
"98 525 LINE",
"98 375 LINE",
"46 375 LINE",
"6 330 LINE",
"6 45 LINE",
"45 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 300 LINE",
"98 300 LINE",
"98 75 LINE",
"86 75 LINE"
);
},
{
closed = 1;
nodes = (
"178 525 LINE",
"190 525 LINE",
"190 375 LINE",
"178 375 LINE"
);
}
);
width = 276;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"24 0 LINE",
"30 0 LINE",
"58 0 LINE",
"66 8 LINE",
"66 288 LINE",
"54 288 LINE",
"54 11 LINE",
"42 11 LINE",
"42 300 LINE",
"66 300 LINE",
"66 592 LINE",
"58 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 412 LINE",
"18 412 LINE",
"18 589 LINE",
"30 589 LINE",
"30 401 LINE",
"14 401 LINE",
"6 393 LINE",
"6 8 LINE",
"13 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 390 LINE",
"30 390 LINE",
"30 11 LINE",
"18 11 LINE"
);
},
{
closed = 1;
nodes = (
"42 589 LINE",
"54 589 LINE",
"54 311 LINE",
"42 311 LINE"
);
}
);
width = 72;
}
);
unicode = 00E6;
},
{
color = 4;
glyphname = b;
lastChange = "2020-09-25 15:29:31 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 555 LINE",
"139 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
},
{
origin = "{0, 13}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 592 LINE",
"34 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 590 LINE",
"30 590 LINE",
"30 11 LINE",
"18 11 LINE"
);
}
);
width = 48;
}
);
note = b;
unicode = 0062;
},
{
color = 4;
glyphname = c;
lastChange = "2020-09-25 15:29:36 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 525 LINE",
"98 525 LINE",
"98 300 LINE",
"177 300 LINE",
"177 555 LINE",
"138 600 LINE",
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"45 0 LINE",
"138 0 LINE",
"177 45 LINE",
"177 288 LINE",
"98 288 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 183;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 589 LINE",
"30 589 LINE",
"30 300 LINE",
"42 300 LINE",
"42 592 LINE",
"34 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 288 LINE",
"30 288 LINE"
);
}
);
width = 48;
}
);
note = c;
unicode = 0063;
},
{
color = 7;
glyphname = cacute;
lastChange = "2020-10-04 18:50:28 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 15, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 183;
}
);
unicode = 0107;
},
{
color = 7;
glyphname = ccaron;
lastChange = "2020-10-04 17:31:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 183;
}
);
unicode = 010D;
},
{
color = 4;
glyphname = ccedilla;
lastChange = "2020-10-04 18:24:05 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 183;
},
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E7;
},
{
color = 4;
glyphname = d;
lastChange = "2020-09-25 15:36:33 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"178 0 LINE",
"178 730 LINE",
"98 730 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"46 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 5 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 5 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"42 0 LINE",
"42 690 LINE",
"30 690 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 11 LINE",
"18 11 LINE"
);
}
);
width = 48;
}
);
note = d;
unicode = 0064;
},
{
color = 4;
glyphname = eth;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = d;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"27 612 LINE",
"178 612 LINE",
"178 662 LINE",
"27 662 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = d;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"10 612 LINE",
"41 612 LINE",
"41 624 LINE",
"10 624 LINE"
);
}
);
width = 48;
}
);
unicode = 00F0;
},
{
color = 7;
glyphname = dcaron;
lastChange = "2020-10-04 17:58:10 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = comma;
transform = "{1, 0, 0, 1, 48, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
},
{
components = (
{
name = d;
},
{
name = comma;
transform = "{1, 0, 0, 1, 184, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 269;
}
);
unicode = 010F;
},
{
color = 7;
glyphname = dcroat;
lastChange = "2020-10-04 18:00:51 +0000";
layers = (
{
components = (
{
name = d;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 612 LINE",
"38 612 LINE",
"38 624 LINE",
"14 624 LINE"
);
}
);
width = 48;
},
{
components = (
{
name = d;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 612 LINE",
"178 612 LINE",
"178 687 LINE",
"45 687 LINE"
);
}
);
width = 184;
}
);
unicode = 0111;
},
{
color = 4;
glyphname = e;
lastChange = "2020-09-25 16:07:11 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 288 LINE",
"98 288 LINE",
"98 75 LINE",
"86 75 LINE",
"86 300 LINE",
"178 300 LINE",
"178 555 LINE",
"138 600 LINE"
);
},
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 375 LINE",
"86 375 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 288 LINE",
"30 288 LINE",
"30 11 LINE",
"18 11 LINE",
"18 300 LINE",
"42 300 LINE",
"42 592 LINE",
"34 600 LINE"
);
},
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 311 LINE",
"18 311 LINE"
);
}
);
width = 48;
}
);
note = e;
unicode = 0065;
},
{
color = 4;
glyphname = eacute;
lastChange = "2020-07-03 15:22:26 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E9;
},
{
color = 7;
glyphname = ecaron;
lastChange = "2020-10-04 18:01:23 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 011B;
},
{
color = 4;
glyphname = ecircumflex;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00EA;
},
{
color = 4;
glyphname = edieresis;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00EB;
},
{
color = 7;
glyphname = edotaccent;
lastChange = "2020-10-04 18:01:41 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 12, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 47, -90}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0117;
},
{
color = 4;
glyphname = egrave;
lastChange = "2020-10-04 18:01:49 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -5, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -10, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00E8;
},
{
color = 7;
glyphname = emacron;
lastChange = "2020-10-04 18:02:51 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, -66}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 23, -33}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0113;
},
{
color = 7;
glyphname = eogonek;
lastChange = "2020-10-04 18:03:41 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = e;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 70, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0119;
},
{
color = 4;
glyphname = f;
lastChange = "2020-09-25 16:07:45 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"92 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE",
"6 525 LINE",
"6 0 LINE",
"86 0 LINE",
"86 525 LINE",
"92 525 LINE",
"92 600 LINE",
"86 600 LINE",
"86 655 LINE",
"92 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"24 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE",
"6 589 LINE",
"6 0 LINE",
"18 0 LINE",
"18 589 LINE",
"24 589 LINE",
"24 600 LINE",
"18 600 LINE",
"18 679 LINE",
"24 679 LINE"
);
}
);
width = 24;
}
);
note = t;
unicode = 0066;
},
{
color = 4;
glyphname = g;
lastChange = "2020-10-05 08:43:17 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 19}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 -130 LINE",
"178 -85 LINE",
"178 555 LINE",
"178 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"46 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"98 -55 LINE",
"86 -55 LINE",
"86 -12 LINE",
"6 -12 LINE",
"6 -85 LINE",
"45 -130 LINE"
);
},
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 -90 LINE",
"42 -82 LINE",
"42 600 LINE",
"42 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE",
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"30 -78 LINE",
"18 -78 LINE",
"18 -12 LINE",
"6 -12 LINE",
"6 -82 LINE",
"14 -90 LINE"
);
},
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 11 LINE",
"18 11 LINE"
);
}
);
width = 48;
}
);
note = g;
unicode = 0067;
},
{
color = 7;
glyphname = gcommaaccent;
lastChange = "2020-10-05 08:43:19 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0123;
},
{
color = 4;
glyphname = h;
lastChange = "2020-09-25 16:07:14 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 555 LINE",
"139 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 592 LINE",
"34 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 48;
}
);
note = h;
unicode = 0068;
},
{
color = 4;
glyphname = i;
lastChange = "2020-10-04 18:11:43 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 600 LINE",
"86 600 LINE",
"86 0 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"87 730 LINE",
"6 730 LINE",
"6 612 LINE",
"87 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{1, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 600 LINE",
"18 600 LINE",
"18 0 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 612 LINE",
"18 612 LINE"
);
}
);
width = 24;
}
);
note = i;
unicode = 0069;
},
{
color = 4;
glyphname = idotless;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 600 LINE",
"86 600 LINE",
"86 0 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 600 LINE",
"18 600 LINE",
"18 0 LINE",
"6 0 LINE"
);
}
);
width = 24;
}
);
note = i;
unicode = 0131;
},
{
color = 4;
glyphname = iacute;
lastChange = "2020-09-14 07:50:40 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -52, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00ED;
},
{
color = 4;
glyphname = icircumflex;
lastChange = "2020-09-14 07:50:45 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -22, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -12, -140}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EE;
},
{
color = 4;
glyphname = idieresis;
lastChange = "2020-09-14 07:50:47 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -45, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -9, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EF;
},
{
color = 4;
glyphname = igrave;
lastChange = "2020-09-14 07:50:53 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -39, -129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -23, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00EC;
},
{
color = 7;
glyphname = imacron;
lastChange = "2020-10-04 18:08:22 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macron;
transform = "{1, 0, 0, 1, -12, -66}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = idotless;
},
{
name = macron;
transform = "{1, 0, 0, 1, -26, -33}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 012B;
},
{
color = 7;
glyphname = iogonek;
lastChange = "2020-10-04 18:12:34 +0000";
layers = (
{
components = (
{
name = ogonek;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 600 LINE",
"6 600 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 612 LINE",
"18 690 LINE",
"6 690 LINE",
"6 612 LINE"
);
}
);
width = 24;
},
{
components = (
{
name = ogonek;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 600 LINE",
"6 600 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"87 612 LINE",
"87 730 LINE",
"6 730 LINE",
"6 612 LINE"
);
}
);
width = 93;
}
);
unicode = 012F;
},
{
color = 4;
glyphname = j;
lastChange = "2020-09-25 16:07:39 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -15 LINE",
"6 600 LINE",
"86 600 LINE",
"86 -130 LINE",
"6 -130 LINE"
);
},
{
closed = 1;
nodes = (
"86 730 LINE",
"6 730 LINE",
"6 612 LINE",
"86 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 12 0 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 2}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 49 LINE",
"6 600 LINE",
"18 600 LINE",
"18 -90 LINE",
"6 -90 LINE"
);
},
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 612 LINE",
"18 612 LINE"
);
}
);
width = 24;
}
);
note = j;
unicode = 006A;
},
{
color = 4;
glyphname = k;
lastChange = "2020-09-25 16:07:56 +0000";
layers = (
{
guideLines = (
{
angle = 270;
position = "{86, 420}";
}
);
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 15}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 308 LINE",
"98 308 LINE",
"98 0 LINE",
"178 0 LINE",
"178 339 LINE",
"145 339 LINE",
"145 351 LINE",
"178 351 LINE",
"178 600 LINE",
"98 600 LINE",
"98 383 LINE",
"86 383 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
origin = "{0, 15}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 300 LINE",
"30 300 LINE",
"30 0 LINE",
"42 0 LINE",
"42 300 LINE",
"36 300 LINE",
"36 311 LINE",
"42 311 LINE",
"42 600 LINE",
"30 600 LINE",
"30 311 LINE",
"18 311 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = k;
unicode = 006B;
},
{
color = 7;
glyphname = kcommaaccent;
lastChange = "2020-10-04 18:14:35 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0137;
},
{
color = 4;
glyphname = l;
lastChange = "2020-09-25 16:07:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
},
{
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 730 LINE",
"6 730 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 1 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = down;
type = TopGhost;
},
{
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 690 LINE",
"6 690 LINE",
"6 0 LINE"
);
}
);
width = 24;
}
);
note = l;
unicode = 006C;
},
{
color = 7;
glyphname = lacute;
lastChange = "2020-10-04 18:15:59 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 1, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -52, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 013A;
},
{
color = 7;
glyphname = lcaron;
lastChange = "2020-10-04 18:17:08 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = comma;
transform = "{1, 0, 0, 1, 24, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = l;
},
{
name = comma;
transform = "{1, 0, 0, 1, 92, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 177;
}
);
unicode = 013E;
},
{
color = 7;
glyphname = lcommaaccent;
lastChange = "2020-10-04 18:17:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 13, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
unicode = 013C;
},
{
color = 7;
glyphname = lslash;
lastChange = "2020-10-04 18:19:34 +0000";
layers = (
{
components = (
{
name = l;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"0 362 LINE",
"24 377 LINE",
"24 389 LINE",
"0 374 LINE"
);
}
);
width = 24;
},
{
components = (
{
name = l;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"0 308 LINE",
"92 370 LINE",
"92 445 LINE",
"0 383 LINE"
);
}
);
width = 92;
}
);
unicode = 0142;
},
{
color = 4;
glyphname = m;
lastChange = "2020-10-02 09:34:13 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 17}";
target = "{0, 18}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"190 600 LINE",
"190 575 LINE",
"178 575 LINE",
"178 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"6 600 LINE",
"6 0 LINE",
"86 0 LINE",
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 525 LINE",
"190 525 LINE",
"190 0 LINE",
"270 0 LINE",
"270 555 LINE",
"231 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
111 7 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
111 3 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
14 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 17}";
target = "{0, 18}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"54 600 LINE",
"54 600 LINE",
"42 600 LINE",
"42 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"6 600 LINE",
"6 0 LINE",
"18 0 LINE",
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 589 LINE",
"54 589 LINE",
"54 0 LINE",
"66 0 LINE",
"66 592 LINE",
"58 600 LINE"
);
}
);
width = 72;
}
);
note = m;
unicode = 006D;
},
{
color = 4;
glyphname = n;
lastChange = "2020-09-25 15:36:10 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 555 LINE",
"139 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"6 600 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 592 LINE",
"34 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"6 600 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 48;
}
);
note = n;
unicode = 006E;
},
{
color = 7;
glyphname = nacute;
lastChange = "2020-10-04 18:22:15 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 9, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0144;
},
{
color = 7;
glyphname = ncaron;
lastChange = "2020-10-04 18:22:50 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0148;
},
{
color = 7;
glyphname = ncommaaccent;
lastChange = "2020-10-04 18:23:02 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 12, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 59, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0146;
},
{
color = 7;
glyphname = eng;
lastChange = "2020-10-04 18:24:31 +0000";
layers = (
{
components = (
{
name = n;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 -40 LINE",
"42 11 LINE",
"30 11 LINE",
"30 -24 LINE",
"35 -24 LINE",
"35 -36 LINE",
"26 -36 LINE",
"26 -48 LINE",
"34 -48 LINE"
);
}
);
width = 48;
},
{
components = (
{
name = n;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 -79 LINE",
"178 10 LINE",
"98 10 LINE",
"98 -62 LINE",
"139 -62 LINE",
"139 -74 LINE",
"98 -74 LINE",
"98 -124 LINE",
"138 -124 LINE"
);
}
);
width = 184;
}
);
unicode = 014B;
},
{
color = 4;
glyphname = ntilde;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -161, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F1;
},
{
color = 4;
glyphname = o;
lastChange = "2020-09-25 15:35:47 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 555 LINE",
"138 600 LINE"
);
},
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 525 LINE",
"98 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 592 LINE",
"34 600 LINE"
);
},
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 589 LINE",
"30 589 LINE"
);
}
);
width = 48;
}
);
note = o;
unicode = 006F;
},
{
color = 4;
glyphname = oacute;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F3;
},
{
color = 4;
glyphname = ocircumflex;
lastChange = "2020-07-13 08:26:41 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F4;
},
{
color = 4;
glyphname = odieresis;
lastChange = "2020-06-25 13:01:24 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F6;
},
{
color = 4;
glyphname = ograve;
lastChange = "2020-06-25 13:02:11 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -7, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F2;
},
{
color = 7;
glyphname = ohungarumlaut;
lastChange = "2020-10-04 18:26:33 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0151;
},
{
color = 7;
glyphname = omacron;
lastChange = "2020-10-04 18:27:16 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, -66}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 20, -33}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 014D;
},
{
color = 4;
glyphname = oslash;
lastChange = "2020-10-02 11:57:18 +0000";
layers = (
{
components = (
{
name = o;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -40 LINE",
"86 -40 LINE",
"86 75 LINE",
"6 75 LINE"
);
},
{
closed = 1;
nodes = (
"98 540 LINE",
"178 540 LINE",
"178 655 LINE",
"98 655 LINE"
);
},
{
closed = 1;
nodes = (
"52 263 LINE",
"132 263 LINE",
"132 338 LINE",
"52 338 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = o;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -24 LINE",
"18 -24 LINE",
"18 11 LINE",
"6 11 LINE"
);
},
{
closed = 1;
nodes = (
"30 589 LINE",
"42 589 LINE",
"42 624 LINE",
"30 624 LINE"
);
},
{
closed = 1;
nodes = (
"8 295 LINE",
"42 295 LINE",
"42 307 LINE",
"8 307 LINE"
);
}
);
width = 48;
}
);
unicode = 00F8;
},
{
color = 4;
glyphname = otilde;
lastChange = "2020-06-25 13:11:18 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -151, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F5;
},
{
color = 4;
glyphname = oe;
lastChange = "2020-06-25 13:11:18 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 555 LINE",
"138 600 LINE"
);
},
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 525 LINE",
"98 525 LINE"
);
},
{
closed = 1;
nodes = (
"137 600 LINE",
"98 555 LINE",
"98 45 LINE",
"137 0 LINE",
"231 0 LINE",
"270 45 LINE",
"270 288 LINE",
"190 288 LINE",
"190 75 LINE",
"178 75 LINE",
"178 300 LINE",
"270 300 LINE",
"270 555 LINE",
"230 600 LINE"
);
},
{
closed = 1;
nodes = (
"178 525 LINE",
"190 525 LINE",
"190 375 LINE",
"178 375 LINE"
);
}
);
width = 276;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 0 LINE",
"42 600 LINE",
"34 600 LINE"
);
},
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 589 LINE",
"30 589 LINE"
);
},
{
closed = 1;
nodes = (
"38 600 LINE",
"30 600 LINE",
"30 0 LINE",
"38 0 LINE",
"58 0 LINE",
"66 8 LINE",
"66 288 LINE",
"54 288 LINE",
"54 11 LINE",
"42 11 LINE",
"42 300 LINE",
"66 300 LINE",
"66 592 LINE",
"58 600 LINE"
);
},
{
closed = 1;
nodes = (
"42 589 LINE",
"54 589 LINE",
"54 311 LINE",
"42 311 LINE"
);
}
);
width = 72;
}
);
unicode = 0153;
},
{
color = 4;
glyphname = p;
lastChange = "2020-09-25 16:07:33 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 45 LINE",
"178 555 LINE",
"139 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"6 600 LINE",
"6 -130 LINE",
"86 -130 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"139 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 525 LINE",
"98 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 3 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 3 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 8 LINE",
"42 592 LINE",
"34 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"6 600 LINE",
"6 -90 LINE",
"18 -90 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"34 0 LINE"
);
},
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 589 LINE",
"30 589 LINE"
);
}
);
width = 48;
}
);
note = p;
unicode = 0070;
},
{
color = 4;
glyphname = thorn;
lastChange = "2020-09-12 11:29:58 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 -2 LINE",
"178 508 LINE",
"139 553 LINE",
"95 553 LINE",
"95 600 LINE",
"6 600 LINE",
"6 -130 LINE",
"85 -130 LINE",
"85 -28 LINE",
"85 -47 LINE",
"139 -47 LINE"
);
},
{
closed = 1;
nodes = (
"98 28 LINE",
"86 28 LINE",
"86 478 LINE",
"98 478 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 29 LINE",
"42 549 LINE",
"34 557 LINE",
"18 557 LINE",
"18 600 LINE",
"6 600 LINE",
"6 -90 LINE",
"18 -90 LINE",
"18 40 LINE",
"18 21 LINE",
"34 21 LINE"
);
},
{
closed = 1;
nodes = (
"30 32 LINE",
"18 32 LINE",
"18 546 LINE",
"30 546 LINE"
);
}
);
width = 48;
}
);
unicode = 00FE;
},
{
color = 4;
glyphname = q;
lastChange = "2020-09-25 16:08:03 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 -130 LINE",
"178 -130 LINE",
"178 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"45 600 LINE",
"6 555 LINE",
"6 45 LINE",
"45 0 LINE"
);
},
{
closed = 1;
nodes = (
"98 525 LINE",
"98 75 LINE",
"86 75 LINE",
"86 525 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 7 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 7 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{1, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 -90 LINE",
"42 -90 LINE",
"42 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 8 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"30 589 LINE",
"30 14 LINE",
"18 14 LINE",
"18 589 LINE"
);
}
);
width = 48;
}
);
note = q;
unicode = 0071;
},
{
color = 4;
glyphname = r;
lastChange = "2020-09-25 16:07:21 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 525 LINE",
"98 525 LINE",
"98 300 LINE",
"178 300 LINE",
"178 555 LINE",
"139 600 LINE",
"98 600 LINE",
"98 575 LINE",
"86 575 LINE",
"86 600 LINE",
"6 600 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 589 LINE",
"30 589 LINE",
"30 300 LINE",
"42 300 LINE",
"42 592 LINE",
"34 600 LINE",
"30 600 LINE",
"30 600 LINE",
"18 600 LINE",
"18 600 LINE",
"6 600 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 48;
}
);
note = r;
unicode = 0072;
},
{
color = 7;
glyphname = racute;
lastChange = "2020-10-04 18:28:32 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 9, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0155;
},
{
color = 7;
glyphname = rcaron;
lastChange = "2020-10-04 18:29:48 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0159;
},
{
color = 7;
glyphname = rcommaaccent;
lastChange = "2020-10-04 18:29:23 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 13, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0157;
},
{
color = 4;
glyphname = s;
lastChange = "2020-09-29 10:50:32 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 20}";
type = Stem;
},
{
origin = "{0, 17}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 336 LINE",
"86 336 LINE",
"86 525 LINE",
"98 525 LINE",
"98 349 LINE",
"178 349 LINE",
"178 555 LINE",
"137 600 LINE",
"46 600 LINE",
"6 555 LINE",
"6 300 LINE",
"46 261 LINE",
"98 261 LINE",
"98 75 LINE",
"86 75 LINE",
"86 248 LINE",
"6 248 LINE",
"6 45 LINE",
"46 0 LINE",
"137 0 LINE",
"178 45 LINE",
"178 300 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 18}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 17}";
target = "{0, 14}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 20}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 311 LINE",
"18 311 LINE",
"18 589 LINE",
"30 589 LINE",
"30 323 LINE",
"42 323 LINE",
"42 592 LINE",
"34 600 LINE",
"14 600 LINE",
"6 592 LINE",
"6 308 LINE",
"14 300 LINE",
"30 300 LINE",
"30 11 LINE",
"18 11 LINE",
"18 287 LINE",
"6 287 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 303 LINE"
);
}
);
width = 48;
}
);
note = s;
unicode = 0073;
},
{
color = 7;
glyphname = sacute;
lastChange = "2020-10-04 18:31:48 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 15, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 015B;
},
{
color = 7;
glyphname = scaron;
lastChange = "2020-10-04 18:32:07 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0161;
},
{
color = 7;
glyphname = scedilla;
lastChange = "2020-10-04 18:33:30 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 29, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 64, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 015F;
},
{
color = 4;
glyphname = germandbls;
lastChange = "2020-10-04 16:00:14 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"89 655 LINE",
"98 655 LINE",
"98 402 LINE",
"64 402 LINE",
"64 327 LINE",
"98 327 LINE",
"98 75 LINE",
"81 75 LINE",
"81 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 358 LINE",
"145 358 LINE",
"145 370 LINE",
"178 370 LINE",
"178 402 LINE",
"178 685 LINE",
"138 730 LINE",
"89 730 LINE"
);
},
{
closed = 1;
nodes = (
"89 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE",
"85 0 LINE",
"85 75 LINE",
"86 75 LINE",
"86 655 LINE",
"89 655 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"21 679 LINE",
"30 679 LINE",
"30 370 LINE",
"13 370 LINE",
"13 358 LINE",
"30 358 LINE",
"30 11 LINE",
"13 11 LINE",
"13 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 358 LINE",
"36 358 LINE",
"36 370 LINE",
"42 370 LINE",
"42 381 LINE",
"42 682 LINE",
"34 690 LINE",
"21 690 LINE"
);
},
{
closed = 1;
nodes = (
"21 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE",
"17 0 LINE",
"17 11 LINE",
"18 11 LINE",
"18 679 LINE",
"21 679 LINE"
);
}
);
width = 48;
}
);
unicode = 00DF;
},
{
color = 4;
glyphname = t;
lastChange = "2020-10-04 18:38:19 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
origin = "{0, 12}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 75 LINE",
"86 525 LINE",
"93 525 LINE",
"93 600 LINE",
"86 600 LINE",
"86 730 LINE",
"6 730 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE",
"6 525 LINE",
"6 45 LINE",
"6 0 LINE",
"86 0 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 93;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = down;
type = TopGhost;
},
{
origin = "{0, 12}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 11 LINE",
"18 589 LINE",
"24 589 LINE",
"24 600 LINE",
"18 600 LINE",
"18 690 LINE",
"6 690 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE",
"6 589 LINE",
"6 11 LINE",
"6 0 LINE",
"18 0 LINE",
"18 11 LINE"
);
}
);
width = 24;
}
);
note = t;
unicode = 0074;
},
{
color = 7;
glyphname = tbar;
lastChange = "2020-10-04 18:35:26 +0000";
layers = (
{
components = (
{
name = t;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"0 566 LINE",
"24 566 LINE",
"24 577 LINE",
"0 577 LINE"
);
}
);
width = 24;
},
{
components = (
{
name = t;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"0 438 LINE",
"93 438 LINE",
"93 513 LINE",
"0 513 LINE"
);
}
);
width = 92;
}
);
unicode = 0167;
},
{
color = 7;
glyphname = tcaron;
lastChange = "2020-10-04 18:37:59 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = comma;
transform = "{1, 0, 0, 1, 24, 639}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = t;
},
{
name = comma;
transform = "{1, 0, 0, 1, 92, 679}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 177;
}
);
unicode = 0165;
},
{
color = 7;
glyphname = tcedilla;
lastChange = "2020-10-04 18:38:29 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 17, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = t;
},
{
name = cedillacomb;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 93;
}
);
unicode = 0163;
},
{
color = 4;
glyphname = u;
lastChange = "2020-09-25 16:07:37 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 5}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 75 LINE",
"86 75 LINE",
"86 600 LINE",
"6 600 LINE",
"6 45 LINE",
"45 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"178 0 LINE",
"178 600 LINE",
"98 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 4}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 11 LINE",
"18 11 LINE",
"18 600 LINE",
"6 600 LINE",
"6 8 LINE",
"14 0 LINE",
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"42 0 LINE",
"42 600 LINE",
"30 600 LINE"
);
}
);
width = 48;
}
);
note = u;
unicode = 0075;
},
{
color = 4;
glyphname = uacute;
lastChange = "2020-06-25 13:21:04 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 9, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FA;
},
{
color = 4;
glyphname = ucircumflex;
lastChange = "2020-06-25 13:21:14 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FB;
},
{
color = 4;
glyphname = udieresis;
lastChange = "2020-06-25 13:21:36 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FC;
},
{
color = 4;
glyphname = ugrave;
lastChange = "2020-06-25 13:22:16 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, -7, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00F9;
},
{
color = 7;
glyphname = uhungarumlaut;
lastChange = "2020-10-04 18:40:52 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0171;
},
{
color = 7;
glyphname = umacron;
lastChange = "2020-10-04 18:41:16 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, -66}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 20, -33}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 016B;
},
{
color = 7;
glyphname = uogonek;
lastChange = "2020-10-04 18:45:35 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonek;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = u;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 93, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 0173;
},
{
color = 7;
glyphname = uring;
lastChange = "2020-10-04 18:43:46 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 0, -133}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 40, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 016F;
},
{
color = 4;
glyphname = v;
lastChange = "2020-09-25 16:07:24 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"46 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 600 LINE",
"98 600 LINE",
"98 75 LINE",
"86 75 LINE",
"86 600 LINE",
"6 600 LINE",
"6 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = down;
type = TopGhost;
},
{
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 600 LINE",
"30 600 LINE",
"30 11 LINE",
"18 11 LINE",
"18 600 LINE",
"6 600 LINE",
"6 8 LINE"
);
}
);
width = 48;
}
);
note = v;
unicode = 0076;
},
{
color = 4;
glyphname = w;
lastChange = "2020-09-25 15:35:57 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 14}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 13}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"270 45 LINE",
"270 600 LINE",
"190 600 LINE",
"190 75 LINE",
"178 75 LINE",
"178 600 LINE",
"98 600 LINE",
"98 75 LINE",
"86 75 LINE",
"86 600 LINE",
"6 600 LINE",
"6 45 LINE",
"46 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"178 0 LINE",
"178 25 LINE",
"190 25 LINE",
"190 0 LINE",
"231 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = down;
type = TopGhost;
},
{
origin = "{0, 11}";
target = "{0, 13}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 15}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"66 8 LINE",
"66 600 LINE",
"54 600 LINE",
"54 11 LINE",
"42 11 LINE",
"42 600 LINE",
"30 600 LINE",
"30 11 LINE",
"18 11 LINE",
"18 600 LINE",
"6 600 LINE",
"6 8 LINE",
"14 0 LINE",
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"42 0 LINE",
"42 0 LINE",
"54 0 LINE",
"54 0 LINE",
"58 0 LINE"
);
}
);
width = 72;
}
);
note = w;
unicode = 0077;
},
{
color = 4;
glyphname = wacute;
lastChange = "2020-06-26 11:12:55 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 48, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E83;
},
{
color = 4;
glyphname = wcircumflex;
lastChange = "2020-06-26 11:12:55 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 65, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 12, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 0175;
},
{
color = 4;
glyphname = wdieresis;
lastChange = "2020-06-26 11:12:55 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 47, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 15, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E85;
},
{
color = 4;
glyphname = wgrave;
lastChange = "2020-06-26 11:12:55 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 30, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 1E81;
},
{
color = 4;
glyphname = x;
lastChange = "2020-09-25 16:07:41 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 272 LINE",
"98 272 LINE",
"98 0 LINE",
"178 0 LINE",
"178 303 LINE",
"145 303 LINE",
"145 315 LINE",
"178 315 LINE",
"178 600 LINE",
"98 600 LINE",
"98 347 LINE",
"86 347 LINE",
"86 600 LINE",
"6 600 LINE",
"6 315 LINE",
"39 315 LINE",
"39 303 LINE",
"6 303 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 19}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 15}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = down;
type = TopGhost;
},
{
origin = "{0, 19}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 300 LINE",
"30 300 LINE",
"30 0 LINE",
"42 0 LINE",
"42 299 LINE",
"37 299 LINE",
"37 311 LINE",
"42 311 LINE",
"42 600 LINE",
"30 600 LINE",
"30 311 LINE",
"18 311 LINE",
"18 600 LINE",
"6 600 LINE",
"6 311 LINE",
"11 311 LINE",
"11 299 LINE",
"6 299 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = x;
unicode = 0078;
},
{
color = 4;
glyphname = y;
lastChange = "2020-10-05 08:46:20 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = "{0, 14}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 18}";
type = Stem;
},
{
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 600 LINE",
"98 75 LINE",
"86 75 LINE",
"86 600 LINE",
"6 600 LINE",
"6 45 LINE",
"46 0 LINE",
"86 0 LINE",
"86 25 LINE",
"98 25 LINE",
"98 0 LINE",
"98 -55 LINE",
"86 -55 LINE",
"86 -12 LINE",
"6 -12 LINE",
"6 -85 LINE",
"45 -130 LINE",
"139 -130 LINE",
"178 -85 LINE",
"178 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 16}";
target = "{0, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
origin = "{0, 15}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 18}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 600 LINE",
"30 11 LINE",
"18 11 LINE",
"18 600 LINE",
"6 600 LINE",
"6 8 LINE",
"14 0 LINE",
"18 0 LINE",
"18 0 LINE",
"30 0 LINE",
"30 0 LINE",
"30 -78 LINE",
"18 -78 LINE",
"18 -12 LINE",
"6 -12 LINE",
"6 -82 LINE",
"14 -90 LINE",
"34 -90 LINE",
"42 -82 LINE",
"42 600 LINE"
);
}
);
width = 48;
}
);
note = y;
unicode = 0079;
},
{
color = 4;
glyphname = yacute;
lastChange = "2020-10-05 08:46:29 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 7, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 9, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FD;
},
{
color = 4;
glyphname = ycircumflex;
lastChange = "2020-10-05 08:46:33 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 19, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0177;
},
{
color = 4;
glyphname = ydieresis;
lastChange = "2020-10-05 08:46:42 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 3, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00FF;
},
{
color = 4;
glyphname = ygrave;
lastChange = "2020-10-05 08:46:47 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -12, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -8, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 1EF3;
},
{
color = 4;
glyphname = z;
lastChange = "2020-09-25 15:28:56 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 14}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"47 0 LINE",
"178 0 LINE",
"178 250 LINE",
"98 250 LINE",
"98 75 LINE",
"86 75 LINE",
"86 262 LINE",
"178 262 LINE",
"178 555 LINE",
"138 600 LINE",
"6 600 LINE",
"6 349 LINE",
"86 349 LINE",
"86 525 LINE",
"98 525 LINE",
"98 337 LINE",
"6 337 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 12 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 14}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"14 0 LINE",
"42 0 LINE",
"42 314 LINE",
"30 314 LINE",
"30 11 LINE",
"18 11 LINE",
"18 326 LINE",
"42 326 LINE",
"42 592 LINE",
"34 600 LINE",
"6 600 LINE",
"6 349 LINE",
"18 349 LINE",
"18 589 LINE",
"30 589 LINE",
"30 337 LINE",
"6 337 LINE"
);
}
);
width = 48;
}
);
note = z;
unicode = 007A;
},
{
color = 7;
glyphname = zacute;
lastChange = "2020-10-04 18:44:18 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 15, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 0, -130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 017A;
},
{
color = 7;
glyphname = zcaron;
lastChange = "2020-10-04 18:44:35 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, -48}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = z;
},
{
name = caron;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 017E;
},
{
color = 7;
glyphname = zdotaccent;
lastChange = "2020-10-04 18:44:54 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 12, -138}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 48, -90}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
unicode = 017C;
},
{
color = 4;
glyphname = f.ss01;
lastChange = "2020-09-25 15:22:33 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 4}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE",
"6 525 LINE",
"6 0 LINE",
"86 0 LINE",
"86 525 LINE",
"92 525 LINE",
"92 600 LINE",
"86 600 LINE",
"86 655 LINE",
"98 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 12 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE",
"6 589 LINE",
"6 0 LINE",
"18 0 LINE",
"18 589 LINE",
"24 589 LINE",
"24 600 LINE",
"18 600 LINE",
"18 679 LINE",
"30 679 LINE"
);
}
);
width = 24;
}
);
note = t;
},
{
color = 4;
glyphname = y.ss01;
lastChange = "2020-10-05 08:50:13 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = down;
type = TopGhost;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
},
{
origin = "{0, 13}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 0 LINE",
"52 0 LINE",
"52 -130 LINE",
"132 -130 LINE",
"132 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 600 LINE",
"98 600 LINE",
"98 75 LINE",
"86 75 LINE",
"86 600 LINE",
"6 600 LINE",
"6 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 15 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
guideLines = (
{
position = "{32, 42}";
}
);
hints = (
{
horizontal = 1;
origin = "{0, 2}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 10}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = down;
type = TopGhost;
},
{
origin = "{0, 13}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 0 LINE",
"18 0 LINE",
"18 -90 LINE",
"30 -90 LINE",
"30 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 600 LINE",
"30 600 LINE",
"30 11 LINE",
"18 11 LINE",
"18 600 LINE",
"6 600 LINE",
"6 8 LINE"
);
}
);
width = 48;
}
);
note = y;
},
{
color = 4;
glyphname = f_f_i;
lastChange = "2020-09-25 16:17:04 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 18}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 525 LINE",
"6 0 LINE",
"86 0 LINE",
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 525 LINE",
"190 525 LINE",
"190 0 LINE",
"270 0 LINE",
"270 600 LINE",
"178 600 LINE",
"178 655 LINE",
"190 655 LINE",
"190 612 LINE",
"270 612 LINE",
"270 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 600 LINE",
"86 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 589 LINE",
"6 0 LINE",
"18 0 LINE",
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 589 LINE",
"54 589 LINE",
"54 0 LINE",
"66 0 LINE",
"66 600 LINE",
"42 600 LINE",
"42 679 LINE",
"54 679 LINE",
"54 612 LINE",
"66 612 LINE",
"66 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 600 LINE",
"18 600 LINE"
);
}
);
width = 72;
}
);
note = fi;
},
{
color = 4;
glyphname = f_f_l;
lastChange = "2020-09-25 16:17:06 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 525 LINE",
"6 0 LINE",
"86 0 LINE",
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 525 LINE",
"190 525 LINE",
"190 0 LINE",
"270 0 LINE",
"270 696 LINE",
"190 707 LINE",
"190 600 LINE",
"178 600 LINE",
"178 655 LINE",
"270 655 LINE",
"270 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 600 LINE",
"86 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 21}";
target = "{0, 22}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 18}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 6}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 589 LINE",
"6 0 LINE",
"18 0 LINE",
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 589 LINE",
"54 589 LINE",
"54 0 LINE",
"66 0 LINE",
"66 681 LINE",
"54 681 LINE",
"54 600 LINE",
"42 600 LINE",
"42 679 LINE",
"66 679 LINE",
"66 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 600 LINE",
"18 600 LINE"
);
}
);
width = 72;
}
);
note = fi;
},
{
color = 4;
glyphname = f_i;
lastChange = "2020-09-25 16:17:10 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 12}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 600 LINE",
"86 600 LINE",
"86 655 LINE",
"121 655 LINE",
"121 612 LINE",
"178 612 LINE",
"178 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 600 LINE",
"18 600 LINE",
"18 679 LINE",
"30 679 LINE",
"30 612 LINE",
"42 612 LINE",
"42 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = fi;
},
{
color = 4;
glyphname = f_l;
lastChange = "2020-09-25 16:17:12 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 525 LINE",
"98 525 LINE",
"98 0 LINE",
"178 0 LINE",
"178 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 600 LINE",
"86 600 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 8}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 589 LINE",
"30 589 LINE",
"30 0 LINE",
"42 0 LINE",
"42 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 600 LINE",
"18 600 LINE"
);
}
);
width = 48;
}
);
note = fi;
},
{
color = 4;
glyphname = f_t;
lastChange = "2020-09-25 16:17:18 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 14}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 11}";
target = "{1, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 8}";
target = "{1, 5}";
type = Stem;
},
{
origin = "{1, 14}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"184 0 LINE",
"184 75 LINE",
"178 75 LINE",
"178 525 LINE",
"184 525 LINE",
"184 600 LINE",
"178 600 LINE",
"178 730 LINE",
"98 730 LINE",
"98 600 LINE",
"92 600 LINE",
"92 525 LINE",
"98 525 LINE",
"98 45 LINE",
"137 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 0 LINE",
"86 525 LINE",
"92 525 LINE",
"92 600 LINE",
"86 600 LINE",
"86 638 LINE",
"164 638 LINE",
"164 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE",
"6 525 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 12 12 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 12 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 14}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 11}";
target = "{1, 12}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 8}";
target = "{1, 5}";
type = Stem;
},
{
origin = "{1, 14}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"46 0 LINE",
"46 11 LINE",
"40 11 LINE",
"40 589 LINE",
"45 589 LINE",
"45 600 LINE",
"40 600 LINE",
"40 690 LINE",
"28 690 LINE",
"28 600 LINE",
"24 600 LINE",
"24 589 LINE",
"28 589 LINE",
"28 11 LINE",
"40 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 0 LINE",
"18 589 LINE",
"24 589 LINE",
"24 600 LINE",
"18 600 LINE",
"18 679 LINE",
"40 679 LINE",
"40 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE",
"6 589 LINE",
"6 0 LINE"
);
}
);
width = 46;
}
);
note = fi;
},
{
glyphname = i_t;
lastChange = "2020-09-25 16:17:20 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 2}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{2, 2}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"184 0 LINE",
"184 75 LINE",
"178 75 LINE",
"178 525 LINE",
"185 525 LINE",
"185 600 LINE",
"178 600 LINE",
"178 730 LINE",
"98 730 LINE",
"98 600 LINE",
"29 600 LINE",
"29 525 LINE",
"98 525 LINE",
"98 45 LINE",
"137 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 0 LINE",
"86 600 LINE",
"6 600 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"87 612 LINE",
"87 730 LINE",
"6 730 LINE",
"6 612 LINE"
);
}
);
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{1, 3}";
target = "{0, 13}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 2}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{2, 2}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 13}";
target = "{0, 14}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"48 0 LINE",
"48 11 LINE",
"42 11 LINE",
"42 589 LINE",
"48 589 LINE",
"48 600 LINE",
"42 600 LINE",
"42 690 LINE",
"30 690 LINE",
"30 600 LINE",
"7 600 LINE",
"7 589 LINE",
"30 589 LINE",
"30 11 LINE",
"42 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 0 LINE",
"18 600 LINE",
"6 600 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"19 612 LINE",
"19 690 LINE",
"6 690 LINE",
"6 612 LINE"
);
}
);
width = 48;
}
);
},
{
glyphname = t_i;
lastChange = "2020-09-25 16:17:22 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 0 LINE",
"86 75 LINE",
"86 75 LINE",
"86 525 LINE",
"148 525 LINE",
"148 600 LINE",
"86 600 LINE",
"86 730 LINE",
"6 730 LINE",
"6 600 LINE",
"0 600 LINE",
"0 525 LINE",
"6 525 LINE",
"6 45 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"178 0 LINE",
"178 600 LINE",
"98 600 LINE",
"98 0 LINE"
);
},
{
closed = 1;
nodes = (
"179 612 LINE",
"179 730 LINE",
"98 730 LINE",
"98 612 LINE"
);
}
);
width = 185;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 14}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{2, 3}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 0 LINE",
"18 11 LINE",
"18 11 LINE",
"18 589 LINE",
"40 589 LINE",
"40 600 LINE",
"18 600 LINE",
"18 690 LINE",
"6 690 LINE",
"6 600 LINE",
"0 600 LINE",
"0 589 LINE",
"6 589 LINE",
"6 11 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"42 0 LINE",
"42 600 LINE",
"30 600 LINE",
"30 0 LINE"
);
},
{
closed = 1;
nodes = (
"43 612 LINE",
"43 690 LINE",
"30 690 LINE",
"30 612 LINE"
);
}
);
width = 49;
}
);
},
{
glyphname = zero;
lastChange = "2020-09-25 16:14:44 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{1, 2}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 0 LINE",
"178 40 LINE",
"178 685 LINE",
"138 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 40 LINE",
"46 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 6}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{1, 2}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 0 LINE",
"42 11 LINE",
"42 679 LINE",
"34 690 LINE",
"14 690 LINE",
"6 679 LINE",
"6 11 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 11 LINE",
"18 11 LINE"
);
}
);
width = 48;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2020-09-25 16:15:15 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"82 0 LINE",
"82 730 LINE",
"6 730 LINE"
);
}
);
width = 88;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 3}";
target = down;
type = TopGhost;
},
{
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"18 0 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 24;
}
);
note = fraction;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2020-09-25 16:14:47 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 20}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 16}";
type = Stem;
},
{
origin = "{0, 19}";
target = "{0, 10}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"6 0 LINE",
"177 0 LINE",
"177 45 LINE",
"177 300 LINE",
"97 300 LINE",
"97 104 LINE",
"85 104 LINE",
"85 312 LINE",
"138 312 LINE",
"178 349 LINE",
"178 685 LINE",
"138 730 LINE",
"47 730 LINE",
"6 679 LINE",
"6 399 LINE",
"86 399 LINE",
"86 655 LINE",
"98 655 LINE",
"98 387 LINE",
"45 387 LINE",
"6 349 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
4 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 20}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 13}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 7}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"6 0 LINE",
"42 0 LINE",
"42 45 LINE",
"42 335 LINE",
"30 335 LINE",
"30 11 LINE",
"18 11 LINE",
"18 347 LINE",
"35 347 LINE",
"43 355 LINE",
"43 682 LINE",
"35 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 370 LINE",
"19 370 LINE",
"19 679 LINE",
"31 679 LINE",
"31 358 LINE",
"14 358 LINE",
"6 350 LINE"
);
}
);
width = 49;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-09-25 16:14:49 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 20}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 19}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 11}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 730 LINE",
"6 685 LINE",
"6 414 LINE",
"86 414 LINE",
"86 655 LINE",
"98 655 LINE",
"98 402 LINE",
"41 402 LINE",
"41 312 LINE",
"98 312 LINE",
"98 75 LINE",
"86 75 LINE",
"86 300 LINE",
"6 300 LINE",
"6 45 LINE",
"46 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 351 LINE",
"121 351 LINE",
"121 363 LINE",
"178 363 LINE",
"178 685 LINE",
"138 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 15}";
target = "{0, 11}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 20}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 19}";
type = Stem;
},
{
origin = "{0, 14}";
target = "{0, 11}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 17}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 690 LINE",
"6 682 LINE",
"6 382 LINE",
"18 382 LINE",
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"6 370 LINE",
"6 336 LINE",
"30 336 LINE",
"30 11 LINE",
"18 11 LINE",
"18 324 LINE",
"6 324 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 347 LINE",
"18 347 LINE",
"18 359 LINE",
"42 359 LINE",
"42 682 LINE",
"34 690 LINE"
);
}
);
width = 48;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2020-09-25 16:14:52 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 4}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
},
{
origin = "{1, 3}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"174 730 LINE",
"6 730 LINE",
"6 152 LINE",
"94 152 LINE",
"94 0 LINE",
"174 0 LINE"
);
},
{
closed = 1;
nodes = (
"84 227 LINE",
"84 730 LINE",
"96 730 LINE",
"96 227 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 12 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 6 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 6 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
12 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 180;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 4}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = down;
type = TopGhost;
},
{
origin = "{0, 2}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 5}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 690 LINE",
"6 690 LINE",
"6 152 LINE",
"30 152 LINE",
"30 0 LINE",
"42 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 163 LINE",
"18 690 LINE",
"30 690 LINE",
"30 163 LINE"
);
}
);
width = 48;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2020-09-25 16:14:55 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 378 LINE",
"138 423 LINE",
"86 423 LINE",
"86 655 LINE",
"98 655 LINE",
"98 435 LINE",
"176 435 LINE",
"176 730 LINE",
"6 730 LINE",
"6 311 LINE",
"86 311 LINE",
"86 348 LINE",
"98 348 LINE",
"98 75 LINE",
"86 75 LINE",
"86 299 LINE",
"6 299 LINE",
"6 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 17}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 14}";
target = "{0, 5}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 20}";
target = "{0, 17}";
type = Stem;
},
{
origin = "{0, 16}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"16 0 LINE",
"36 0 LINE",
"44 8 LINE",
"44 415 LINE",
"36 423 LINE",
"20 423 LINE",
"20 679 LINE",
"32 679 LINE",
"32 435 LINE",
"44 435 LINE",
"44 690 LINE",
"8 690 LINE",
"8 375 LINE",
"20 375 LINE",
"20 412 LINE",
"32 412 LINE",
"32 11 LINE",
"20 11 LINE",
"20 363 LINE",
"8 363 LINE",
"8 8 LINE"
);
}
);
width = 52;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2020-09-25 16:14:57 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{1, 2}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 423 LINE",
"86 423 LINE",
"86 655 LINE",
"98 655 LINE",
"98 435 LINE",
"178 435 LINE",
"178 685 LINE",
"138 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 45 LINE",
"46 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 378 LINE"
);
},
{
closed = 1;
nodes = (
"86 348 LINE",
"98 348 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 8}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{1, 2}";
target = "{0, 13}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 423 LINE",
"18 423 LINE",
"18 679 LINE",
"30 679 LINE",
"30 435 LINE",
"42 435 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 415 LINE"
);
},
{
closed = 1;
nodes = (
"18 412 LINE",
"30 412 LINE",
"30 11 LINE",
"18 11 LINE"
);
}
);
width = 48;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2020-10-05 08:50:46 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 730 LINE",
"6 370 LINE",
"86 370 LINE",
"86 655 LINE",
"98 655 LINE",
"98 370 LINE",
"59 281 LINE",
"59 0 LINE",
"139 0 LINE",
"139 281 LINE",
"178 370 LINE",
"178 730 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 9 11 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 7 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 11 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 1}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 5}";
target = "{0, 10}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 8}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 690 LINE",
"6 370 LINE",
"18 370 LINE",
"18 679 LINE",
"30 679 LINE",
"30 370 LINE",
"19 281 LINE",
"19 0 LINE",
"31 0 LINE",
"31 281 LINE",
"42 370 LINE",
"42 690 LINE"
);
}
);
width = 48;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2020-09-25 16:15:01 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 730 LINE",
"6 685 LINE",
"6 370 LINE",
"46 370 LINE",
"46 358 LINE",
"6 358 LINE",
"6 45 LINE",
"45 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 358 LINE",
"138 358 LINE",
"138 370 LINE",
"178 370 LINE",
"178 685 LINE",
"139 730 LINE"
);
},
{
closed = 1;
nodes = (
"86 75 LINE",
"86 326 LINE",
"98 326 LINE",
"98 75 LINE"
);
},
{
closed = 1;
nodes = (
"86 401 LINE",
"86 655 LINE",
"98 655 LINE",
"98 401 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{1, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 2}";
target = "{2, 0}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{2, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 1}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{1, 0}";
type = Stem;
},
{
origin = "{1, 3}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 690 LINE",
"6 682 LINE",
"6 370 LINE",
"18 370 LINE",
"18 358 LINE",
"6 358 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 358 LINE",
"30 358 LINE",
"30 370 LINE",
"42 370 LINE",
"42 682 LINE",
"34 690 LINE"
);
},
{
closed = 1;
nodes = (
"18 11 LINE",
"18 347 LINE",
"30 347 LINE",
"30 11 LINE"
);
},
{
closed = 1;
nodes = (
"18 381 LINE",
"18 679 LINE",
"30 679 LINE",
"30 381 LINE"
);
}
);
width = 48;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2020-10-05 08:50:38 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 267 LINE",
"98 267 LINE",
"98 75 LINE",
"86 75 LINE",
"86 255 LINE",
"6 255 LINE",
"6 45 LINE",
"46 0 LINE",
"139 0 LINE",
"178 45 LINE",
"178 685 LINE",
"138 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 312 LINE"
);
},
{
closed = 1;
nodes = (
"98 342 LINE",
"86 342 LINE",
"86 655 LINE",
"98 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 7}";
target = "{0, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 1}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 12}";
target = "{1, 2}";
type = Stem;
},
{
origin = "{0, 6}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 2}";
target = "{0, 9}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 267 LINE",
"30 267 LINE",
"30 11 LINE",
"18 11 LINE",
"18 255 LINE",
"6 255 LINE",
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 275 LINE"
);
},
{
closed = 1;
nodes = (
"30 278 LINE",
"18 278 LINE",
"18 679 LINE",
"30 679 LINE"
);
}
);
width = 48;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = one.ss01;
lastChange = "2020-09-25 16:15:07 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"178 685 LINE",
"138 730 LINE",
"6 730 LINE",
"6 87 LINE",
"86 87 LINE",
"86 655 LINE",
"98 655 LINE",
"98 75 LINE",
"6 75 LINE",
"6 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
hints = (
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 9}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 6}";
type = Stem;
},
{
origin = "{0, 10}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 8}";
target = "{0, 0}";
type = Stem;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 0 LINE",
"42 682 LINE",
"32 690 LINE",
"6 690 LINE",
"6 23 LINE",
"18 23 LINE",
"18 679 LINE",
"30 679 LINE",
"30 11 LINE",
"6 11 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
note = one;
},
{
glyphname = fraction;
lastChange = "2020-09-12 12:00:26 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"82 0 LINE",
"82 730 LINE",
"6 730 LINE"
);
}
);
width = 88;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"18 0 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 24;
}
);
note = fraction;
unicode = 2044;
},
{
color = 4;
glyphname = period;
lastChange = "2020-09-25 15:06:27 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 75 LINE",
"6 75 LINE",
"6 0 LINE",
"86 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 75 LINE",
"6 75 LINE",
"6 0 LINE",
"18 0 LINE"
);
}
);
width = 24;
}
);
note = period;
unicode = 002E;
},
{
color = 4;
glyphname = comma;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -45 LINE",
"46 -45 LINE",
"79 0 LINE",
"79 75 LINE",
"6 75 LINE",
"6 0 LINE",
"39 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 85;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -45 LINE",
"12 -45 LINE",
"18 0 LINE",
"18 75 LINE",
"6 75 LINE",
"6 0 LINE",
"12 0 LINE"
);
}
);
width = 24;
}
);
note = comma;
unicode = 002C;
},
{
color = 4;
glyphname = colon;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 0, 480}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 8 4 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 0, 480}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = colon;
unicode = 003A;
},
{
color = 4;
glyphname = semicolon;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 480}";
},
{
name = comma;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 8 7 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 480}";
},
{
name = comma;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = semicolon;
unicode = 003B;
},
{
color = 4;
glyphname = ellipsis;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 92, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 184, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 276;
},
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 18, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 36, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 60;
}
);
unicode = 2026;
},
{
color = 4;
glyphname = exclam;
lastChange = "2020-09-12 12:02:51 +0000";
layers = (
{
components = (
{
name = period;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 219 LINE",
"86 730 LINE",
"6 730 LINE",
"6 219 LINE",
"35 87 LINE",
"57 87 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
5 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
8 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = period;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 153 LINE",
"18 690 LINE",
"6 690 LINE",
"6 153 LINE",
"9 87 LINE",
"15 87 LINE"
);
}
);
width = 24;
}
);
note = exclam;
unicode = 0021;
},
{
color = 4;
glyphname = exclamdown;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = exclam;
transform = "{1, 0, 0, -1, 0, 600}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 2 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = exclam;
transform = "{1, 0, 0, -1, 0, 600}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = exclamdown;
unicode = 00A1;
},
{
color = 4;
glyphname = question;
lastChange = "2020-09-12 12:02:58 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 46, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"52 87 LINE",
"132 87 LINE",
"132 144 LINE",
"138 144 LINE",
"178 181 LINE",
"178 685 LINE",
"138 730 LINE",
"47 730 LINE",
"6 679 LINE",
"6 231 LINE",
"86 231 LINE",
"86 655 LINE",
"98 655 LINE",
"98 219 LINE",
"52 219 LINE"
);
}
);
width = 184;
},
{
components = (
{
name = period;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 87 LINE",
"18 87 LINE",
"18 207 LINE",
"34 207 LINE",
"42 215 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 231 LINE",
"18 231 LINE",
"18 679 LINE",
"30 679 LINE",
"30 219 LINE",
"6 219 LINE"
);
}
);
width = 48;
}
);
unicode = 003F;
},
{
color = 4;
glyphname = questiondown;
lastChange = "2020-09-12 12:03:16 +0000";
layers = (
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 184, 600}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
components = (
{
name = question;
transform = "{-1, 0, 0, -1, 48, 690}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 00BF;
},
{
color = 4;
glyphname = periodcentered;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 358}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 358}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 00B7;
},
{
color = 4;
glyphname = bullet;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1.4, 0, 0, 1.4, -2, 358}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 124;
},
{
components = (
{
name = period;
transform = "{1.4, 0, 0, 1.4, -2, 358}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 29;
}
);
unicode = 2022;
},
{
color = 4;
glyphname = asterisk;
lastChange = "2020-09-12 12:03:23 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"62 637 LINE",
"85 637 LINE",
"85 628 LINE",
"62 628 LINE",
"82 535 LINE",
"117 535 LINE",
"137 628 LINE",
"114 628 LINE",
"114 637 LINE",
"137 637 LINE",
"117 730 LINE",
"82 730 LINE"
);
},
{
closed = 1;
nodes = (
"85 667 LINE",
"96 647 LINE",
"88 643 LINE",
"77 663 LINE",
"6 599 LINE",
"24 569 LINE",
"114 598 LINE",
"103 618 LINE",
"111 622 LINE",
"122 602 LINE",
"193 666 LINE",
"175 696 LINE"
);
},
{
closed = 1;
nodes = (
"122 662 LINE",
"110 643 LINE",
"103 648 LINE",
"115 667 LINE",
"24 697 LINE",
"7 666 LINE",
"77 603 LINE",
"89 622 LINE",
"96 617 LINE",
"84 598 LINE",
"175 568 LINE",
"192 599 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
23 6 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 199;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 669 LINE",
"18 669 LINE",
"18 660 LINE",
"18 660 LINE",
"21 639 LINE",
"27 639 LINE",
"30 660 LINE",
"30 660 LINE",
"30 669 LINE",
"30 669 LINE",
"27 690 LINE",
"21 690 LINE"
);
},
{
closed = 1;
nodes = (
"25 672 LINE",
"25 672 LINE",
"17 667 LINE",
"17 667 LINE",
"0 654 LINE",
"3 649 LINE",
"23 657 LINE",
"23 657 LINE",
"31 662 LINE",
"31 662 LINE",
"48 675 LINE",
"45 680 LINE"
);
},
{
closed = 1;
nodes = (
"31 667 LINE",
"31 667 LINE",
"23 672 LINE",
"23 672 LINE",
"3 680 LINE",
"0 675 LINE",
"17 662 LINE",
"17 662 LINE",
"25 657 LINE",
"25 657 LINE",
"45 649 LINE",
"48 654 LINE"
);
}
);
width = 48;
}
);
note = asterisk;
unicode = 002A;
},
{
color = 4;
glyphname = numbersign;
lastChange = "2020-09-12 12:03:27 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 730 LINE",
"18 730 LINE",
"18 0 LINE",
"98 0 LINE"
);
},
{
closed = 1;
nodes = (
"190 730 LINE",
"110 730 LINE",
"110 0 LINE",
"190 0 LINE"
);
},
{
closed = 1;
nodes = (
"6 417 LINE",
"202 417 LINE",
"202 492 LINE",
"6 492 LINE"
);
},
{
closed = 1;
nodes = (
"6 243 LINE",
"202 243 LINE",
"202 318 LINE",
"6 318 LINE"
);
}
);
width = 208;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 0 LINE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"42 690 LINE",
"30 690 LINE",
"30 0 LINE",
"42 0 LINE"
);
},
{
closed = 1;
nodes = (
"3 354 LINE",
"45 354 LINE",
"45 365 LINE",
"3 365 LINE"
);
},
{
closed = 1;
nodes = (
"3 331 LINE",
"45 331 LINE",
"45 342 LINE",
"3 342 LINE"
);
}
);
width = 48;
}
);
note = numbersign;
unicode = 0023;
},
{
color = 4;
glyphname = slash;
lastChange = "2020-10-01 13:43:43 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 730 LINE",
"6 730 LINE",
"6 -87 LINE",
"86 -87 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 -50 LINE",
"18 -50 LINE"
);
}
);
width = 24;
}
);
note = slash;
unicode = 002F;
},
{
color = 4;
glyphname = backslash;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = slash;
transform = "{-1, 0, 0, 1, 92, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = slash;
transform = "{-1, 0, 0, 1, 24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = backslash;
unicode = 005C;
},
{
color = 4;
glyphname = parenleft;
lastChange = "2020-10-01 13:42:42 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 448 LINE",
"86 730 LINE",
"49 730 LINE",
"6 448 LINE",
"6 195 LINE",
"49 -87 LINE",
"86 -87 LINE",
"86 195 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 11 3 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 440 LINE",
"18 690 LINE",
"12 690 LINE",
"6 440 LINE",
"6 199 LINE",
"12 -50 LINE",
"18 -50 LINE",
"18 199 LINE"
);
}
);
width = 24;
}
);
note = parenleft;
unicode = 0028;
},
{
color = 4;
glyphname = parenright;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = parenleft;
transform = "{-1, 0, 0, 1, 92, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 11 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = parenleft;
transform = "{-1, 0, 0, 1, 24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 23;
}
);
note = parenright;
unicode = 0029;
},
{
color = 4;
glyphname = braceleft;
lastChange = "2020-10-01 13:43:53 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"20 284 LINE",
"20 -87 LINE",
"114 -87 LINE",
"114 -12 LINE",
"100 -12 LINE",
"100 315 LINE",
"68 315 LINE",
"68 327 LINE",
"100 327 LINE",
"100 655 LINE",
"114 655 LINE",
"114 730 LINE",
"20 730 LINE",
"20 359 LINE",
"6 359 LINE",
"6 284 LINE"
);
}
);
width = 106;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 310 LINE",
"6 -50 LINE",
"21 -50 LINE",
"21 -39 LINE",
"18 -39 LINE",
"18 310 LINE",
"14 310 LINE",
"14 322 LINE",
"18 322 LINE",
"18 680 LINE",
"21 680 LINE",
"21 690 LINE",
"6 690 LINE",
"6 322 LINE",
"3 322 LINE",
"3 310 LINE"
);
}
);
width = 24;
}
);
unicode = 007B;
},
{
color = 4;
glyphname = braceright;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, 1, 106, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 106;
},
{
components = (
{
name = braceleft;
transform = "{-1, 0, 0, 1, 24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 007D;
},
{
color = 4;
glyphname = bracketleft;
lastChange = "2020-10-01 13:43:32 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 730 LINE",
"6 730 LINE",
"6 -87 LINE",
"86 -87 LINE"
);
},
{
closed = 1;
nodes = (
"6 655 LINE",
"100 655 LINE",
"100 730 LINE",
"6 730 LINE"
);
},
{
closed = 1;
nodes = (
"6 -87 LINE",
"100 -87 LINE",
"100 -12 LINE",
"6 -12 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 9 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 12 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 -50 LINE",
"18 -50 LINE"
);
},
{
closed = 1;
nodes = (
"6 679 LINE",
"21 679 LINE",
"21 690 LINE",
"6 690 LINE"
);
},
{
closed = 1;
nodes = (
"6 -50 LINE",
"21 -50 LINE",
"21 -39 LINE",
"6 -39 LINE"
);
}
);
width = 24;
}
);
note = bracketleft;
unicode = 005B;
},
{
color = 4;
glyphname = bracketright;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = bracketleft;
transform = "{-1, 0, 0, 1, 92, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 12 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
},
{
components = (
{
name = bracketleft;
transform = "{-1, 0, 0, 1, 24, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = bracketright;
unicode = 005D;
},
{
color = 4;
glyphname = hyphen;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 370 LINE",
"6 370 LINE",
"6 300 LINE",
"75 300 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 1 14 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 8 0 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 81;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"21 341 LINE",
"6 341 LINE",
"6 329 LINE",
"21 329 LINE"
);
}
);
width = 27;
}
);
note = hyphen;
unicode = 002D;
},
{
color = 4;
glyphname = endash;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"92 370 LINE",
"6 370 LINE",
"6 300 LINE",
"92 300 LINE"
);
}
);
width = 98;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"36 341 LINE",
"6 341 LINE",
"6 329 LINE",
"36 329 LINE"
);
}
);
width = 42;
}
);
unicode = 2013;
},
{
color = 4;
glyphname = emdash;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"114 370 LINE",
"6 370 LINE",
"6 300 LINE",
"114 300 LINE"
);
}
);
width = 120;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"66 341 LINE",
"6 341 LINE",
"6 329 LINE",
"66 329 LINE"
);
}
);
width = 72;
}
);
unicode = 2014;
},
{
color = 4;
glyphname = underscore;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 -17 LINE",
"6 -17 LINE",
"6 -87 LINE",
"75 -87 LINE"
);
}
);
width = 81;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"21 0 LINE",
"6 0 LINE",
"6 -12 LINE",
"21 -12 LINE"
);
}
);
width = 27;
}
);
unicode = 005F;
},
{
color = 4;
glyphname = quotesinglbase;
lastChange = "2020-10-05 08:51:28 +0000";
layers = (
{
components = (
{
name = comma;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 1 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 85;
},
{
components = (
{
name = comma;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
color = 4;
glyphname = quotedblbase;
lastChange = "2020-10-05 08:51:32 +0000";
layers = (
{
components = (
{
name = comma;
},
{
name = comma;
transform = "{1, 0, 0, 1, 92, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 177;
},
{
components = (
{
name = comma;
},
{
name = comma;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 42;
}
);
unicode = 201E;
},
{
color = 4;
glyphname = quotedblleft;
lastChange = "2020-10-05 08:51:36 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 85, 685}";
},
{
name = comma;
transform = "{-1, 0, 0, -1, 177, 685}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 3 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 10 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
2 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 12 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
7 12 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 177;
},
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 24, 634}";
},
{
name = comma;
transform = "{-1, 0, 0, -1, 42, 634}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 42;
}
);
note = quotedblleft;
unicode = 201C;
},
{
color = 4;
glyphname = quotedblright;
lastChange = "2020-09-12 12:05:00 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 92, 655}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 0, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 177;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 18, 615}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 0, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 42;
}
);
note = quotedblright;
unicode = 201D;
},
{
color = 4;
glyphname = quoteleft;
lastChange = "2020-09-12 12:05:12 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 85, 685}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 85;
},
{
components = (
{
name = comma;
transform = "{-1, 0, 0, -1, 24, 634}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quoteleft;
unicode = 2018;
},
{
color = 4;
glyphname = quoteright;
lastChange = "2020-10-05 08:51:40 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 0, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 85;
},
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 0, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quoteright;
unicode = 2019;
},
{
color = 4;
glyphname = guillemotleft;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 322 LINE",
"12 152 LINE",
"92 152 LINE",
"86 322 LINE",
"92 491 LINE",
"12 491 LINE"
);
},
{
closed = 1;
nodes = (
"98 322 LINE",
"98 152 LINE",
"178 152 LINE",
"178 322 LINE",
"178 491 LINE",
"98 491 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 322 LINE",
"12 152 LINE",
"24 152 LINE",
"18 322 LINE",
"24 491 LINE",
"12 491 LINE"
);
},
{
closed = 1;
nodes = (
"26 322 LINE",
"30 152 LINE",
"42 152 LINE",
"38 322 LINE",
"42 491 LINE",
"30 491 LINE"
);
}
);
width = 48;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
color = 4;
glyphname = guillemotright;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, 1, 184, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
components = (
{
name = guillemotleft;
transform = "{-1, 0, 0, 1, 48, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
note = guillemotright;
unicode = 00BB;
},
{
color = 4;
glyphname = guilsinglleft;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 322 LINE",
"6 152 LINE",
"86 152 LINE",
"86 322 LINE",
"86 491 LINE",
"6 491 LINE"
);
}
);
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 322 LINE",
"6 152 LINE",
"18 152 LINE",
"18 322 LINE",
"18 491 LINE",
"6 491 LINE"
);
}
);
width = 24;
}
);
unicode = 2039;
},
{
color = 4;
glyphname = guilsinglright;
lastChange = "2020-06-26 10:10:46 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = guilsinglleft;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 203A;
},
{
color = 4;
glyphname = quotedbl;
lastChange = "2020-09-12 12:05:20 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"75 730 LINE",
"6 730 LINE",
"6 660 LINE",
"75 660 LINE"
);
},
{
closed = 1;
nodes = (
"156 730 LINE",
"87 730 LINE",
"87 660 LINE",
"156 660 LINE"
);
}
);
width = 162;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 690 LINE",
"6 690 LINE",
"6 620 LINE",
"18 620 LINE"
);
},
{
closed = 1;
nodes = (
"36 690 LINE",
"24 690 LINE",
"24 620 LINE",
"36 620 LINE"
);
}
);
width = 42;
}
);
note = quotedbl;
unicode = 0022;
},
{
color = 4;
glyphname = quotesingle;
lastChange = "2020-09-12 12:05:23 +0000";
layers = (
{
components = (
{
name = quotesinglbase;
transform = "{1, 0, 0, 1, 0, 655}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 9 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 5 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 85;
},
{
components = (
{
name = quotesinglbase;
transform = "{1, 0, 0, 1, 0, 615}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "mediumspace-math";
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 188;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 188;
}
);
widthMetricsKey = "=188";
unicode = 205F;
},
{
glyphname = emquad;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 850;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 850;
}
);
widthMetricsKey = "=850";
unicode = 2001;
},
{
glyphname = emspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 850;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 850;
}
);
widthMetricsKey = "=850";
unicode = 2003;
},
{
glyphname = enquad;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 425;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 425;
}
);
widthMetricsKey = "=425";
unicode = 2000;
},
{
glyphname = enspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 425;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 425;
}
);
widthMetricsKey = "=425";
unicode = 2002;
},
{
glyphname = figurespace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
}
);
widthMetricsKey = "=zero";
unicode = 2007;
},
{
glyphname = fourperemspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 212;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 212;
}
);
widthMetricsKey = "=212";
unicode = 2005;
},
{
glyphname = hairspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 59;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 59;
}
);
widthMetricsKey = "=59";
unicode = 200A;
},
{
glyphname = narrownbspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 5;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 15;
}
);
widthMetricsKey = "=space*0.2";
unicode = 202F;
},
{
glyphname = punctuationspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
}
);
widthMetricsKey = "=period";
unicode = 2008;
},
{
glyphname = sixperemspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 141;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 141;
}
);
widthMetricsKey = "=141";
unicode = 2006;
},
{
glyphname = space;
lastChange = "2020-10-02 09:33:23 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 75;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 27;
}
);
unicode = 0020;
},
{
glyphname = nbspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 27;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 75;
}
);
widthMetricsKey = "=space";
unicode = 00A0;
},
{
glyphname = thinspace;
lastChange = "2020-10-02 11:56:25 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 20;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 40;
}
);
unicode = 2009;
},
{
glyphname = threeperemspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 283;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 283;
}
);
widthMetricsKey = "=283";
unicode = 2004;
},
{
glyphname = zerowidthspace;
lastChange = "2020-10-02 11:55:13 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 0;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 0;
}
);
widthMetricsKey = "=0";
unicode = 200B;
},
{
glyphname = CR;
lastChange = "2020-06-24 11:13:44 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 600;
}
);
note = CR;
},
{
glyphname = .notdef;
lastChange = "2020-09-14 07:52:39 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"130 471 LINE",
"130 600 LINE",
"6 600 LINE",
"6 471 LINE"
);
},
{
closed = 1;
nodes = (
"21 46 LINE",
"21 370 LINE",
"16 370 LINE",
"16 46 LINE"
);
},
{
closed = 1;
nodes = (
"37 343 LINE",
"37 370 LINE",
"16 370 LINE",
"16 343 LINE"
);
},
{
closed = 1;
nodes = (
"49 417 LINE",
"49 471 LINE",
"23 471 LINE",
"23 417 LINE"
);
},
{
closed = 1;
nodes = (
"81 417 LINE",
"81 471 LINE",
"55 471 LINE",
"55 417 LINE"
);
},
{
closed = 1;
nodes = (
"114 417 LINE",
"114 471 LINE",
"87 471 LINE",
"87 417 LINE"
);
},
{
closed = 1;
nodes = (
"25 562 LINE",
"51 562 LINE",
"51 508 LINE",
"25 508 LINE"
);
},
{
closed = 1;
nodes = (
"85 562 LINE",
"111 562 LINE",
"111 508 LINE",
"85 508 LINE"
);
},
{
closed = 1;
nodes = (
"37 206 LINE",
"37 233 LINE",
"16 233 LINE",
"16 206 LINE"
);
},
{
closed = 1;
nodes = (
"48 46 LINE",
"48 370 LINE",
"43 370 LINE",
"43 46 LINE"
);
},
{
closed = 1;
nodes = (
"64 343 LINE",
"64 370 LINE",
"43 370 LINE",
"43 343 LINE"
);
},
{
closed = 1;
nodes = (
"64 46 LINE",
"64 73 LINE",
"43 73 LINE",
"43 46 LINE"
);
},
{
closed = 1;
nodes = (
"64 46 LINE",
"64 370 LINE",
"59 370 LINE",
"59 46 LINE"
);
},
{
closed = 1;
nodes = (
"75 46 LINE",
"75 370 LINE",
"70 370 LINE",
"70 46 LINE"
);
},
{
closed = 1;
nodes = (
"91 343 LINE",
"91 370 LINE",
"70 370 LINE",
"70 343 LINE"
);
},
{
closed = 1;
nodes = (
"91 46 LINE",
"91 370 LINE",
"86 370 LINE",
"86 46 LINE"
);
},
{
closed = 1;
nodes = (
"91 206 LINE",
"91 233 LINE",
"70 233 LINE",
"70 206 LINE"
);
},
{
closed = 1;
nodes = (
"102 46 LINE",
"102 370 LINE",
"97 370 LINE",
"97 46 LINE"
);
},
{
closed = 1;
nodes = (
"118 206 LINE",
"118 233 LINE",
"97 233 LINE",
"97 206 LINE"
);
},
{
closed = 1;
nodes = (
"118 46 LINE",
"118 221 LINE",
"113 221 LINE",
"113 46 LINE"
);
},
{
closed = 1;
nodes = (
"113 221 LINE",
"118 370 LINE",
"113 370 LINE",
"108 221 LINE"
);
}
);
width = 136;
},
{
guideLines = (
{
position = "{113, 183}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"130 471 LINE",
"130 600 LINE",
"6 600 LINE",
"6 471 LINE"
);
},
{
closed = 1;
nodes = (
"21 183 LINE",
"21 370 LINE",
"16 370 LINE",
"16 183 LINE"
);
},
{
closed = 1;
nodes = (
"37 343 LINE",
"37 370 LINE",
"16 370 LINE",
"16 343 LINE"
);
},
{
closed = 1;
nodes = (
"49 417 LINE",
"49 471 LINE",
"23 471 LINE",
"23 417 LINE"
);
},
{
closed = 1;
nodes = (
"81 417 LINE",
"81 471 LINE",
"55 471 LINE",
"55 417 LINE"
);
},
{
closed = 1;
nodes = (
"114 417 LINE",
"114 471 LINE",
"87 471 LINE",
"87 417 LINE"
);
},
{
closed = 1;
nodes = (
"25 562 LINE",
"51 562 LINE",
"51 508 LINE",
"25 508 LINE"
);
},
{
closed = 1;
nodes = (
"85 562 LINE",
"111 562 LINE",
"111 508 LINE",
"85 508 LINE"
);
},
{
closed = 1;
nodes = (
"37 267 LINE",
"37 294 LINE",
"16 294 LINE",
"16 267 LINE"
);
},
{
closed = 1;
nodes = (
"48 183 LINE",
"48 370 LINE",
"43 370 LINE",
"43 183 LINE"
);
},
{
closed = 1;
nodes = (
"64 343 LINE",
"64 370 LINE",
"43 370 LINE",
"43 343 LINE"
);
},
{
closed = 1;
nodes = (
"64 183 LINE",
"64 210 LINE",
"43 210 LINE",
"43 183 LINE"
);
},
{
closed = 1;
nodes = (
"64 183 LINE",
"64 370 LINE",
"59 370 LINE",
"59 183 LINE"
);
},
{
closed = 1;
nodes = (
"75 183 LINE",
"75 370 LINE",
"70 370 LINE",
"70 183 LINE"
);
},
{
closed = 1;
nodes = (
"91 343 LINE",
"91 370 LINE",
"70 370 LINE",
"70 343 LINE"
);
},
{
closed = 1;
nodes = (
"91 183 LINE",
"91 370 LINE",
"86 370 LINE",
"86 183 LINE"
);
},
{
closed = 1;
nodes = (
"91 267 LINE",
"91 294 LINE",
"70 294 LINE",
"70 267 LINE"
);
},
{
closed = 1;
nodes = (
"102 183 LINE",
"102 370 LINE",
"97 370 LINE",
"97 183 LINE"
);
},
{
closed = 1;
nodes = (
"118 267 LINE",
"118 294 LINE",
"97 294 LINE",
"97 267 LINE"
);
},
{
closed = 1;
nodes = (
"118 183 LINE",
"118 282 LINE",
"113 282 LINE",
"113 183 LINE"
);
},
{
closed = 1;
nodes = (
"113 282 LINE",
"118 370 LINE",
"113 370 LINE",
"108 282 LINE"
);
}
);
width = 136;
}
);
note = .notdef;
},
{
glyphname = Euro;
lastChange = "2020-09-12 12:11:08 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 497 LINE",
"178 730 LINE",
"6 730 LINE",
"6 0 LINE",
"178 0 LINE",
"178 311 LINE",
"98 311 LINE",
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 497 LINE"
);
},
{
closed = 1;
nodes = (
"15 410 LINE",
"178 410 LINE",
"178 485 LINE",
"15 485 LINE"
);
},
{
closed = 1;
nodes = (
"15 323 LINE",
"178 323 LINE",
"178 398 LINE",
"15 398 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
10 21 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
19 21 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
30 2 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 6 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 399 LINE",
"42 690 LINE",
"6 690 LINE",
"6 0 LINE",
"42 0 LINE",
"42 341 LINE",
"30 341 LINE",
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 399 LINE"
);
},
{
closed = 1;
nodes = (
"13 376 LINE",
"42 376 LINE",
"42 387 LINE",
"13 387 LINE"
);
},
{
closed = 1;
nodes = (
"13 353 LINE",
"42 353 LINE",
"42 364 LINE",
"13 364 LINE"
);
}
);
width = 48;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = cent;
lastChange = "2020-09-12 12:11:11 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"138 45 LINE",
"177 90 LINE",
"177 333 LINE",
"98 333 LINE",
"98 120 LINE",
"86 120 LINE",
"86 570 LINE",
"98 570 LINE",
"98 345 LINE",
"177 345 LINE",
"177 600 LINE",
"138 645 LINE",
"45 645 LINE",
"6 600 LINE",
"6 90 LINE",
"45 45 LINE"
);
},
{
closed = 1;
nodes = (
"132 -32 LINE",
"132 52 LINE",
"52 52 LINE",
"52 -32 LINE"
);
},
{
closed = 1;
nodes = (
"132 632 LINE",
"132 716 LINE",
"52 716 LINE",
"52 632 LINE"
);
}
);
width = 183;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 7 LINE",
"42 15 LINE",
"42 313 LINE",
"30 313 LINE",
"30 18 LINE",
"18 18 LINE",
"18 649 LINE",
"30 649 LINE",
"30 325 LINE",
"42 325 LINE",
"42 652 LINE",
"34 660 LINE",
"14 660 LINE",
"6 652 LINE",
"6 15 LINE",
"14 7 LINE"
);
},
{
closed = 1;
nodes = (
"30 -23 LINE",
"30 7 LINE",
"18 7 LINE",
"18 -23 LINE"
);
},
{
closed = 1;
nodes = (
"30 660 LINE",
"30 690 LINE",
"18 690 LINE",
"18 660 LINE"
);
}
);
width = 48;
}
);
unicode = 00A2;
},
{
glyphname = currency;
lastChange = "2020-06-26 10:35:58 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"12 310 LINE",
"12 270 LINE",
"51 225 LINE",
"58 225 LINE",
"58 213 LINE",
"138 213 LINE",
"138 225 LINE",
"145 225 LINE",
"184 270 LINE",
"184 310 LINE",
"190 310 LINE",
"190 390 LINE",
"184 390 LINE",
"184 422 LINE",
"144 467 LINE",
"138 467 LINE",
"138 479 LINE",
"58 479 LINE",
"58 467 LINE",
"51 467 LINE",
"12 422 LINE",
"12 390 LINE",
"6 390 LINE",
"6 310 LINE"
);
},
{
closed = 1;
nodes = (
"92 392 LINE",
"104 392 LINE",
"104 300 LINE",
"92 300 LINE"
);
}
);
width = 196;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 344 LINE",
"6 240 LINE",
"14 232 LINE",
"18 232 LINE",
"18 213 LINE",
"30 213 LINE",
"30 232 LINE",
"34 232 LINE",
"43 240 LINE",
"43 344 LINE",
"46 344 LINE",
"46 356 LINE",
"43 356 LINE",
"43 457 LINE",
"34 465 LINE",
"30 465 LINE",
"30 484 LINE",
"18 484 LINE",
"18 465 LINE",
"14 465 LINE",
"6 457 LINE",
"6 356 LINE",
"3 356 LINE",
"3 344 LINE"
);
},
{
closed = 1;
nodes = (
"18 454 LINE",
"30 454 LINE",
"30 243 LINE",
"18 243 LINE"
);
}
);
width = 49;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2020-10-05 08:55:57 +0000";
layers = (
{
components = (
{
name = S;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"52 690 LINE",
"132 690 LINE",
"132 774 LINE",
"52 774 LINE"
);
},
{
closed = 1;
nodes = (
"52 -32 LINE",
"132 -32 LINE",
"132 52 LINE",
"52 52 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
240 11 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
240 1 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 184;
},
{
components = (
{
name = S;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"17 689 LINE",
"29 689 LINE",
"29 713 LINE",
"17 713 LINE"
);
},
{
closed = 1;
nodes = (
"17 -23 LINE",
"29 -23 LINE",
"29 1 LINE",
"17 1 LINE"
);
}
);
width = 46;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = sterling;
lastChange = "2020-09-12 12:11:47 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 0 LINE",
"178 75 LINE",
"86 75 LINE",
"86 87 LINE",
"178 87 LINE",
"178 162 LINE",
"86 162 LINE",
"86 655 LINE",
"98 655 LINE",
"98 174 LINE",
"178 174 LINE",
"178 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 0 LINE",
"42 11 LINE",
"18 11 LINE",
"18 23 LINE",
"42 23 LINE",
"42 34 LINE",
"18 34 LINE",
"18 679 LINE",
"30 679 LINE",
"30 46 LINE",
"42 46 LINE",
"42 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
}
);
width = 48;
}
);
unicode = 00A3;
},
{
glyphname = yen;
lastChange = "2020-09-12 12:11:50 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"99 162 LINE",
"87 162 LINE",
"87 271 LINE",
"7 271 LINE",
"7 132 LINE",
"47 87 LINE",
"99 87 LINE",
"99 75 LINE",
"6 75 LINE",
"6 0 LINE",
"140 0 LINE",
"179 45 LINE",
"179 730 LINE",
"99 730 LINE"
);
},
{
closed = 1;
nodes = (
"7 370 LINE",
"179 370 LINE",
"179 445 LINE",
"7 445 LINE"
);
},
{
closed = 1;
nodes = (
"7 283 LINE",
"179 283 LINE",
"179 358 LINE",
"7 358 LINE"
);
},
{
closed = 1;
nodes = (
"7 457 LINE",
"87 457 LINE",
"87 730 LINE",
"7 730 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 34 LINE",
"18 34 LINE",
"18 335 LINE",
"6 335 LINE",
"6 31 LINE",
"14 23 LINE",
"30 23 LINE",
"30 11 LINE",
"6 11 LINE",
"6 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 690 LINE",
"30 690 LINE"
);
},
{
closed = 1;
nodes = (
"6 370 LINE",
"42 370 LINE",
"42 381 LINE",
"6 381 LINE"
);
},
{
closed = 1;
nodes = (
"6 347 LINE",
"42 347 LINE",
"42 358 LINE",
"6 358 LINE"
);
},
{
closed = 1;
nodes = (
"6 393 LINE",
"18 393 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 48;
}
);
unicode = 00A5;
},
{
glyphname = plus;
lastChange = "2020-09-25 14:01:59 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"129 279 LINE",
"129 449 LINE",
"59 449 LINE",
"59 279 LINE"
);
},
{
closed = 1;
nodes = (
"182 329 LINE",
"182 399 LINE",
"6 399 LINE",
"6 329 LINE"
);
}
);
width = 188;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"27 320 LINE",
"27 350 LINE",
"15 350 LINE",
"15 320 LINE"
);
},
{
closed = 1;
nodes = (
"37 329 LINE",
"37 340 LINE",
"5 340 LINE",
"5 329 LINE"
);
}
);
width = 42;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2020-09-25 14:02:11 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"182 329 LINE",
"182 399 LINE",
"6 399 LINE",
"6 329 LINE"
);
}
);
width = 188;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"38 340 LINE",
"6 340 LINE",
"6 329 LINE",
"38 329 LINE"
);
}
);
width = 44;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2020-09-25 14:03:59 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 329 LINE",
"58 449 LINE",
"8 399 LINE",
"128 279 LINE"
);
},
{
closed = 1;
nodes = (
"180 401 LINE",
"130 451 LINE",
"6 327 LINE",
"56 277 LINE"
);
}
);
width = 186;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"36 327 LINE",
"14 350 LINE",
"6 342 LINE",
"28 319 LINE"
);
},
{
closed = 1;
nodes = (
"37 342 LINE",
"29 350 LINE",
"6 328 LINE",
"14 320 LINE"
);
}
);
width = 43;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2020-09-25 14:02:27 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"182 329 LINE",
"182 399 LINE",
"6 399 LINE",
"6 329 LINE"
);
},
{
closed = 1;
nodes = (
"112 251 OFFCURVE",
"127 266 OFFCURVE",
"127 284 CURVE SMOOTH",
"127 302 OFFCURVE",
"112 317 OFFCURVE",
"94 317 CURVE SMOOTH",
"76 317 OFFCURVE",
"61 302 OFFCURVE",
"61 284 CURVE SMOOTH",
"61 266 OFFCURVE",
"76 251 OFFCURVE",
"94 251 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"112 411 OFFCURVE",
"127 426 OFFCURVE",
"127 444 CURVE SMOOTH",
"127 462 OFFCURVE",
"112 477 OFFCURVE",
"94 477 CURVE SMOOTH",
"76 477 OFFCURVE",
"61 462 OFFCURVE",
"61 444 CURVE SMOOTH",
"61 426 OFFCURVE",
"76 411 OFFCURVE",
"94 411 CURVE SMOOTH"
);
}
);
width = 188;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"38 328 LINE",
"38 340 LINE",
"6 340 LINE",
"6 328 LINE"
);
},
{
closed = 1;
nodes = (
"27 299 OFFCURVE",
"31 303 OFFCURVE",
"31 308 CURVE SMOOTH",
"31 312 OFFCURVE",
"27 316 OFFCURVE",
"22 316 CURVE SMOOTH",
"17 316 OFFCURVE",
"14 312 OFFCURVE",
"14 308 CURVE SMOOTH",
"14 303 OFFCURVE",
"17 299 OFFCURVE",
"22 299 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"27 352 OFFCURVE",
"31 356 OFFCURVE",
"31 361 CURVE SMOOTH",
"31 365 OFFCURVE",
"27 369 OFFCURVE",
"22 369 CURVE SMOOTH",
"17 369 OFFCURVE",
"14 365 OFFCURVE",
"14 361 CURVE SMOOTH",
"14 356 OFFCURVE",
"17 352 OFFCURVE",
"22 352 CURVE SMOOTH"
);
}
);
width = 44;
}
);
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2020-09-25 14:03:16 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"182 370 LINE",
"182 440 LINE",
"6 440 LINE",
"6 370 LINE"
);
},
{
closed = 1;
nodes = (
"182 288 LINE",
"182 358 LINE",
"6 358 LINE",
"6 288 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 12 1 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
8 8 5 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 8 0 14 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 188;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"38 337 LINE",
"38 348 LINE",
"6 348 LINE",
"6 337 LINE"
);
},
{
closed = 1;
nodes = (
"38 320 LINE",
"38 331 LINE",
"6 331 LINE",
"6 320 LINE"
);
}
);
width = 44;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2020-09-25 14:02:49 +0000";
layers = (
{
components = (
{
name = equal;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"96 466 LINE",
"24 263 LINE",
"93 263 LINE",
"165 466 LINE"
);
}
);
width = 188;
},
{
components = (
{
name = equal;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"26 354 LINE",
"6 315 LINE",
"18 315 LINE",
"38 354 LINE"
);
}
);
width = 44;
}
);
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2020-09-25 14:03:38 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 442 LINE",
"6 372 LINE",
"176 372 LINE",
"176 442 LINE"
);
},
{
closed = 1;
nodes = (
"6 360 LINE",
"6 290 LINE",
"176 290 LINE",
"176 360 LINE"
);
},
{
closed = 1;
nodes = (
"111 326 LINE",
"176 326 LINE",
"176 403 LINE",
"111 403 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 182;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 358 LINE",
"6 346 LINE",
"37 346 LINE",
"37 358 LINE"
);
},
{
closed = 1;
nodes = (
"6 334 LINE",
"6 322 LINE",
"37 322 LINE",
"37 334 LINE"
);
},
{
closed = 1;
nodes = (
"25 331 LINE",
"37 331 LINE",
"37 349 LINE",
"25 349 LINE"
);
}
);
width = 43;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2020-09-25 14:03:41 +0000";
layers = (
{
components = (
{
name = greater;
transform = "{-1, 0, 0, 1, 182, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 17 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 182;
},
{
components = (
{
name = greater;
transform = "{-1, 0, 0, 1, 43, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 43;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2020-09-25 14:08:29 +0000";
layers = (
{
components = (
{
name = greater;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"176 278 LINE",
"6 278 LINE",
"6 208 LINE",
"176 208 LINE"
);
}
);
width = 182;
},
{
components = (
{
name = greater;
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"37 316 LINE",
"6 316 LINE",
"6 304 LINE",
"37 304 LINE"
);
}
);
width = 43;
}
);
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2020-10-05 08:56:50 +0000";
layers = (
{
components = (
{
name = greaterequal;
transform = "{-1, 0, 0, 1, 182, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 182;
},
{
components = (
{
name = greaterequal;
transform = "{-1, 0, 0, 1, 43, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 43;
}
);
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2020-09-25 14:09:39 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"176 399 LINE",
"6 399 LINE",
"6 329 LINE",
"176 329 LINE"
);
},
{
closed = 1;
nodes = (
"51 291 LINE",
"132 291 LINE",
"132 438 LINE",
"51 438 LINE"
);
},
{
closed = 1;
nodes = (
"176 278 LINE",
"6 278 LINE",
"6 208 LINE",
"176 208 LINE"
);
}
);
width = 182;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"56 340 LINE",
"6 340 LINE",
"6 329 LINE",
"56 329 LINE"
);
},
{
closed = 1;
nodes = (
"25 320 LINE",
"37 320 LINE",
"37 350 LINE",
"25 350 LINE"
);
},
{
closed = 1;
nodes = (
"56 314 LINE",
"6 314 LINE",
"6 303 LINE",
"56 303 LINE"
);
}
);
width = 62;
}
);
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2020-09-25 14:09:51 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"176 440 LINE",
"107 440 LINE",
"75 418 LINE",
"6 418 LINE",
"6 348 LINE",
"75 348 LINE",
"107 370 LINE",
"176 370 LINE"
);
},
{
closed = 1;
nodes = (
"176 358 LINE",
"107 358 LINE",
"75 336 LINE",
"6 336 LINE",
"6 266 LINE",
"75 266 LINE",
"107 288 LINE",
"176 288 LINE"
);
}
);
width = 182;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"36 353 LINE",
"28 353 LINE",
"14 348 LINE",
"6 348 LINE",
"6 336 LINE",
"14 336 LINE",
"28 341 LINE",
"36 341 LINE"
);
},
{
closed = 1;
nodes = (
"36 335 LINE",
"28 335 LINE",
"14 330 LINE",
"6 330 LINE",
"6 318 LINE",
"14 318 LINE",
"28 323 LINE",
"36 323 LINE"
);
}
);
width = 42;
}
);
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2020-09-25 14:09:59 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"176 403 LINE",
"107 403 LINE",
"75 381 LINE",
"6 381 LINE",
"6 311 LINE",
"75 311 LINE",
"107 333 LINE",
"176 333 LINE"
);
}
);
width = 182;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"36 353 LINE",
"28 353 LINE",
"14 348 LINE",
"6 348 LINE",
"6 336 LINE",
"14 336 LINE",
"28 341 LINE",
"36 341 LINE"
);
}
);
width = 42;
}
);
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2020-06-26 11:50:54 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"147 399 LINE",
"6 399 LINE",
"6 329 LINE",
"147 329 LINE"
);
},
{
closed = 1;
nodes = (
"102 289 LINE",
"147 289 LINE",
"147 384 LINE",
"102 384 LINE"
);
}
);
width = 153;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"38 399 LINE",
"6 399 LINE",
"6 387 LINE",
"38 387 LINE"
);
},
{
closed = 1;
nodes = (
"26 370 LINE",
"38 370 LINE",
"38 399 LINE",
"26 399 LINE"
);
}
);
width = 44;
}
);
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2020-06-26 11:57:30 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"88 690 LINE",
"88 549 LINE",
"158 549 LINE",
"158 690 LINE"
);
},
{
closed = 1;
nodes = (
"6 690 LINE",
"6 549 LINE",
"76 549 LINE",
"76 690 LINE"
);
},
{
closed = 1;
nodes = (
"119 690 LINE",
"42 690 LINE",
"42 625 LINE",
"119 625 LINE"
);
}
);
width = 164;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 690 LINE",
"30 660 LINE",
"42 660 LINE",
"42 690 LINE"
);
},
{
closed = 1;
nodes = (
"6 690 LINE",
"6 660 LINE",
"18 660 LINE",
"18 690 LINE"
);
},
{
closed = 1;
nodes = (
"42 690 LINE",
"6 690 LINE",
"6 678 LINE",
"42 678 LINE"
);
}
);
width = 48;
}
);
unicode = 005E;
},
{
glyphname = emptyset;
lastChange = "2020-09-12 12:13:39 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"139 730 LINE",
"45 730 LINE",
"6 730 LINE",
"6 45 LINE",
"45 0 LINE",
"140 0 LINE",
"179 0 LINE",
"179 685 LINE"
);
},
{
closed = 1;
nodes = (
"99 655 LINE",
"99 75 LINE",
"86 75 LINE",
"86 655 LINE"
);
},
{
closed = 1;
nodes = (
"9 307 LINE",
"169 307 LINE",
"169 382 LINE",
"9 382 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"35 690 LINE",
"19 690 LINE",
"6 690 LINE",
"6 8 LINE",
"14 0 LINE",
"22 0 LINE",
"43 0 LINE",
"43 682 LINE"
);
},
{
closed = 1;
nodes = (
"31 679 LINE",
"31 11 LINE",
"18 11 LINE",
"18 679 LINE"
);
},
{
closed = 1;
nodes = (
"9 339 LINE",
"33 339 LINE",
"33 350 LINE",
"9 350 LINE"
);
}
);
width = 49;
}
);
unicode = 2205;
},
{
glyphname = infinity;
lastChange = "2020-06-26 12:10:59 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"295 318 LINE",
"295 410 LINE",
"295 411 LINE",
"250 450 LINE",
"157 450 LINE",
"157 410 LINE",
"145 410 LINE",
"145 450 LINE",
"51 450 LINE",
"6 411 LINE",
"6 410 LINE",
"6 318 LINE",
"6 317 LINE",
"51 278 LINE",
"145 278 LINE",
"145 318 LINE",
"157 318 LINE",
"157 278 LINE",
"250 278 LINE",
"295 317 LINE"
);
},
{
closed = 1;
nodes = (
"81 370 LINE",
"113 370 LINE",
"113 358 LINE",
"81 358 LINE"
);
},
{
closed = 1;
nodes = (
"188 370 LINE",
"220 370 LINE",
"220 358 LINE",
"188 358 LINE"
);
}
);
width = 301;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"66 336 LINE",
"66 356 LINE",
"66 356 LINE",
"58 364 LINE",
"41 364 LINE",
"41 358 LINE",
"31 358 LINE",
"31 364 LINE",
"14 364 LINE",
"6 356 LINE",
"6 356 LINE",
"6 336 LINE",
"6 336 LINE",
"14 328 LINE",
"31 328 LINE",
"31 334 LINE",
"41 334 LINE",
"41 328 LINE",
"58 328 LINE",
"66 336 LINE"
);
},
{
closed = 1;
nodes = (
"18 352 LINE",
"30 352 LINE",
"30 340 LINE",
"18 340 LINE"
);
},
{
closed = 1;
nodes = (
"42 352 LINE",
"54 352 LINE",
"54 340 LINE",
"42 340 LINE"
);
}
);
width = 72;
}
);
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2020-09-12 12:13:46 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"98 642 LINE",
"98 1 LINE",
"86 1 LINE",
"86 655 LINE",
"178 655 LINE",
"178 730 LINE",
"6 730 LINE",
"6 1 LINE",
"98 1 LINE",
"98 -12 LINE",
"6 -12 LINE",
"6 -87 LINE",
"178 -87 LINE",
"178 642 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 666 LINE",
"30 1 LINE",
"18 1 LINE",
"18 678 LINE",
"42 678 LINE",
"42 690 LINE",
"6 690 LINE",
"6 1 LINE",
"30 1 LINE",
"30 -12 LINE",
"6 -12 LINE",
"6 -23 LINE",
"42 -23 LINE",
"42 666 LINE"
);
}
);
width = 48;
}
);
unicode = 222B;
},
{
glyphname = product;
lastChange = "2020-09-12 12:13:52 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 -87 LINE",
"178 730 LINE",
"6 730 LINE",
"6 -87 LINE",
"98 -87 LINE",
"99 -87 LINE"
);
},
{
closed = 1;
nodes = (
"86 641 LINE",
"98 641 LINE",
"98 -87 LINE",
"86 -87 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 -23 LINE",
"42 690 LINE",
"6 690 LINE",
"6 -23 LINE",
"30 -23 LINE",
"31 -23 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 -23 LINE",
"18 -23 LINE"
);
}
);
width = 48;
}
);
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2020-09-12 12:13:56 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 234 LINE",
"6 -87 LINE",
"178 -87 LINE",
"178 205 LINE",
"98 205 LINE",
"98 -12 LINE",
"86 -12 LINE",
"86 234 LINE"
);
},
{
closed = 1;
nodes = (
"6 304 LINE",
"178 304 LINE",
"178 379 LINE",
"6 379 LINE"
);
},
{
closed = 1;
nodes = (
"86 304 LINE",
"86 655 LINE",
"98 655 LINE",
"98 391 LINE",
"178 391 LINE",
"178 730 LINE",
"138 730 LINE",
"6 730 LINE",
"6 304 LINE"
);
},
{
closed = 1;
nodes = (
"6 217 LINE",
"178 217 LINE",
"178 292 LINE",
"6 292 LINE"
);
},
{
closed = 1;
nodes = (
"98 217 LINE",
"178 217 LINE",
"178 379 LINE",
"98 379 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 323 LINE",
"6 -23 LINE",
"42 -23 LINE",
"42 306 LINE",
"30 306 LINE",
"30 -12 LINE",
"18 -12 LINE",
"18 323 LINE"
);
},
{
closed = 1;
nodes = (
"6 341 LINE",
"42 341 LINE",
"42 352 LINE",
"6 352 LINE"
);
},
{
closed = 1;
nodes = (
"18 341 LINE",
"18 679 LINE",
"30 679 LINE",
"30 364 LINE",
"42 364 LINE",
"42 690 LINE",
"37 690 LINE",
"6 690 LINE",
"6 341 LINE"
);
},
{
closed = 1;
nodes = (
"6 318 LINE",
"42 318 LINE",
"42 329 LINE",
"6 329 LINE"
);
},
{
closed = 1;
nodes = (
"30 318 LINE",
"42 318 LINE",
"42 352 LINE",
"30 352 LINE"
);
}
);
width = 48;
}
);
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2020-09-12 12:13:58 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -42 LINE",
"46 -87 LINE",
"178 -87 LINE",
"178 643 LINE",
"98 643 LINE",
"98 -12 LINE",
"86 -12 LINE",
"86 655 LINE",
"178 655 LINE",
"178 730 LINE",
"6 730 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -15 LINE",
"14 -23 LINE",
"42 -23 LINE",
"42 667 LINE",
"30 667 LINE",
"30 -12 LINE",
"18 -12 LINE",
"18 679 LINE",
"42 679 LINE",
"42 690 LINE",
"6 690 LINE"
);
}
);
width = 48;
}
);
unicode = 221A;
},
{
glyphname = partialdiff;
lastChange = "2020-09-12 12:14:01 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 45 LINE",
"45 0 LINE",
"138 0 LINE",
"178 45 LINE",
"178 685 LINE",
"139 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 597 LINE",
"86 597 LINE",
"86 655 LINE",
"98 655 LINE",
"98 585 LINE",
"45 585 LINE",
"6 585 LINE"
);
},
{
closed = 1;
nodes = (
"86 75 LINE",
"86 470 LINE",
"98 470 LINE",
"98 75 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 8 LINE",
"14 0 LINE",
"34 0 LINE",
"42 8 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 557 LINE",
"18 557 LINE",
"18 679 LINE",
"30 679 LINE",
"30 545 LINE",
"18 545 LINE",
"6 545 LINE"
);
},
{
closed = 1;
nodes = (
"18 11 LINE",
"18 534 LINE",
"30 534 LINE",
"30 11 LINE"
);
}
);
width = 48;
}
);
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2020-09-12 12:14:24 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"190 730 LINE",
"190 0 LINE",
"266 0 LINE",
"266 730 LINE"
);
},
{
closed = 1;
nodes = (
"278 322 LINE",
"278 45 LINE",
"317 0 LINE",
"411 0 LINE",
"450 45 LINE",
"450 322 LINE",
"411 367 LINE",
"318 367 LINE"
);
},
{
closed = 1;
nodes = (
"370 292 LINE",
"370 75 LINE",
"358 75 LINE",
"358 292 LINE"
);
},
{
closed = 1;
nodes = (
"6 685 LINE",
"6 408 LINE",
"45 363 LINE",
"139 363 LINE",
"178 408 LINE",
"178 685 LINE",
"139 730 LINE",
"46 730 LINE"
);
},
{
closed = 1;
nodes = (
"98 655 LINE",
"98 438 LINE",
"86 438 LINE",
"86 655 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 1 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 1 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 2 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 14 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
17 26 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
13 8 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 456;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"54 690 LINE",
"54 0 LINE",
"66 0 LINE",
"66 690 LINE"
);
},
{
closed = 1;
nodes = (
"78 319 LINE",
"78 8 LINE",
"86 0 LINE",
"106 0 LINE",
"114 8 LINE",
"114 319 LINE",
"106 327 LINE",
"86 327 LINE"
);
},
{
closed = 1;
nodes = (
"102 316 LINE",
"102 11 LINE",
"90 11 LINE",
"90 316 LINE"
);
},
{
closed = 1;
nodes = (
"6 676 LINE",
"6 365 LINE",
"14 357 LINE",
"34 357 LINE",
"42 365 LINE",
"42 676 LINE",
"34 684 LINE",
"14 684 LINE"
);
},
{
closed = 1;
nodes = (
"30 673 LINE",
"30 368 LINE",
"18 368 LINE",
"18 673 LINE"
);
}
);
width = 120;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2020-09-12 12:16:01 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"190 730 LINE",
"190 0 LINE",
"266 0 LINE",
"266 730 LINE"
);
},
{
closed = 1;
nodes = (
"278 322 LINE",
"278 45 LINE",
"317 0 LINE",
"411 0 LINE",
"450 45 LINE",
"450 322 LINE",
"411 367 LINE",
"318 367 LINE"
);
},
{
closed = 1;
nodes = (
"370 292 LINE",
"370 75 LINE",
"358 75 LINE",
"358 292 LINE"
);
},
{
closed = 1;
nodes = (
"6 685 LINE",
"6 408 LINE",
"45 363 LINE",
"139 363 LINE",
"178 408 LINE",
"178 685 LINE",
"139 730 LINE",
"45 730 LINE"
);
},
{
closed = 1;
nodes = (
"98 655 LINE",
"98 438 LINE",
"86 438 LINE",
"86 655 LINE"
);
},
{
closed = 1;
nodes = (
"462 322 LINE",
"462 45 LINE",
"501 0 LINE",
"595 0 LINE",
"634 45 LINE",
"634 322 LINE",
"595 367 LINE",
"502 367 LINE"
);
},
{
closed = 1;
nodes = (
"554 292 LINE",
"554 75 LINE",
"542 75 LINE",
"542 292 LINE"
);
}
);
width = 640;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"54 690 LINE",
"54 0 LINE",
"66 0 LINE",
"66 690 LINE"
);
},
{
closed = 1;
nodes = (
"78 319 LINE",
"78 8 LINE",
"86 0 LINE",
"106 0 LINE",
"114 8 LINE",
"114 319 LINE",
"106 327 LINE",
"86 327 LINE"
);
},
{
closed = 1;
nodes = (
"102 316 LINE",
"102 11 LINE",
"90 11 LINE",
"90 316 LINE"
);
},
{
closed = 1;
nodes = (
"6 676 LINE",
"6 365 LINE",
"14 357 LINE",
"34 357 LINE",
"42 365 LINE",
"42 676 LINE",
"34 684 LINE",
"14 684 LINE"
);
},
{
closed = 1;
nodes = (
"30 673 LINE",
"30 368 LINE",
"18 368 LINE",
"18 673 LINE"
);
},
{
closed = 1;
nodes = (
"126 319 LINE",
"126 8 LINE",
"134 0 LINE",
"154 0 LINE",
"162 8 LINE",
"162 319 LINE",
"154 327 LINE",
"134 327 LINE"
);
},
{
closed = 1;
nodes = (
"150 316 LINE",
"150 11 LINE",
"138 11 LINE",
"138 316 LINE"
);
}
);
width = 168;
}
);
unicode = 2030;
},
{
glyphname = upArrow;
lastChange = "2020-09-21 17:11:36 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"66 218 LINE",
"66 240 LINE",
"78 240 LINE",
"78 87 LINE",
"158 87 LINE",
"158 240 LINE",
"170 240 LINE",
"170 218 LINE",
"230 218 LINE",
"119 442 LINE",
"118 442 LINE",
"6 218 LINE"
);
}
);
width = 236;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"18 289 LINE",
"18 315 LINE",
"30 315 LINE",
"30 87 LINE",
"42 87 LINE",
"42 315 LINE",
"54 315 LINE",
"54 289 LINE",
"66 289 LINE",
"36 442 LINE",
"36 442 LINE",
"6 289 LINE"
);
}
);
width = 72;
}
);
unicode = 2191;
},
{
glyphname = northEastArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -111, 177}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 292;
},
{
components = (
{
name = upArrow;
transform = "{0.70711, -0.70711, 0.70711, 0.70711, -77, 177}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 267;
}
);
unicode = 2197;
},
{
glyphname = rightArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0, -1, 1, 0, -81, 449}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 367;
},
{
components = (
{
name = upArrow;
transform = "{0, -1, 1, 0, -81, 366}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 367;
}
);
unicode = 2192;
},
{
glyphname = southEastArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-0.70711, -0.70711, 0.70711, -0.70711, 56, 645}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 291;
},
{
components = (
{
name = upArrow;
transform = "{-0.70711, -0.70711, 0.70711, -0.70711, -26, 645}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 267;
}
);
unicode = 2198;
},
{
glyphname = downArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 236, 661}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 236;
},
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 72, 661}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 2193;
},
{
glyphname = southWestArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-0.70711, 0.70711, -0.70711, -0.70711, 403, 481}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 292;
},
{
components = (
{
name = upArrow;
transform = "{-0.70711, 0.70711, -0.70711, -0.70711, 344, 481}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 267;
}
);
unicode = 2199;
},
{
glyphname = leftArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 448, 449}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 367;
},
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 448, 366}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 367;
}
);
unicode = 2190;
},
{
glyphname = northWestArrow;
lastChange = "2020-09-22 15:28:37 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0.70711, 0.70711, -0.70711, 0.70711, 235, -3}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 291;
},
{
components = (
{
name = upArrow;
transform = "{0.70711, 0.70711, -0.70711, 0.70711, 293, -3}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 267;
}
);
unicode = 2196;
},
{
glyphname = leftRightArrow;
lastChange = "2020-09-22 15:29:25 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 442, 437}";
},
{
name = upArrow;
transform = "{0, -1, 1, 0, 116, 437}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 558;
},
{
components = (
{
name = upArrow;
transform = "{0, -1, -1, 0, 448, 364}";
},
{
name = upArrow;
transform = "{0, -1, 1, 0, 2, 366}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 450;
}
);
unicode = 2194;
},
{
glyphname = upDownArrow;
lastChange = "2020-09-21 17:11:56 +0000";
layers = (
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 236, 375}";
},
{
name = upArrow;
transform = "{-1, 0, 0, 1, 236, 199}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 236;
},
{
components = (
{
name = upArrow;
transform = "{-1, 0, 0, -1, 72, 615}";
},
{
name = upArrow;
transform = "{-1, 0, 0, 1, 72, 142}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 2195;
},
{
glyphname = lozenge;
lastChange = "2020-09-12 12:12:44 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 174 LINE",
"45 174 LINE",
"140 174 LINE",
"179 219 LINE",
"179 645 LINE",
"140 645 LINE",
"46 645 LINE",
"6 600 LINE"
);
},
{
closed = 1;
nodes = (
"99 249 LINE",
"86 249 LINE",
"86 570 LINE",
"99 570 LINE"
);
}
);
width = 185;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 174 LINE",
"18 174 LINE",
"34 174 LINE",
"42 182 LINE",
"42 645 LINE",
"29 645 LINE",
"14 645 LINE",
"6 637 LINE"
);
},
{
closed = 1;
nodes = (
"30 185 LINE",
"18 185 LINE",
"18 634 LINE",
"30 634 LINE"
);
}
);
width = 48;
}
);
unicode = 25CA;
},
{
glyphname = at;
lastChange = "2020-09-12 12:12:41 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"140 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 45 LINE",
"46 0 LINE",
"180 0 LINE",
"180 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 466 LINE",
"56 466 LINE",
"16 420 LINE",
"16 237 LINE",
"55 192 LINE",
"100 192 LINE",
"100 87 LINE",
"180 87 LINE",
"180 685 LINE",
"141 730 LINE"
);
},
{
closed = 1;
nodes = (
"86 267 LINE",
"86 391 LINE",
"98 391 LINE",
"98 267 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 9 16 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 11 6 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 9 10 14 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 19 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 8 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 8 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"26 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 8 LINE",
"14 0 LINE",
"42 0 LINE",
"42 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 466 LINE",
"20 466 LINE",
"14 458 LINE",
"14 200 LINE",
"14 192 LINE",
"30 192 LINE",
"30 23 LINE",
"42 23 LINE",
"42 682 LINE",
"34 690 LINE"
);
},
{
closed = 1;
nodes = (
"18 202 LINE",
"18 455 LINE",
"30 455 LINE",
"30 202 LINE"
);
}
);
width = 48;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2020-09-21 13:43:35 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 412 LINE",
"178 730 LINE",
"45 730 LINE",
"6 685 LINE",
"6 0 LINE",
"178 0 LINE",
"178 313 LINE",
"98 313 LINE",
"98 75 LINE",
"86 75 LINE",
"86 655 LINE",
"98 655 LINE",
"98 412 LINE"
);
},
{
closed = 1;
nodes = (
"15 325 LINE",
"178 325 LINE",
"178 400 LINE",
"15 400 LINE"
);
},
{
closed = 1;
nodes = (
"178 -12 LINE",
"178 326 LINE",
"178 325 LINE",
"178 399 LINE",
"98 399 LINE",
"98 399 LINE",
"98 -42 LINE",
"137 -87 LINE",
"184 -87 LINE",
"184 -12 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"42 412 LINE",
"42 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE",
"42 0 LINE",
"42 313 LINE",
"30 313 LINE",
"30 11 LINE",
"18 11 LINE",
"18 679 LINE",
"30 679 LINE",
"30 412 LINE"
);
},
{
closed = 1;
nodes = (
"15 388 LINE",
"42 388 LINE",
"42 400 LINE",
"15 400 LINE"
);
},
{
closed = 1;
nodes = (
"42 -12 LINE",
"42 389 LINE",
"42 389 LINE",
"42 400 LINE",
"30 400 LINE",
"30 393 LINE",
"30 -15 LINE",
"38 -23 LINE",
"48 -23 LINE",
"48 -12 LINE"
);
}
);
width = 48;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2020-09-12 12:13:00 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 389 LINE",
"82 389 LINE",
"82 730 LINE",
"6 730 LINE"
);
},
{
closed = 1;
nodes = (
"95 0 LINE",
"171 0 LINE",
"171 730 LINE",
"95 730 LINE"
);
}
);
width = 177;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 389 LINE",
"18 389 LINE",
"18 690 LINE",
"6 690 LINE"
);
},
{
closed = 1;
nodes = (
"31 0 LINE",
"43 0 LINE",
"43 690 LINE",
"31 690 LINE"
);
}
);
width = 49;
}
);
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2020-09-12 12:13:04 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"178 -87 LINE",
"178 643 LINE",
"86 643 LINE",
"86 655 LINE",
"178 655 LINE",
"178 730 LINE",
"6 730 LINE",
"6 0 LINE",
"98 0 LINE",
"98 -12 LINE",
"6 -12 LINE",
"6 -87 LINE"
);
},
{
closed = 1;
nodes = (
"86 568 LINE",
"98 568 LINE",
"98 75 LINE",
"86 75 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"43 -23 LINE",
"43 667 LINE",
"19 667 LINE",
"19 679 LINE",
"43 679 LINE",
"43 690 LINE",
"6 690 LINE",
"6 0 LINE",
"31 0 LINE",
"31 -12 LINE",
"6 -12 LINE",
"6 -23 LINE"
);
},
{
closed = 1;
nodes = (
"19 656 LINE",
"31 656 LINE",
"31 11 LINE",
"19 11 LINE"
);
}
);
width = 49;
}
);
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2020-09-12 12:13:10 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"45 0 LINE",
"322 0 LINE",
"361 45 LINE",
"361 730 LINE",
"322 730 LINE",
"46 730 LINE",
"6 685 LINE"
);
},
{
closed = 1;
nodes = (
"281 75 LINE",
"86 75 LINE",
"86 655 LINE",
"281 655 LINE"
);
},
{
closed = 1;
nodes = (
"190 162 LINE",
"178 162 LINE",
"178 568 LINE",
"190 568 LINE",
"190 349 LINE",
"269 349 LINE",
"269 598 LINE",
"230 643 LINE",
"137 643 LINE",
"98 598 LINE",
"98 132 LINE",
"137 87 LINE",
"230 87 LINE",
"269 132 LINE",
"269 337 LINE",
"190 337 LINE"
);
}
);
width = 367;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 0 LINE",
"43 0 LINE",
"82 0 LINE",
"90 8 LINE",
"90 690 LINE",
"69 690 LINE",
"14 690 LINE",
"6 682 LINE"
);
},
{
closed = 1;
nodes = (
"78 11 LINE",
"18 11 LINE",
"18 679 LINE",
"78 679 LINE"
);
},
{
closed = 1;
nodes = (
"54 34 LINE",
"42 34 LINE",
"42 656 LINE",
"54 656 LINE",
"54 349 LINE",
"66 349 LINE",
"66 659 LINE",
"58 667 LINE",
"38 667 LINE",
"30 659 LINE",
"30 31 LINE",
"38 23 LINE",
"58 23 LINE",
"66 31 LINE",
"66 337 LINE",
"54 337 LINE"
);
}
);
width = 96;
}
);
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2020-09-12 12:13:14 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 0 LINE",
"323 0 LINE",
"362 45 LINE",
"362 730 LINE",
"323 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"282 655 LINE",
"282 75 LINE",
"86 75 LINE"
);
},
{
closed = 1;
nodes = (
"178 87 LINE",
"178 306 LINE",
"190 306 LINE",
"190 87 LINE",
"270 87 LINE",
"270 337 LINE",
"237 337 LINE",
"237 349 LINE",
"270 349 LINE",
"270 598 LINE",
"230 643 LINE",
"98 643 LINE",
"98 87 LINE"
);
},
{
closed = 1;
nodes = (
"178 568 LINE",
"190 568 LINE",
"190 381 LINE",
"178 381 LINE"
);
}
);
width = 368;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"43 0 LINE",
"82 0 LINE",
"90 8 LINE",
"90 690 LINE",
"69 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 0 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"78 679 LINE",
"78 11 LINE",
"18 11 LINE"
);
},
{
closed = 1;
nodes = (
"42 22 LINE",
"42 338 LINE",
"54 338 LINE",
"54 22 LINE",
"66 22 LINE",
"66 338 LINE",
"60 338 LINE",
"60 349 LINE",
"66 349 LINE",
"66 660 LINE",
"58 668 LINE",
"30 668 LINE",
"30 22 LINE"
);
},
{
closed = 1;
nodes = (
"42 657 LINE",
"54 657 LINE",
"54 349 LINE",
"42 349 LINE"
);
}
);
width = 96;
}
);
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2020-07-03 15:22:33 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = M;
transform = "{1, 0, 0, 1, 236, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 512;
},
{
components = (
{
name = T;
},
{
name = M;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 144;
}
);
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2020-09-12 12:13:18 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"138 389 LINE",
"178 434 LINE",
"178 685 LINE",
"138 730 LINE",
"46 730 LINE",
"6 685 LINE",
"6 434 LINE",
"46 389 LINE"
);
},
{
closed = 1;
nodes = (
"86 655 LINE",
"98 655 LINE",
"98 464 LINE",
"86 464 LINE"
);
}
);
width = 184;
},
{
associatedMasterId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
layerId = "6BA98D68-ED8F-4DAF-B5DE-FFEA0C5680EF";
name = "Apr 2 20, 16:24";
paths = (
{
closed = 1;
nodes = (
"6 690 LINE",
"6 645 LINE",
"6 434 LINE",
"45 389 LINE",
"139 389 LINE",
"178 389 LINE",
"178 645 LINE",
"138 690 LINE"
);
},
{
closed = 1;
nodes = (
"98 464 LINE",
"86 464 LINE",
"86 615 LINE",
"98 615 LINE"
);
}
);
width = 184;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"34 400 LINE",
"42 408 LINE",
"42 682 LINE",
"34 690 LINE",
"14 690 LINE",
"6 682 LINE",
"6 408 LINE",
"14 400 LINE"
);
},
{
closed = 1;
nodes = (
"18 679 LINE",
"30 679 LINE",
"30 411 LINE",
"18 411 LINE"
);
}
);
width = 48;
}
);
unicode = 00B0;
},
{
glyphname = bar;
lastChange = "2020-09-12 12:13:24 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -87 LINE",
"82 -87 LINE",
"82 730 LINE",
"6 730 LINE"
);
}
);
width = 88;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -23 LINE",
"18 -23 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 24;
}
);
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2020-09-12 12:13:21 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 -87 LINE",
"82 -87 LINE",
"82 295 LINE",
"6 295 LINE"
);
},
{
closed = 1;
nodes = (
"6 307 LINE",
"82 307 LINE",
"82 730 LINE",
"6 730 LINE"
);
}
);
width = 88;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -23 LINE",
"18 -23 LINE",
"18 295 LINE",
"6 295 LINE"
);
},
{
closed = 1;
nodes = (
"6 307 LINE",
"18 307 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 24;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2020-09-12 12:13:30 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 600 LINE",
"33 600 LINE",
"33 585 LINE",
"6 585 LINE",
"6 307 LINE",
"82 307 LINE",
"82 585 LINE",
"55 585 LINE",
"55 600 LINE",
"82 600 LINE",
"82 730 LINE",
"6 730 LINE"
);
}
);
width = 88;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 679 LINE",
"38 679 LINE",
"38 664 LINE",
"6 664 LINE",
"6 653 LINE",
"82 653 LINE",
"82 664 LINE",
"50 664 LINE",
"50 679 LINE",
"82 679 LINE",
"82 690 LINE",
"6 690 LINE"
);
}
);
width = 88;
}
);
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2020-09-12 12:13:27 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"82 307 LINE",
"82 397 LINE",
"55 397 LINE",
"55 412 LINE",
"82 412 LINE",
"82 585 LINE",
"55 585 LINE",
"55 600 LINE",
"82 600 LINE",
"82 730 LINE",
"6 730 LINE",
"6 600 LINE",
"33 600 LINE",
"33 585 LINE",
"6 585 LINE",
"6 412 LINE",
"33 412 LINE",
"33 397 LINE",
"6 397 LINE",
"6 307 LINE"
);
}
);
width = 88;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"82 627 LINE",
"82 638 LINE",
"50 638 LINE",
"50 653 LINE",
"82 653 LINE",
"82 664 LINE",
"50 664 LINE",
"50 679 LINE",
"82 679 LINE",
"82 690 LINE",
"6 690 LINE",
"6 679 LINE",
"38 679 LINE",
"38 664 LINE",
"6 664 LINE",
"6 653 LINE",
"38 653 LINE",
"38 638 LINE",
"6 638 LINE",
"6 627 LINE"
);
}
);
width = 88;
}
);
unicode = 2021;
},
{
color = 4;
glyphname = dieresiscomb;
lastChange = "2020-09-14 07:49:23 +0000";
layers = (
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 178;
},
{
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0308;
},
{
color = 4;
glyphname = dotaccentcomb;
lastChange = "2020-06-25 12:47:57 +0000";
layers = (
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 0, 90}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 89;
},
{
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 0, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
}
);
unicode = 0307;
},
{
color = 4;
glyphname = gravecomb;
lastChange = "2020-09-14 07:49:30 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 184, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 153;
},
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 47, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 47;
}
);
unicode = 0300;
},
{
color = 4;
glyphname = acutecomb;
lastChange = "2020-09-14 07:48:25 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, -1, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 186;
},
{
components = (
{
name = acute;
transform = "{1, 0, 0, 1, -1, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 46;
}
);
unicode = 0301;
},
{
color = 7;
glyphname = hungarumlautcomb;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 500;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 500;
}
);
unicode = 030B;
},
{
color = 4;
glyphname = circumflexcomb;
lastChange = "2020-09-14 07:49:16 +0000";
layers = (
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, -6, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 136;
},
{
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, 0, 92}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0302;
},
{
color = 7;
glyphname = caroncomb;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 500;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 500;
}
);
unicode = 030C;
},
{
color = 7;
glyphname = brevecomb;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 500;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 500;
}
);
unicode = 0306;
},
{
color = 4;
glyphname = ringcomb;
lastChange = "2020-09-14 07:49:36 +0000";
layers = (
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, -227, 130}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 105;
},
{
components = (
{
name = ring;
transform = "{1, 0, 0, 1, -2, 91}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 030A;
},
{
color = 4;
glyphname = tildecomb;
lastChange = "2020-09-14 07:49:43 +0000";
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -175, 129}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 126;
},
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, 0, 90}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 72;
}
);
unicode = 0303;
},
{
color = 7;
glyphname = macroncomb;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 500;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 500;
}
);
unicode = 0304;
},
{
color = 7;
glyphname = commaturnedabovecomb;
lastChange = "2020-10-04 18:06:15 +0000";
layers = (
{
components = (
{
name = commaaccentcomb;
transform = "{-1, 0, 0, -1, 24, 600}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 24;
},
{
components = (
{
name = commaaccentcomb;
transform = "{-1, 0, 0, -1, 66, 600}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 66;
}
);
unicode = 0312;
},
{
color = 7;
glyphname = commaaccentcomb;
lastChange = "2020-10-04 16:49:26 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 -90 LINE",
"12 -90 LINE",
"18 -67 LINE",
"18 -12 LINE",
"6 -12 LINE",
"6 -67 LINE",
"12 -67 LINE"
);
}
);
width = 24;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"13 -130 LINE",
"42 -130 LINE",
"60 -84 LINE",
"60 -12 LINE",
"6 -12 LINE",
"6 -84 LINE",
"31 -84 LINE"
);
}
);
width = 66;
}
);
unicode = 0326;
},
{
color = 4;
glyphname = cedillacomb;
lastChange = "2020-06-25 12:47:57 +0000";
layers = (
{
components = (
{
name = cedilla;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 92;
},
{
components = (
{
name = cedilla;
transform = "{1, 0, 0, 1, -17, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 48;
}
);
unicode = 0327;
},
{
color = 7;
glyphname = ogonekcomb;
lastChange = "2020-10-04 16:01:41 +0000";
layers = (
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 500;
},
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 500;
}
);
unicode = 0328;
},
{
color = 4;
glyphname = acute;
lastChange = "2020-10-04 18:50:09 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 2}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"109 612 LINE",
"163 730 LINE",
"83 730 LINE",
"59 612 LINE"
);
}
);
width = 186;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 660 LINE",
"34 738 LINE",
"21 738 LINE",
"6 660 LINE"
);
}
);
width = 39;
}
);
unicode = 00B4;
},
{
color = 4;
glyphname = breve;
lastChange = "2020-10-04 17:23:43 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 7}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 9}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 9}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 4}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"96 612 LINE",
"136 657 LINE",
"136 730 LINE",
"80 730 LINE",
"80 651 LINE",
"68 651 LINE",
"68 730 LINE",
"12 730 LINE",
"12 657 LINE",
"52 612 LINE"
);
}
);
width = 147;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"31 612 LINE",
"39 620 LINE",
"39 690 LINE",
"27 690 LINE",
"27 624 LINE",
"21 624 LINE",
"21 690 LINE",
"9 690 LINE",
"9 620 LINE",
"17 612 LINE"
);
}
);
width = 48;
}
);
unicode = 02D8;
},
{
color = 4;
glyphname = caron;
lastChange = "2020-10-04 17:24:51 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{610, 80}";
type = Stem;
},
{
horizontal = 1;
place = "{610, 39}";
type = Stem;
},
{
place = "{12, 56}";
type = Stem;
},
{
place = "{80, 56}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"44 612 LINE",
"103 612 LINE",
"141 730 LINE",
"86 730 LINE",
"74 646 LINE",
"73 646 LINE",
"60 730 LINE",
"6 730 LINE"
);
}
);
width = 148;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"21 660 LINE",
"27 660 LINE",
"42 738 LINE",
"34 738 LINE",
"24 685 LINE",
"24 685 LINE",
"14 738 LINE",
"6 738 LINE"
);
}
);
width = 48;
}
);
unicode = 02C7;
},
{
color = 4;
glyphname = cedilla;
lastChange = "2020-10-04 16:39:21 +0000";
layers = (
{
hints = (
{
horizontal = 1;
place = "{-124, 50}";
type = Stem;
},
{
horizontal = 1;
place = "{-62, 72}";
type = Stem;
},
{
place = "{6, 80}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"86 -79 LINE",
"86 -12 LINE",
"54 -12 LINE",
"54 10 LINE",
"6 10 LINE",
"6 -62 LINE",
"47 -62 LINE",
"47 -74 LINE",
"6 -74 LINE",
"6 -124 LINE",
"46 -124 LINE"
);
}
);
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"23 -40 LINE",
"23 -12 LINE",
"18 -12 LINE",
"18 11 LINE",
"6 11 LINE",
"6 -24 LINE",
"11 -24 LINE",
"11 -36 LINE",
"2 -36 LINE",
"2 -48 LINE",
"15 -48 LINE"
);
}
);
width = 29;
}
);
unicode = 00B8;
},
{
color = 4;
glyphname = circumflex;
lastChange = "2020-10-04 17:24:10 +0000";
layers = (
{
guideLines = (
{
angle = 270;
position = "{193, 612}";
},
{
angle = 270;
position = "{286, 612}";
}
);
hints = (
{
horizontal = 1;
place = "{686, 44}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"68 612 LINE",
"73 696 LINE",
"74 696 LINE",
"79 612 LINE",
"129 612 LINE",
"103 730 LINE",
"44 730 LINE",
"18 612 LINE"
);
}
);
width = 148;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"14 660 LINE",
"24 713 LINE",
"24 713 LINE",
"34 660 LINE",
"42 660 LINE",
"27 738 LINE",
"21 738 LINE",
"6 660 LINE"
);
}
);
width = 48;
}
);
unicode = 02C6;
},
{
color = 4;
glyphname = dieresis;
lastChange = "2020-09-25 16:15:41 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
},
{
origin = "{1, 0}";
target = "{1, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"45 612 LINE",
"85 612 LINE",
"85 730 LINE",
"45 730 LINE"
);
},
{
closed = 1;
nodes = (
"97 612 LINE",
"137 612 LINE",
"137 730 LINE",
"97 730 LINE"
);
}
);
width = 178;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 660 LINE",
"18 660 LINE",
"18 738 LINE",
"6 738 LINE"
);
},
{
closed = 1;
nodes = (
"24 660 LINE",
"36 660 LINE",
"36 738 LINE",
"24 738 LINE"
);
}
);
width = 42;
}
);
unicode = 00A8;
},
{
color = 4;
glyphname = dotaccent;
lastChange = "2020-09-25 16:15:44 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{0, 3}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 612 LINE",
"83 612 LINE",
"83 690 LINE",
"6 690 LINE"
);
}
);
width = 89;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 660 LINE",
"18 660 LINE",
"18 690 LINE",
"6 690 LINE"
);
}
);
width = 24;
}
);
unicode = 02D9;
},
{
color = 4;
glyphname = grave;
lastChange = "2020-06-25 12:47:57 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 197, 0}";
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
width = 186;
},
{
components = (
{
name = acute;
transform = "{-1, 0, 0, 1, 47, 0}";
}
);
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
width = 47;
}
);
unicode = 0060;
},
{
color = 4;
glyphname = hungarumlaut;
lastChange = "2020-10-04 17:02:23 +0000";
layers = (
{
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"16 612 LINE",
"66 612 LINE",
"101 730 LINE",
"41 730 LINE"
);
},
{
closed = 1;
nodes = (
"78 612 LINE",
"128 612 LINE",
"173 730 LINE",
"113 730 LINE"
);
}
);
width = 226;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"11 660 LINE",
"17 660 LINE",
"30 738 LINE",
"18 738 LINE"
);
},
{
closed = 1;
nodes = (
"29 660 LINE",
"35 660 LINE",
"52 738 LINE",
"40 738 LINE"
);
}
);
width = 76;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
color = 4;
glyphname = macron;
lastChange = "2020-09-25 16:15:58 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 3}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 1}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"6 645 LINE",
"138 645 LINE",
"138 690 LINE",
"6 690 LINE"
);
}
);
width = 144;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"6 678 LINE",
"42 678 LINE",
"42 690 LINE",
"6 690 LINE"
);
}
);
width = 48;
}
);
unicode = 00AF;
},
{
color = 4;
glyphname = ogonek;
lastChange = "2020-10-04 16:38:27 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{1, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 1}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{1, 8}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"21 10 LINE",
"21 -65 LINE",
"69 -65 LINE",
"69 10 LINE"
);
},
{
closed = 1;
nodes = (
"46 -130 LINE",
"69 -130 LINE",
"69 -77 LINE",
"45 -77 LINE",
"45 -65 LINE",
"69 -65 LINE",
"69 -12 LINE",
"6 -12 LINE",
"6 -85 LINE"
);
}
);
width = 92;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"30 11 LINE",
"30 -23 LINE",
"42 -23 LINE",
"42 11 LINE"
);
},
{
closed = 1;
nodes = (
"26 -47 LINE",
"42 -47 LINE",
"42 -35 LINE",
"30 -35 LINE",
"30 -23 LINE",
"42 -23 LINE",
"42 -11 LINE",
"18 -11 LINE",
"18 -39 LINE"
);
}
);
width = 65;
}
);
unicode = 02DB;
},
{
color = 4;
glyphname = ring;
lastChange = "2020-10-04 17:24:32 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 0}";
target = "{1, 3}";
type = Stem;
},
{
horizontal = 1;
origin = "{1, 0}";
target = "{0, 5}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{1, 3}";
type = Stem;
},
{
origin = "{1, 2}";
target = "{0, 2}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"253 612 LINE",
"306 612 LINE",
"326 632 LINE",
"326 710 LINE",
"306 730 LINE",
"253 730 LINE",
"233 710 LINE",
"233 632 LINE"
);
},
{
closed = 1;
nodes = (
"269 697 LINE",
"290 697 LINE",
"290 646 LINE",
"269 646 LINE"
);
}
);
width = 600;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"19 654 LINE",
"33 654 LINE",
"41 662 LINE",
"41 724 LINE",
"33 732 LINE",
"19 732 LINE",
"11 724 LINE",
"11 662 LINE"
);
},
{
closed = 1;
nodes = (
"23 720 LINE",
"29 720 LINE",
"29 666 LINE",
"23 666 LINE"
);
}
);
width = 52;
}
);
unicode = 02DA;
},
{
color = 4;
glyphname = tilde;
lastChange = "2020-09-25 16:16:15 +0000";
layers = (
{
hints = (
{
horizontal = 1;
origin = "{0, 11}";
target = "{0, 8}";
type = Stem;
},
{
horizontal = 1;
origin = "{0, 10}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 11}";
target = "{0, 8}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 3}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"247 612 LINE",
"247 671 LINE",
"259 671 LINE",
"259 612 LINE",
"289 612 LINE",
"289 730 LINE",
"239 730 LINE",
"239 671 LINE",
"227 671 LINE",
"227 730 LINE",
"197 730 LINE",
"197 612 LINE"
);
}
);
width = 600;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"26 660 LINE",
"26 730 LINE",
"29 730 LINE",
"29 660 LINE",
"38 660 LINE",
"38 738 LINE",
"18 738 LINE",
"18 668 LINE",
"15 668 LINE",
"15 738 LINE",
"6 738 LINE",
"6 660 LINE"
);
}
);
width = 44;
}
);
unicode = 02DC;
},
{
color = 4;
glyphname = circumflex.001;
lastChange = "2020-10-01 09:08:25 +0000";
layers = (
{
guideLines = (
{
angle = 270;
position = "{193, 612}";
},
{
angle = 270;
position = "{286, 612}";
}
);
hints = (
{
horizontal = 1;
place = "{686, 44}";
type = Stem;
},
{
origin = "{0, 7}";
target = "{0, 0}";
type = Stem;
},
{
origin = "{0, 0}";
target = "{0, 4}";
type = Stem;
}
);
layerId = "B64BEB12-03E1-41C2-8D0F-395888C0A328";
paths = (
{
closed = 1;
nodes = (
"68 612 LINE",
"91 696 LINE",
"92 696 LINE",
"79 612 LINE",
"120 612 LINE",
"128 730 LINE",
"69 730 LINE",
"27 612 LINE"
);
}
);
width = 156;
},
{
layerId = "DBA696BD-A337-48FC-9DA1-CD58B2C81FFB";
paths = (
{
closed = 1;
nodes = (
"12 660 LINE",
"36 713 LINE",
"36 713 LINE",
"38 660 LINE",
"44 660 LINE",
"45 738 LINE",
"38 738 LINE",
"6 660 LINE"
);
}
);
width = 50;
}
);
}
);
instances = (
{
interpolationWeight = 50;
interpolationWidth = 1;
instanceInterpolations = {
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 1;
};
name = "Light Condensed";
weightClass = Light;
},
{
interpolationWeight = 83;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.05077;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.94923;
};
name = "Regular Condensed";
},
{
interpolationWeight = 143;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.14308;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.85692;
};
name = "Medium Condensed";
weightClass = Medium;
},
{
interpolationWeight = 230;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.27692;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.72308;
};
name = "Demibold Condensed";
weightClass = DemiBold;
},
{
interpolationWeight = 337;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.44154;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.55846;
};
name = "Semibold Condensed";
weightClass = SemiBold;
},
{
interpolationWeight = 461;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.63231;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.36769;
};
name = "Bold Condensed";
weightClass = Bold;
},
{
interpolationWeight = 589;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 0.82923;
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = 0.17077;
};
name = "Ultrabold Condensed";
weightClass = UltraBold;
},
{
interpolationWeight = 700;
interpolationWidth = 1;
instanceInterpolations = {
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = 1;
};
name = "Extrabold Condensed";
weightClass = ExtraBold;
}
);
kerning = {
"DBA696BD-A337-48FC-9DA1-CD58B2C81FFB" = {
percent = {
perthousand = -48;
};
seven = {
period = -11;
};
};
"B64BEB12-03E1-41C2-8D0F-395888C0A328" = {
F = {
E = 0;
};
S = {
braceright = 5;
};
bracketleft = {
p = 15;
};
comma = {
quotesinglbase = 0;
};
quotesinglbase = {
comma = 0;
};
quotesingle = {
a = -10;
d = -50;
};
s = {
s = 0;
};
seven = {
period = -42;
};
};
};
manufacturer = "Mateo Broillet / e-t-c typefoundry";
manufacturerURL = www.mateobroillet.ch;
unitsPerEm = 850;
versionMajor = 1;
versionMinor = 0;
}
